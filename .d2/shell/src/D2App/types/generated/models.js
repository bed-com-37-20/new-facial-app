/* eslint-disable @typescript-eslint/no-namespace */
/* eslint-disable @typescript-eslint/no-redeclare */
/* eslint-disable @typescript-eslint/array-type */
/* eslint-disable @typescript-eslint/consistent-type-definitions */
/* GENERATED BY https://github.com/Birkbjo/dhis2-open-api-ts */

export let AnalyticsPeriodBoundary;
(function (_AnalyticsPeriodBoundary) {
  let analyticsPeriodBoundaryType = /*#__PURE__*/function (analyticsPeriodBoundaryType) {
    analyticsPeriodBoundaryType["BEFORE_START_OF_REPORTING_PERIOD"] = "BEFORE_START_OF_REPORTING_PERIOD";
    analyticsPeriodBoundaryType["BEFORE_END_OF_REPORTING_PERIOD"] = "BEFORE_END_OF_REPORTING_PERIOD";
    analyticsPeriodBoundaryType["AFTER_START_OF_REPORTING_PERIOD"] = "AFTER_START_OF_REPORTING_PERIOD";
    analyticsPeriodBoundaryType["AFTER_END_OF_REPORTING_PERIOD"] = "AFTER_END_OF_REPORTING_PERIOD";
    return analyticsPeriodBoundaryType;
  }({});
  _AnalyticsPeriodBoundary.analyticsPeriodBoundaryType = analyticsPeriodBoundaryType;
  let offsetPeriodType = /*#__PURE__*/function (offsetPeriodType) {
    offsetPeriodType["BI_MONTHLY"] = "BiMonthly";
    offsetPeriodType["BI_WEEKLY"] = "BiWeekly";
    offsetPeriodType["DAILY"] = "Daily";
    offsetPeriodType["FINANCIAL_APRIL"] = "FinancialApril";
    offsetPeriodType["FINANCIAL_JULY"] = "FinancialJuly";
    offsetPeriodType["FINANCIAL_NOV"] = "FinancialNov";
    offsetPeriodType["FINANCIAL_OCT"] = "FinancialOct";
    offsetPeriodType["MONTHLY"] = "Monthly";
    offsetPeriodType["QUARTERLY"] = "Quarterly";
    offsetPeriodType["QUARTERLY_NOV"] = "QuarterlyNov";
    offsetPeriodType["SIX_MONTHLY_APRIL"] = "SixMonthlyApril";
    offsetPeriodType["SIX_MONTHLY_NOV"] = "SixMonthlyNov";
    offsetPeriodType["SIX_MONTHLY"] = "SixMonthly";
    offsetPeriodType["TWO_YEARLY"] = "TwoYearly";
    offsetPeriodType["WEEKLY"] = "Weekly";
    offsetPeriodType["WEEKLY_SATURDAY"] = "WeeklySaturday";
    offsetPeriodType["WEEKLY_SUNDAY"] = "WeeklySunday";
    offsetPeriodType["WEEKLY_THURSDAY"] = "WeeklyThursday";
    offsetPeriodType["WEEKLY_WEDNESDAY"] = "WeeklyWednesday";
    offsetPeriodType["YEARLY"] = "Yearly";
    return offsetPeriodType;
  }({});
  _AnalyticsPeriodBoundary.offsetPeriodType = offsetPeriodType;
})(AnalyticsPeriodBoundary || (AnalyticsPeriodBoundary = {}));
export let AnalyticsTableHook;
(function (_AnalyticsTableHook) {
  let analyticsTableType = /*#__PURE__*/function (analyticsTableType) {
    analyticsTableType["DATA_VALUE"] = "DATA_VALUE";
    analyticsTableType["COMPLETENESS"] = "COMPLETENESS";
    analyticsTableType["COMPLETENESS_TARGET"] = "COMPLETENESS_TARGET";
    analyticsTableType["ORG_UNIT_TARGET"] = "ORG_UNIT_TARGET";
    analyticsTableType["EVENT"] = "EVENT";
    analyticsTableType["ENROLLMENT"] = "ENROLLMENT";
    analyticsTableType["OWNERSHIP"] = "OWNERSHIP";
    analyticsTableType["VALIDATION_RESULT"] = "VALIDATION_RESULT";
    analyticsTableType["TRACKED_ENTITY_INSTANCE_EVENTS"] = "TRACKED_ENTITY_INSTANCE_EVENTS";
    analyticsTableType["TRACKED_ENTITY_INSTANCE_ENROLLMENTS"] = "TRACKED_ENTITY_INSTANCE_ENROLLMENTS";
    analyticsTableType["TRACKED_ENTITY_INSTANCE"] = "TRACKED_ENTITY_INSTANCE";
    return analyticsTableType;
  }({});
  _AnalyticsTableHook.analyticsTableType = analyticsTableType;
  let phase = /*#__PURE__*/function (phase) {
    phase["RESOURCE_TABLE_POPULATED"] = "RESOURCE_TABLE_POPULATED";
    phase["ANALYTICS_TABLE_POPULATED"] = "ANALYTICS_TABLE_POPULATED";
    return phase;
  }({});
  _AnalyticsTableHook.phase = phase;
  let resourceTableType = /*#__PURE__*/function (resourceTableType) {
    resourceTableType["ORG_UNIT_STRUCTURE"] = "ORG_UNIT_STRUCTURE";
    resourceTableType["DATA_SET_ORG_UNIT_CATEGORY"] = "DATA_SET_ORG_UNIT_CATEGORY";
    resourceTableType["CATEGORY_OPTION_COMBO_NAME"] = "CATEGORY_OPTION_COMBO_NAME";
    resourceTableType["DATA_ELEMENT_GROUP_SET_STRUCTURE"] = "DATA_ELEMENT_GROUP_SET_STRUCTURE";
    resourceTableType["INDICATOR_GROUP_SET_STRUCTURE"] = "INDICATOR_GROUP_SET_STRUCTURE";
    resourceTableType["ORG_UNIT_GROUP_SET_STRUCTURE"] = "ORG_UNIT_GROUP_SET_STRUCTURE";
    resourceTableType["CATEGORY_STRUCTURE"] = "CATEGORY_STRUCTURE";
    resourceTableType["DATA_ELEMENT_STRUCTURE"] = "DATA_ELEMENT_STRUCTURE";
    resourceTableType["PERIOD_STRUCTURE"] = "PERIOD_STRUCTURE";
    resourceTableType["DATE_PERIOD_STRUCTURE"] = "DATE_PERIOD_STRUCTURE";
    resourceTableType["DATA_ELEMENT_CATEGORY_OPTION_COMBO"] = "DATA_ELEMENT_CATEGORY_OPTION_COMBO";
    resourceTableType["DATA_APPROVAL_REMAP_LEVEL"] = "DATA_APPROVAL_REMAP_LEVEL";
    resourceTableType["DATA_APPROVAL_MIN_LEVEL"] = "DATA_APPROVAL_MIN_LEVEL";
    return resourceTableType;
  }({});
  _AnalyticsTableHook.resourceTableType = resourceTableType;
})(AnalyticsTableHook || (AnalyticsTableHook = {}));
export let ApiToken;
(function (_ApiToken) {
  let type = /*#__PURE__*/function (type) {
    type["PERSONAL_ACCESS_TOKEN_V1"] = "PERSONAL_ACCESS_TOKEN_V1";
    type["PERSONAL_ACCESS_TOKEN_V2"] = "PERSONAL_ACCESS_TOKEN_V2";
    return type;
  }({});
  _ApiToken.type = type;
})(ApiToken || (ApiToken = {}));
export let App;
(function (_App) {
  let appState = /*#__PURE__*/function (appState) {
    appState["OK"] = "OK";
    appState["INVALID_BUNDLED_APP_OVERRIDE"] = "INVALID_BUNDLED_APP_OVERRIDE";
    appState["INVALID_CORE_APP"] = "INVALID_CORE_APP";
    appState["NAMESPACE_TAKEN"] = "NAMESPACE_TAKEN";
    appState["INVALID_ZIP_FORMAT"] = "INVALID_ZIP_FORMAT";
    appState["MISSING_MANIFEST"] = "MISSING_MANIFEST";
    appState["INVALID_MANIFEST_JSON"] = "INVALID_MANIFEST_JSON";
    appState["INSTALLATION_FAILED"] = "INSTALLATION_FAILED";
    appState["NOT_FOUND"] = "NOT_FOUND";
    appState["MISSING_SYSTEM_BASE_URL"] = "MISSING_SYSTEM_BASE_URL";
    appState["APPROVED"] = "APPROVED";
    appState["PENDING"] = "PENDING";
    appState["NOT_APPROVED"] = "NOT_APPROVED";
    appState["DELETION_IN_PROGRESS"] = "DELETION_IN_PROGRESS";
    return appState;
  }({});
  _App.appState = appState;
  let appStorageSource = /*#__PURE__*/function (appStorageSource) {
    appStorageSource["LOCAL"] = "LOCAL";
    appStorageSource["JCLOUDS"] = "JCLOUDS";
    return appStorageSource;
  }({});
  _App.appStorageSource = appStorageSource;
  let appType = /*#__PURE__*/function (appType) {
    appType["APP"] = "APP";
    appType["RESOURCE"] = "RESOURCE";
    appType["DASHBOARD_WIDGET"] = "DASHBOARD_WIDGET";
    appType["TRACKER_DASHBOARD_WIDGET"] = "TRACKER_DASHBOARD_WIDGET";
    return appType;
  }({});
  _App.appType = appType;
})(App || (App = {}));
export let ApprovalStatusDto;
(function (_ApprovalStatusDto) {
  let state = /*#__PURE__*/function (state) {
    state["UNAPPROVABLE"] = "UNAPPROVABLE";
    state["UNAPPROVED_ABOVE"] = "UNAPPROVED_ABOVE";
    state["UNAPPROVED_WAITING"] = "UNAPPROVED_WAITING";
    state["UNAPPROVED_READY"] = "UNAPPROVED_READY";
    state["APPROVED_ABOVE"] = "APPROVED_ABOVE";
    state["APPROVED_HERE"] = "APPROVED_HERE";
    state["ACCEPTED_HERE"] = "ACCEPTED_HERE";
    return state;
  }({});
  _ApprovalStatusDto.state = state;
})(ApprovalStatusDto || (ApprovalStatusDto = {}));
export let Attribute;
(function (_Attribute) {
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["LIST"] = "LIST";
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _Attribute.valueType = valueType;
})(Attribute || (Attribute = {}));
export let AttributeInfo;
(function (_AttributeInfo) {
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _AttributeInfo.valueType = valueType;
})(AttributeInfo || (AttributeInfo = {}));
export let AxisV2;
(function (_AxisV) {
  let type = /*#__PURE__*/function (type) {
    type["DOMAIN"] = "DOMAIN";
    type["RANGE"] = "RANGE";
    return type;
  }({});
  _AxisV.type = type;
})(AxisV2 || (AxisV2 = {}));
export let Category;
(function (_Category) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _Category.aggregationType = aggregationType;
  let dataDimensionType = /*#__PURE__*/function (dataDimensionType) {
    dataDimensionType["DISAGGREGATION"] = "DISAGGREGATION";
    dataDimensionType["ATTRIBUTE"] = "ATTRIBUTE";
    return dataDimensionType;
  }({});
  _Category.dataDimensionType = dataDimensionType;
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _Category.valueType = valueType;
})(Category || (Category = {}));
export let CategoryCombo;
(function (_CategoryCombo) {
  let dataDimensionType = /*#__PURE__*/function (dataDimensionType) {
    dataDimensionType["DISAGGREGATION"] = "DISAGGREGATION";
    dataDimensionType["ATTRIBUTE"] = "ATTRIBUTE";
    return dataDimensionType;
  }({});
  _CategoryCombo.dataDimensionType = dataDimensionType;
})(CategoryCombo || (CategoryCombo = {}));
export let CategoryOption;
(function (_CategoryOption) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _CategoryOption.aggregationType = aggregationType;
})(CategoryOption || (CategoryOption = {}));
export let CategoryOptionCombo;
(function (_CategoryOptionCombo) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _CategoryOptionCombo.aggregationType = aggregationType;
  let dimensionItemType = /*#__PURE__*/function (dimensionItemType) {
    dimensionItemType["DATA_ELEMENT"] = "DATA_ELEMENT";
    dimensionItemType["DATA_ELEMENT_OPERAND"] = "DATA_ELEMENT_OPERAND";
    dimensionItemType["INDICATOR"] = "INDICATOR";
    dimensionItemType["REPORTING_RATE"] = "REPORTING_RATE";
    dimensionItemType["PROGRAM_DATA_ELEMENT"] = "PROGRAM_DATA_ELEMENT";
    dimensionItemType["PROGRAM_ATTRIBUTE"] = "PROGRAM_ATTRIBUTE";
    dimensionItemType["PROGRAM_INDICATOR"] = "PROGRAM_INDICATOR";
    dimensionItemType["PERIOD"] = "PERIOD";
    dimensionItemType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    dimensionItemType["CATEGORY_OPTION"] = "CATEGORY_OPTION";
    dimensionItemType["OPTION_GROUP"] = "OPTION_GROUP";
    dimensionItemType["DATA_ELEMENT_GROUP"] = "DATA_ELEMENT_GROUP";
    dimensionItemType["ORGANISATION_UNIT_GROUP"] = "ORGANISATION_UNIT_GROUP";
    dimensionItemType["CATEGORY_OPTION_GROUP"] = "CATEGORY_OPTION_GROUP";
    dimensionItemType["EXPRESSION_DIMENSION_ITEM"] = "EXPRESSION_DIMENSION_ITEM";
    dimensionItemType["SUBEXPRESSION_DIMENSION_ITEM"] = "SUBEXPRESSION_DIMENSION_ITEM";
    return dimensionItemType;
  }({});
  _CategoryOptionCombo.dimensionItemType = dimensionItemType;
})(CategoryOptionCombo || (CategoryOptionCombo = {}));
export let CategoryOptionGroup;
(function (_CategoryOptionGroup) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _CategoryOptionGroup.aggregationType = aggregationType;
  let dataDimensionType = /*#__PURE__*/function (dataDimensionType) {
    dataDimensionType["DISAGGREGATION"] = "DISAGGREGATION";
    dataDimensionType["ATTRIBUTE"] = "ATTRIBUTE";
    return dataDimensionType;
  }({});
  _CategoryOptionGroup.dataDimensionType = dataDimensionType;
})(CategoryOptionGroup || (CategoryOptionGroup = {}));
export let CategoryOptionGroupSet;
(function (_CategoryOptionGroupSet) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _CategoryOptionGroupSet.aggregationType = aggregationType;
  let dataDimensionType = /*#__PURE__*/function (dataDimensionType) {
    dataDimensionType["DISAGGREGATION"] = "DISAGGREGATION";
    dataDimensionType["ATTRIBUTE"] = "ATTRIBUTE";
    return dataDimensionType;
  }({});
  _CategoryOptionGroupSet.dataDimensionType = dataDimensionType;
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _CategoryOptionGroupSet.valueType = valueType;
})(CategoryOptionGroupSet || (CategoryOptionGroupSet = {}));
export let Config;
(function (_Config) {
  let inclusionStrategy = /*#__PURE__*/function (inclusionStrategy) {
    inclusionStrategy["ALWAYS"] = "ALWAYS";
    inclusionStrategy["NON_NULL"] = "NON_NULL";
    inclusionStrategy["NON_EMPTY"] = "NON_EMPTY";
    return inclusionStrategy;
  }({});
  _Config.inclusionStrategy = inclusionStrategy;
})(Config || (Config = {}));
export let Configuration;
(function (_Configuration) {
  let infrastructuralPeriodType = /*#__PURE__*/function (infrastructuralPeriodType) {
    infrastructuralPeriodType["BI_MONTHLY"] = "BiMonthly";
    infrastructuralPeriodType["BI_WEEKLY"] = "BiWeekly";
    infrastructuralPeriodType["DAILY"] = "Daily";
    infrastructuralPeriodType["FINANCIAL_APRIL"] = "FinancialApril";
    infrastructuralPeriodType["FINANCIAL_JULY"] = "FinancialJuly";
    infrastructuralPeriodType["FINANCIAL_NOV"] = "FinancialNov";
    infrastructuralPeriodType["FINANCIAL_OCT"] = "FinancialOct";
    infrastructuralPeriodType["MONTHLY"] = "Monthly";
    infrastructuralPeriodType["QUARTERLY"] = "Quarterly";
    infrastructuralPeriodType["QUARTERLY_NOV"] = "QuarterlyNov";
    infrastructuralPeriodType["SIX_MONTHLY_APRIL"] = "SixMonthlyApril";
    infrastructuralPeriodType["SIX_MONTHLY_NOV"] = "SixMonthlyNov";
    infrastructuralPeriodType["SIX_MONTHLY"] = "SixMonthly";
    infrastructuralPeriodType["TWO_YEARLY"] = "TwoYearly";
    infrastructuralPeriodType["WEEKLY"] = "Weekly";
    infrastructuralPeriodType["WEEKLY_SATURDAY"] = "WeeklySaturday";
    infrastructuralPeriodType["WEEKLY_SUNDAY"] = "WeeklySunday";
    infrastructuralPeriodType["WEEKLY_THURSDAY"] = "WeeklyThursday";
    infrastructuralPeriodType["WEEKLY_WEDNESDAY"] = "WeeklyWednesday";
    infrastructuralPeriodType["YEARLY"] = "Yearly";
    return infrastructuralPeriodType;
  }({});
  _Configuration.infrastructuralPeriodType = infrastructuralPeriodType;
})(Configuration || (Configuration = {}));
export let CustomDataEntryFormDto;
(function (_CustomDataEntryFormDto) {
  let displayDensity = /*#__PURE__*/function (displayDensity) {
    displayDensity["COMFORTABLE"] = "COMFORTABLE";
    displayDensity["NORMAL"] = "NORMAL";
    displayDensity["COMPACT"] = "COMPACT";
    displayDensity["NONE"] = "NONE";
    return displayDensity;
  }({});
  _CustomDataEntryFormDto.displayDensity = displayDensity;
})(CustomDataEntryFormDto || (CustomDataEntryFormDto = {}));
export let DashboardItem;
(function (_DashboardItem) {
  let shape = /*#__PURE__*/function (shape) {
    shape["NORMAL"] = "NORMAL";
    shape["DOUBLE_WIDTH"] = "DOUBLE_WIDTH";
    shape["FULL_WIDTH"] = "FULL_WIDTH";
    return shape;
  }({});
  _DashboardItem.shape = shape;
  let type = /*#__PURE__*/function (type) {
    type["VISUALIZATION"] = "VISUALIZATION";
    type["EVENT_VISUALIZATION"] = "EVENT_VISUALIZATION";
    type["EVENT_CHART"] = "EVENT_CHART";
    type["MAP"] = "MAP";
    type["EVENT_REPORT"] = "EVENT_REPORT";
    type["USERS"] = "USERS";
    type["REPORTS"] = "REPORTS";
    type["RESOURCES"] = "RESOURCES";
    type["TEXT"] = "TEXT";
    type["MESSAGES"] = "MESSAGES";
    type["APP"] = "APP";
    return type;
  }({});
  _DashboardItem.type = type;
})(DashboardItem || (DashboardItem = {}));
export let DataApprovalWorkflow;
(function (_DataApprovalWorkflow) {
  let periodType = /*#__PURE__*/function (periodType) {
    periodType["BI_MONTHLY"] = "BiMonthly";
    periodType["BI_WEEKLY"] = "BiWeekly";
    periodType["DAILY"] = "Daily";
    periodType["FINANCIAL_APRIL"] = "FinancialApril";
    periodType["FINANCIAL_JULY"] = "FinancialJuly";
    periodType["FINANCIAL_NOV"] = "FinancialNov";
    periodType["FINANCIAL_OCT"] = "FinancialOct";
    periodType["MONTHLY"] = "Monthly";
    periodType["QUARTERLY"] = "Quarterly";
    periodType["QUARTERLY_NOV"] = "QuarterlyNov";
    periodType["SIX_MONTHLY_APRIL"] = "SixMonthlyApril";
    periodType["SIX_MONTHLY_NOV"] = "SixMonthlyNov";
    periodType["SIX_MONTHLY"] = "SixMonthly";
    periodType["TWO_YEARLY"] = "TwoYearly";
    periodType["WEEKLY"] = "Weekly";
    periodType["WEEKLY_SATURDAY"] = "WeeklySaturday";
    periodType["WEEKLY_SUNDAY"] = "WeeklySunday";
    periodType["WEEKLY_THURSDAY"] = "WeeklyThursday";
    periodType["WEEKLY_WEDNESDAY"] = "WeeklyWednesday";
    periodType["YEARLY"] = "Yearly";
    return periodType;
  }({});
  _DataApprovalWorkflow.periodType = periodType;
})(DataApprovalWorkflow || (DataApprovalWorkflow = {}));
export let DataDimensionItem;
(function (_DataDimensionItem) {
  let dataDimensionItemType = /*#__PURE__*/function (dataDimensionItemType) {
    dataDimensionItemType["INDICATOR"] = "INDICATOR";
    dataDimensionItemType["DATA_ELEMENT"] = "DATA_ELEMENT";
    dataDimensionItemType["DATA_ELEMENT_OPERAND"] = "DATA_ELEMENT_OPERAND";
    dataDimensionItemType["REPORTING_RATE"] = "REPORTING_RATE";
    dataDimensionItemType["PROGRAM_INDICATOR"] = "PROGRAM_INDICATOR";
    dataDimensionItemType["PROGRAM_DATA_ELEMENT"] = "PROGRAM_DATA_ELEMENT";
    dataDimensionItemType["PROGRAM_ATTRIBUTE"] = "PROGRAM_ATTRIBUTE";
    dataDimensionItemType["EXPRESSION_DIMENSION_ITEM"] = "EXPRESSION_DIMENSION_ITEM";
    dataDimensionItemType["SUBEXPRESSION_DIMENSION_ITEM"] = "SUBEXPRESSION_DIMENSION_ITEM";
    dataDimensionItemType["VALIDATION_RULE"] = "VALIDATION_RULE";
    return dataDimensionItemType;
  }({});
  _DataDimensionItem.dataDimensionItemType = dataDimensionItemType;
})(DataDimensionItem || (DataDimensionItem = {}));
export let DataElement;
(function (_DataElement) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _DataElement.aggregationType = aggregationType;
  let domainType = /*#__PURE__*/function (domainType) {
    domainType["AGGREGATE"] = "AGGREGATE";
    domainType["TRACKER"] = "TRACKER";
    return domainType;
  }({});
  _DataElement.domainType = domainType;
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _DataElement.valueType = valueType;
})(DataElement || (DataElement = {}));
export let DataElementGroupSet;
(function (_DataElementGroupSet) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _DataElementGroupSet.aggregationType = aggregationType;
  let dataDimensionType = /*#__PURE__*/function (dataDimensionType) {
    dataDimensionType["DISAGGREGATION"] = "DISAGGREGATION";
    dataDimensionType["ATTRIBUTE"] = "ATTRIBUTE";
    return dataDimensionType;
  }({});
  _DataElementGroupSet.dataDimensionType = dataDimensionType;
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _DataElementGroupSet.valueType = valueType;
})(DataElementGroupSet || (DataElementGroupSet = {}));
export let DataEntryForm;
(function (_DataEntryForm) {
  let style = /*#__PURE__*/function (style) {
    style["COMFORTABLE"] = "COMFORTABLE";
    style["NORMAL"] = "NORMAL";
    style["COMPACT"] = "COMPACT";
    style["NONE"] = "NONE";
    return style;
  }({});
  _DataEntryForm.style = style;
})(DataEntryForm || (DataEntryForm = {}));
export let DataIntegrityCheck;
(function (_DataIntegrityCheck) {
  let severity = /*#__PURE__*/function (severity) {
    severity["INFO"] = "INFO";
    severity["WARNING"] = "WARNING";
    severity["SEVERE"] = "SEVERE";
    severity["CRITICAL"] = "CRITICAL";
    return severity;
  }({});
  _DataIntegrityCheck.severity = severity;
})(DataIntegrityCheck || (DataIntegrityCheck = {}));
export let DataIntegrityJobParameters;
(function (_DataIntegrityJobParameters) {
  let type = /*#__PURE__*/function (type) {
    type["REPORT"] = "REPORT";
    type["SUMMARY"] = "SUMMARY";
    type["DETAILS"] = "DETAILS";
    return type;
  }({});
  _DataIntegrityJobParameters.type = type;
})(DataIntegrityJobParameters || (DataIntegrityJobParameters = {}));
export let DataSet;
(function (_DataSet) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _DataSet.aggregationType = aggregationType;
  let formType = /*#__PURE__*/function (formType) {
    formType["DEFAULT"] = "DEFAULT";
    formType["CUSTOM"] = "CUSTOM";
    formType["SECTION"] = "SECTION";
    formType["SECTION_MULTIORG"] = "SECTION_MULTIORG";
    return formType;
  }({});
  _DataSet.formType = formType;
  let periodType = /*#__PURE__*/function (periodType) {
    periodType["BI_MONTHLY"] = "BiMonthly";
    periodType["BI_WEEKLY"] = "BiWeekly";
    periodType["DAILY"] = "Daily";
    periodType["FINANCIAL_APRIL"] = "FinancialApril";
    periodType["FINANCIAL_JULY"] = "FinancialJuly";
    periodType["FINANCIAL_NOV"] = "FinancialNov";
    periodType["FINANCIAL_OCT"] = "FinancialOct";
    periodType["MONTHLY"] = "Monthly";
    periodType["QUARTERLY"] = "Quarterly";
    periodType["QUARTERLY_NOV"] = "QuarterlyNov";
    periodType["SIX_MONTHLY_APRIL"] = "SixMonthlyApril";
    periodType["SIX_MONTHLY_NOV"] = "SixMonthlyNov";
    periodType["SIX_MONTHLY"] = "SixMonthly";
    periodType["TWO_YEARLY"] = "TwoYearly";
    periodType["WEEKLY"] = "Weekly";
    periodType["WEEKLY_SATURDAY"] = "WeeklySaturday";
    periodType["WEEKLY_SUNDAY"] = "WeeklySunday";
    periodType["WEEKLY_THURSDAY"] = "WeeklyThursday";
    periodType["WEEKLY_WEDNESDAY"] = "WeeklyWednesday";
    periodType["YEARLY"] = "Yearly";
    return periodType;
  }({});
  _DataSet.periodType = periodType;
})(DataSet || (DataSet = {}));
export let DataSetNotificationTemplate;
(function (_DataSetNotificationTemplate) {
  let dataSetNotificationTrigger = /*#__PURE__*/function (dataSetNotificationTrigger) {
    dataSetNotificationTrigger["DATA_SET_COMPLETION"] = "DATA_SET_COMPLETION";
    dataSetNotificationTrigger["SCHEDULED_DAYS"] = "SCHEDULED_DAYS";
    return dataSetNotificationTrigger;
  }({});
  _DataSetNotificationTemplate.dataSetNotificationTrigger = dataSetNotificationTrigger;
  let notificationRecipient = /*#__PURE__*/function (notificationRecipient) {
    notificationRecipient["ORGANISATION_UNIT_CONTACT"] = "ORGANISATION_UNIT_CONTACT";
    notificationRecipient["USER_GROUP"] = "USER_GROUP";
    return notificationRecipient;
  }({});
  _DataSetNotificationTemplate.notificationRecipient = notificationRecipient;
  let sendStrategy = /*#__PURE__*/function (sendStrategy) {
    sendStrategy["COLLECTIVE_SUMMARY"] = "COLLECTIVE_SUMMARY";
    sendStrategy["SINGLE_NOTIFICATION"] = "SINGLE_NOTIFICATION";
    return sendStrategy;
  }({});
  _DataSetNotificationTemplate.sendStrategy = sendStrategy;
})(DataSetNotificationTemplate || (DataSetNotificationTemplate = {}));
export let DataValueAuditDto;
(function (_DataValueAuditDto) {
  let auditType = /*#__PURE__*/function (auditType) {
    auditType["CREATE"] = "CREATE";
    auditType["UPDATE"] = "UPDATE";
    auditType["DELETE"] = "DELETE";
    auditType["READ"] = "READ";
    auditType["SEARCH"] = "SEARCH";
    return auditType;
  }({});
  _DataValueAuditDto.auditType = auditType;
})(DataValueAuditDto || (DataValueAuditDto = {}));
export let DataValuesDto;
(function (_DataValuesDto) {
  let lockStatus = /*#__PURE__*/function (lockStatus) {
    lockStatus["LOCKED"] = "LOCKED";
    lockStatus["APPROVED"] = "APPROVED";
    lockStatus["OPEN"] = "OPEN";
    return lockStatus;
  }({});
  _DataValuesDto.lockStatus = lockStatus;
})(DataValuesDto || (DataValuesDto = {}));
export let DateFilterPeriod;
(function (_DateFilterPeriod) {
  let period = /*#__PURE__*/function (period) {
    period["TODAY"] = "TODAY";
    period["YESTERDAY"] = "YESTERDAY";
    period["LAST_3_DAYS"] = "LAST_3_DAYS";
    period["LAST_7_DAYS"] = "LAST_7_DAYS";
    period["LAST_14_DAYS"] = "LAST_14_DAYS";
    period["LAST_30_DAYS"] = "LAST_30_DAYS";
    period["LAST_60_DAYS"] = "LAST_60_DAYS";
    period["LAST_90_DAYS"] = "LAST_90_DAYS";
    period["LAST_180_DAYS"] = "LAST_180_DAYS";
    period["THIS_MONTH"] = "THIS_MONTH";
    period["LAST_MONTH"] = "LAST_MONTH";
    period["THIS_BIMONTH"] = "THIS_BIMONTH";
    period["LAST_BIMONTH"] = "LAST_BIMONTH";
    period["THIS_QUARTER"] = "THIS_QUARTER";
    period["LAST_QUARTER"] = "LAST_QUARTER";
    period["THIS_SIX_MONTH"] = "THIS_SIX_MONTH";
    period["LAST_SIX_MONTH"] = "LAST_SIX_MONTH";
    period["WEEKS_THIS_YEAR"] = "WEEKS_THIS_YEAR";
    period["MONTHS_THIS_YEAR"] = "MONTHS_THIS_YEAR";
    period["BIMONTHS_THIS_YEAR"] = "BIMONTHS_THIS_YEAR";
    period["QUARTERS_THIS_YEAR"] = "QUARTERS_THIS_YEAR";
    period["THIS_YEAR"] = "THIS_YEAR";
    period["MONTHS_LAST_YEAR"] = "MONTHS_LAST_YEAR";
    period["QUARTERS_LAST_YEAR"] = "QUARTERS_LAST_YEAR";
    period["LAST_YEAR"] = "LAST_YEAR";
    period["LAST_5_YEARS"] = "LAST_5_YEARS";
    period["LAST_10_YEARS"] = "LAST_10_YEARS";
    period["LAST_12_MONTHS"] = "LAST_12_MONTHS";
    period["LAST_6_MONTHS"] = "LAST_6_MONTHS";
    period["LAST_3_MONTHS"] = "LAST_3_MONTHS";
    period["LAST_6_BIMONTHS"] = "LAST_6_BIMONTHS";
    period["LAST_4_QUARTERS"] = "LAST_4_QUARTERS";
    period["LAST_2_SIXMONTHS"] = "LAST_2_SIXMONTHS";
    period["THIS_FINANCIAL_YEAR"] = "THIS_FINANCIAL_YEAR";
    period["LAST_FINANCIAL_YEAR"] = "LAST_FINANCIAL_YEAR";
    period["LAST_5_FINANCIAL_YEARS"] = "LAST_5_FINANCIAL_YEARS";
    period["LAST_10_FINANCIAL_YEARS"] = "LAST_10_FINANCIAL_YEARS";
    period["THIS_WEEK"] = "THIS_WEEK";
    period["LAST_WEEK"] = "LAST_WEEK";
    period["THIS_BIWEEK"] = "THIS_BIWEEK";
    period["LAST_BIWEEK"] = "LAST_BIWEEK";
    period["LAST_4_WEEKS"] = "LAST_4_WEEKS";
    period["LAST_4_BIWEEKS"] = "LAST_4_BIWEEKS";
    period["LAST_12_WEEKS"] = "LAST_12_WEEKS";
    period["LAST_52_WEEKS"] = "LAST_52_WEEKS";
    return period;
  }({});
  _DateFilterPeriod.period = period;
  let type = /*#__PURE__*/function (type) {
    type["RELATIVE"] = "RELATIVE";
    type["ABSOLUTE"] = "ABSOLUTE";
    return type;
  }({});
  _DateFilterPeriod.type = type;
})(DateFilterPeriod || (DateFilterPeriod = {}));
export let Enrollment;
(function (_Enrollment) {
  let status = /*#__PURE__*/function (status) {
    status["ACTIVE"] = "ACTIVE";
    status["COMPLETED"] = "COMPLETED";
    status["CANCELLED"] = "CANCELLED";
    return status;
  }({});
  _Enrollment.status = status;
})(Enrollment || (Enrollment = {}));
export let EnrollmentInfo;
(function (_EnrollmentInfo) {
  let status = /*#__PURE__*/function (status) {
    status["ACTIVE"] = "ACTIVE";
    status["COMPLETED"] = "COMPLETED";
    status["CANCELLED"] = "CANCELLED";
    return status;
  }({});
  _EnrollmentInfo.status = status;
})(EnrollmentInfo || (EnrollmentInfo = {}));
export let Entity;
(function (_Entity) {
  let trackerType = /*#__PURE__*/function (trackerType) {
    trackerType["TRACKED_ENTITY"] = "TRACKED_ENTITY";
    trackerType["ENROLLMENT"] = "ENROLLMENT";
    trackerType["EVENT"] = "EVENT";
    trackerType["RELATIONSHIP"] = "RELATIONSHIP";
    return trackerType;
  }({});
  _Entity.trackerType = trackerType;
})(Entity || (Entity = {}));
export let EntityQueryCriteria;
(function (_EntityQueryCriteria) {
  let assignedUserMode = /*#__PURE__*/function (assignedUserMode) {
    assignedUserMode["CURRENT"] = "CURRENT";
    assignedUserMode["PROVIDED"] = "PROVIDED";
    assignedUserMode["NONE"] = "NONE";
    assignedUserMode["ANY"] = "ANY";
    assignedUserMode["ALL"] = "ALL";
    return assignedUserMode;
  }({});
  _EntityQueryCriteria.assignedUserMode = assignedUserMode;
  let enrollmentStatus = /*#__PURE__*/function (enrollmentStatus) {
    enrollmentStatus["ACTIVE"] = "ACTIVE";
    enrollmentStatus["COMPLETED"] = "COMPLETED";
    enrollmentStatus["CANCELLED"] = "CANCELLED";
    return enrollmentStatus;
  }({});
  _EntityQueryCriteria.enrollmentStatus = enrollmentStatus;
  let eventStatus = /*#__PURE__*/function (eventStatus) {
    eventStatus["ACTIVE"] = "ACTIVE";
    eventStatus["COMPLETED"] = "COMPLETED";
    eventStatus["VISITED"] = "VISITED";
    eventStatus["SCHEDULE"] = "SCHEDULE";
    eventStatus["OVERDUE"] = "OVERDUE";
    eventStatus["SKIPPED"] = "SKIPPED";
    return eventStatus;
  }({});
  _EntityQueryCriteria.eventStatus = eventStatus;
  let ouMode = /*#__PURE__*/function (ouMode) {
    ouMode["SELECTED"] = "SELECTED";
    ouMode["CHILDREN"] = "CHILDREN";
    ouMode["DESCENDANTS"] = "DESCENDANTS";
    ouMode["ACCESSIBLE"] = "ACCESSIBLE";
    ouMode["CAPTURE"] = "CAPTURE";
    ouMode["ALL"] = "ALL";
    return ouMode;
  }({});
  _EntityQueryCriteria.ouMode = ouMode;
})(EntityQueryCriteria || (EntityQueryCriteria = {}));
export let ErrorReport;
(function (_ErrorReport) {
  let errorCode = /*#__PURE__*/function (errorCode) {
    errorCode["E1000"] = "E1000";
    errorCode["E1001"] = "E1001";
    errorCode["E1002"] = "E1002";
    errorCode["E1003"] = "E1003";
    errorCode["E1004"] = "E1004";
    errorCode["E1005"] = "E1005";
    errorCode["E1006"] = "E1006";
    errorCode["E1100"] = "E1100";
    errorCode["E1101"] = "E1101";
    errorCode["E1102"] = "E1102";
    errorCode["E1103"] = "E1103";
    errorCode["E1104"] = "E1104";
    errorCode["E1105"] = "E1105";
    errorCode["E1106"] = "E1106";
    errorCode["E1107"] = "E1107";
    errorCode["E1108"] = "E1108";
    errorCode["E1109"] = "E1109";
    errorCode["E1110"] = "E1110";
    errorCode["E1111"] = "E1111";
    errorCode["E1112"] = "E1112";
    errorCode["E1113"] = "E1113";
    errorCode["E1114"] = "E1114";
    errorCode["E1115"] = "E1115";
    errorCode["E1116"] = "E1116";
    errorCode["E1117"] = "E1117";
    errorCode["E1118"] = "E1118";
    errorCode["E1119"] = "E1119";
    errorCode["E1120"] = "E1120";
    errorCode["E1500"] = "E1500";
    errorCode["E1501"] = "E1501";
    errorCode["E1502"] = "E1502";
    errorCode["E1503"] = "E1503";
    errorCode["E1504"] = "E1504";
    errorCode["E1510"] = "E1510";
    errorCode["E1511"] = "E1511";
    errorCode["E1512"] = "E1512";
    errorCode["E1513"] = "E1513";
    errorCode["E1514"] = "E1514";
    errorCode["E1515"] = "E1515";
    errorCode["E1516"] = "E1516";
    errorCode["E1520"] = "E1520";
    errorCode["E1521"] = "E1521";
    errorCode["E1522"] = "E1522";
    errorCode["E1523"] = "E1523";
    errorCode["E2000"] = "E2000";
    errorCode["E2001"] = "E2001";
    errorCode["E2002"] = "E2002";
    errorCode["E2003"] = "E2003";
    errorCode["E2004"] = "E2004";
    errorCode["E2005"] = "E2005";
    errorCode["E2006"] = "E2006";
    errorCode["E2007"] = "E2007";
    errorCode["E2008"] = "E2008";
    errorCode["E2009"] = "E2009";
    errorCode["E2010"] = "E2010";
    errorCode["E2011"] = "E2011";
    errorCode["E2012"] = "E2012";
    errorCode["E2013"] = "E2013";
    errorCode["E2014"] = "E2014";
    errorCode["E2015"] = "E2015";
    errorCode["E2016"] = "E2016";
    errorCode["E2017"] = "E2017";
    errorCode["E2018"] = "E2018";
    errorCode["E2019"] = "E2019";
    errorCode["E2020"] = "E2020";
    errorCode["E2021"] = "E2021";
    errorCode["E2022"] = "E2022";
    errorCode["E2023"] = "E2023";
    errorCode["E2024"] = "E2024";
    errorCode["E2025"] = "E2025";
    errorCode["E2026"] = "E2026";
    errorCode["E2027"] = "E2027";
    errorCode["E2028"] = "E2028";
    errorCode["E2029"] = "E2029";
    errorCode["E2030"] = "E2030";
    errorCode["E2031"] = "E2031";
    errorCode["E2032"] = "E2032";
    errorCode["E2033"] = "E2033";
    errorCode["E2034"] = "E2034";
    errorCode["E2035"] = "E2035";
    errorCode["E2036"] = "E2036";
    errorCode["E2037"] = "E2037";
    errorCode["E2038"] = "E2038";
    errorCode["E2039"] = "E2039";
    errorCode["E2040"] = "E2040";
    errorCode["E2041"] = "E2041";
    errorCode["E2042"] = "E2042";
    errorCode["E2043"] = "E2043";
    errorCode["E2044"] = "E2044";
    errorCode["E2200"] = "E2200";
    errorCode["E2201"] = "E2201";
    errorCode["E2202"] = "E2202";
    errorCode["E2203"] = "E2203";
    errorCode["E2204"] = "E2204";
    errorCode["E2205"] = "E2205";
    errorCode["E2206"] = "E2206";
    errorCode["E2207"] = "E2207";
    errorCode["E2208"] = "E2208";
    errorCode["E2300"] = "E2300";
    errorCode["E2301"] = "E2301";
    errorCode["E3000"] = "E3000";
    errorCode["E3001"] = "E3001";
    errorCode["E3002"] = "E3002";
    errorCode["E3003"] = "E3003";
    errorCode["E3004"] = "E3004";
    errorCode["E3005"] = "E3005";
    errorCode["E3006"] = "E3006";
    errorCode["E3008"] = "E3008";
    errorCode["E3009"] = "E3009";
    errorCode["E3010"] = "E3010";
    errorCode["E3011"] = "E3011";
    errorCode["E3012"] = "E3012";
    errorCode["E3013"] = "E3013";
    errorCode["E3014"] = "E3014";
    errorCode["E3015"] = "E3015";
    errorCode["E3016"] = "E3016";
    errorCode["E3017"] = "E3017";
    errorCode["E3018"] = "E3018";
    errorCode["E3019"] = "E3019";
    errorCode["E3020"] = "E3020";
    errorCode["E3021"] = "E3021";
    errorCode["E3022"] = "E3022";
    errorCode["E3023"] = "E3023";
    errorCode["E3024"] = "E3024";
    errorCode["E3025"] = "E3025";
    errorCode["E3026"] = "E3026";
    errorCode["E3027"] = "E3027";
    errorCode["E3028"] = "E3028";
    errorCode["E3029"] = "E3029";
    errorCode["E3030"] = "E3030";
    errorCode["E3031"] = "E3031";
    errorCode["E3032"] = "E3032";
    errorCode["E3040"] = "E3040";
    errorCode["E4000"] = "E4000";
    errorCode["E4001"] = "E4001";
    errorCode["E4002"] = "E4002";
    errorCode["E4003"] = "E4003";
    errorCode["E4004"] = "E4004";
    errorCode["E4005"] = "E4005";
    errorCode["E4006"] = "E4006";
    errorCode["E4007"] = "E4007";
    errorCode["E4008"] = "E4008";
    errorCode["E4009"] = "E4009";
    errorCode["E4010"] = "E4010";
    errorCode["E4011"] = "E4011";
    errorCode["E4012"] = "E4012";
    errorCode["E4013"] = "E4013";
    errorCode["E4014"] = "E4014";
    errorCode["E4015"] = "E4015";
    errorCode["E4016"] = "E4016";
    errorCode["E4017"] = "E4017";
    errorCode["E4018"] = "E4018";
    errorCode["E4019"] = "E4019";
    errorCode["E4020"] = "E4020";
    errorCode["E4021"] = "E4021";
    errorCode["E4022"] = "E4022";
    errorCode["E4023"] = "E4023";
    errorCode["E4024"] = "E4024";
    errorCode["E4025"] = "E4025";
    errorCode["E4026"] = "E4026";
    errorCode["E4027"] = "E4027";
    errorCode["E4028"] = "E4028";
    errorCode["E4029"] = "E4029";
    errorCode["E4030"] = "E4030";
    errorCode["E4031"] = "E4031";
    errorCode["E4032"] = "E4032";
    errorCode["E4033"] = "E4033";
    errorCode["E4034"] = "E4034";
    errorCode["E4035"] = "E4035";
    errorCode["E4036"] = "E4036";
    errorCode["E4037"] = "E4037";
    errorCode["E4038"] = "E4038";
    errorCode["E4039"] = "E4039";
    errorCode["E4040"] = "E4040";
    errorCode["E4041"] = "E4041";
    errorCode["E4042"] = "E4042";
    errorCode["E4043"] = "E4043";
    errorCode["E4044"] = "E4044";
    errorCode["E4045"] = "E4045";
    errorCode["E4046"] = "E4046";
    errorCode["E4047"] = "E4047";
    errorCode["E4048"] = "E4048";
    errorCode["E4049"] = "E4049";
    errorCode["E4054"] = "E4054";
    errorCode["E4056"] = "E4056";
    errorCode["E4055"] = "E4055";
    errorCode["E4050"] = "E4050";
    errorCode["E4051"] = "E4051";
    errorCode["E4052"] = "E4052";
    errorCode["E4053"] = "E4053";
    errorCode["E4057"] = "E4057";
    errorCode["E4058"] = "E4058";
    errorCode["E4060"] = "E4060";
    errorCode["E4061"] = "E4061";
    errorCode["E4062"] = "E4062";
    errorCode["E4063"] = "E4063";
    errorCode["E4064"] = "E4064";
    errorCode["E4065"] = "E4065";
    errorCode["E4066"] = "E4066";
    errorCode["E4067"] = "E4067";
    errorCode["E4068"] = "E4068";
    errorCode["E4069"] = "E4069";
    errorCode["E4300"] = "E4300";
    errorCode["E4301"] = "E4301";
    errorCode["E4302"] = "E4302";
    errorCode["E4303"] = "E4303";
    errorCode["E4304"] = "E4304";
    errorCode["E4305"] = "E4305";
    errorCode["E4306"] = "E4306";
    errorCode["E4307"] = "E4307";
    errorCode["E4308"] = "E4308";
    errorCode["E4309"] = "E4309";
    errorCode["E4310"] = "E4310";
    errorCode["E4311"] = "E4311";
    errorCode["E4312"] = "E4312";
    errorCode["E4313"] = "E4313";
    errorCode["E4314"] = "E4314";
    errorCode["E4315"] = "E4315";
    errorCode["E5000"] = "E5000";
    errorCode["E5001"] = "E5001";
    errorCode["E5002"] = "E5002";
    errorCode["E5003"] = "E5003";
    errorCode["E5004"] = "E5004";
    errorCode["E5005"] = "E5005";
    errorCode["E5006"] = "E5006";
    errorCode["E5007"] = "E5007";
    errorCode["E5008"] = "E5008";
    errorCode["E6000"] = "E6000";
    errorCode["E6001"] = "E6001";
    errorCode["E6002"] = "E6002";
    errorCode["E6003"] = "E6003";
    errorCode["E6004"] = "E6004";
    errorCode["E6005"] = "E6005";
    errorCode["E6006"] = "E6006";
    errorCode["E6007"] = "E6007";
    errorCode["E6008"] = "E6008";
    errorCode["E6009"] = "E6009";
    errorCode["E6010"] = "E6010";
    errorCode["E6011"] = "E6011";
    errorCode["E6012"] = "E6012";
    errorCode["E6013"] = "E6013";
    errorCode["E6014"] = "E6014";
    errorCode["E6015"] = "E6015";
    errorCode["E6016"] = "E6016";
    errorCode["E6017"] = "E6017";
    errorCode["E6018"] = "E6018";
    errorCode["E6019"] = "E6019";
    errorCode["E6020"] = "E6020";
    errorCode["E6021"] = "E6021";
    errorCode["E6100"] = "E6100";
    errorCode["E6101"] = "E6101";
    errorCode["E6200"] = "E6200";
    errorCode["E6201"] = "E6201";
    errorCode["E6202"] = "E6202";
    errorCode["E6203"] = "E6203";
    errorCode["E6204"] = "E6204";
    errorCode["E6205"] = "E6205";
    errorCode["E6206"] = "E6206";
    errorCode["E6207"] = "E6207";
    errorCode["E6208"] = "E6208";
    errorCode["E6209"] = "E6209";
    errorCode["E6210"] = "E6210";
    errorCode["E6211"] = "E6211";
    errorCode["E6300"] = "E6300";
    errorCode["E6301"] = "E6301";
    errorCode["E6302"] = "E6302";
    errorCode["E6303"] = "E6303";
    errorCode["E6304"] = "E6304";
    errorCode["E6305"] = "E6305";
    errorCode["E7000"] = "E7000";
    errorCode["E7003"] = "E7003";
    errorCode["E7004"] = "E7004";
    errorCode["E7005"] = "E7005";
    errorCode["E7006"] = "E7006";
    errorCode["E7007"] = "E7007";
    errorCode["E7010"] = "E7010";
    errorCode["E7020"] = "E7020";
    errorCode["E7021"] = "E7021";
    errorCode["E7022"] = "E7022";
    errorCode["E7023"] = "E7023";
    errorCode["E7024"] = "E7024";
    errorCode["E7100"] = "E7100";
    errorCode["E7101"] = "E7101";
    errorCode["E7102"] = "E7102";
    errorCode["E7103"] = "E7103";
    errorCode["E7104"] = "E7104";
    errorCode["E7105"] = "E7105";
    errorCode["E7106"] = "E7106";
    errorCode["E7107"] = "E7107";
    errorCode["E7108"] = "E7108";
    errorCode["E7109"] = "E7109";
    errorCode["E7110"] = "E7110";
    errorCode["E7111"] = "E7111";
    errorCode["E7112"] = "E7112";
    errorCode["E7113"] = "E7113";
    errorCode["E7114"] = "E7114";
    errorCode["E7115"] = "E7115";
    errorCode["E7116"] = "E7116";
    errorCode["E7117"] = "E7117";
    errorCode["E7118"] = "E7118";
    errorCode["E7119"] = "E7119";
    errorCode["E7120"] = "E7120";
    errorCode["E7121"] = "E7121";
    errorCode["E7122"] = "E7122";
    errorCode["E7123"] = "E7123";
    errorCode["E7124"] = "E7124";
    errorCode["E7125"] = "E7125";
    errorCode["E7126"] = "E7126";
    errorCode["E7127"] = "E7127";
    errorCode["E7128"] = "E7128";
    errorCode["E7129"] = "E7129";
    errorCode["E7130"] = "E7130";
    errorCode["E7131"] = "E7131";
    errorCode["E7132"] = "E7132";
    errorCode["E7133"] = "E7133";
    errorCode["E7134"] = "E7134";
    errorCode["E7135"] = "E7135";
    errorCode["E7136"] = "E7136";
    errorCode["E7137"] = "E7137";
    errorCode["E7138"] = "E7138";
    errorCode["E7139"] = "E7139";
    errorCode["E7140"] = "E7140";
    errorCode["E7141"] = "E7141";
    errorCode["E7142"] = "E7142";
    errorCode["E7200"] = "E7200";
    errorCode["E7201"] = "E7201";
    errorCode["E7202"] = "E7202";
    errorCode["E7203"] = "E7203";
    errorCode["E7204"] = "E7204";
    errorCode["E7205"] = "E7205";
    errorCode["E7206"] = "E7206";
    errorCode["E7207"] = "E7207";
    errorCode["E7208"] = "E7208";
    errorCode["E7209"] = "E7209";
    errorCode["E7210"] = "E7210";
    errorCode["E7211"] = "E7211";
    errorCode["E7212"] = "E7212";
    errorCode["E7213"] = "E7213";
    errorCode["E7214"] = "E7214";
    errorCode["E7215"] = "E7215";
    errorCode["E7216"] = "E7216";
    errorCode["E7217"] = "E7217";
    errorCode["E7218"] = "E7218";
    errorCode["E7219"] = "E7219";
    errorCode["E7220"] = "E7220";
    errorCode["E7221"] = "E7221";
    errorCode["E7222"] = "E7222";
    errorCode["E7223"] = "E7223";
    errorCode["E7224"] = "E7224";
    errorCode["E7225"] = "E7225";
    errorCode["E7226"] = "E7226";
    errorCode["E7227"] = "E7227";
    errorCode["E7228"] = "E7228";
    errorCode["E7229"] = "E7229";
    errorCode["E7230"] = "E7230";
    errorCode["E7231"] = "E7231";
    errorCode["E7232"] = "E7232";
    errorCode["E7234"] = "E7234";
    errorCode["E7235"] = "E7235";
    errorCode["E7236"] = "E7236";
    errorCode["E7237"] = "E7237";
    errorCode["E7238"] = "E7238";
    errorCode["E7250"] = "E7250";
    errorCode["E7300"] = "E7300";
    errorCode["E7301"] = "E7301";
    errorCode["E7400"] = "E7400";
    errorCode["E7500"] = "E7500";
    errorCode["E7501"] = "E7501";
    errorCode["E7502"] = "E7502";
    errorCode["E7503"] = "E7503";
    errorCode["E7600"] = "E7600";
    errorCode["E7601"] = "E7601";
    errorCode["E7602"] = "E7602";
    errorCode["E7603"] = "E7603";
    errorCode["E7604"] = "E7604";
    errorCode["E7610"] = "E7610";
    errorCode["E7611"] = "E7611";
    errorCode["E7612"] = "E7612";
    errorCode["E7613"] = "E7613";
    errorCode["E7614"] = "E7614";
    errorCode["E7615"] = "E7615";
    errorCode["E7616"] = "E7616";
    errorCode["E7617"] = "E7617";
    errorCode["E7618"] = "E7618";
    errorCode["E7619"] = "E7619";
    errorCode["E7620"] = "E7620";
    errorCode["E7621"] = "E7621";
    errorCode["E7630"] = "E7630";
    errorCode["E7631"] = "E7631";
    errorCode["E7632"] = "E7632";
    errorCode["E7633"] = "E7633";
    errorCode["E7634"] = "E7634";
    errorCode["E7635"] = "E7635";
    errorCode["E7636"] = "E7636";
    errorCode["E7637"] = "E7637";
    errorCode["E7638"] = "E7638";
    errorCode["E7639"] = "E7639";
    errorCode["E7640"] = "E7640";
    errorCode["E7641"] = "E7641";
    errorCode["E7642"] = "E7642";
    errorCode["E7643"] = "E7643";
    errorCode["E7644"] = "E7644";
    errorCode["E7645"] = "E7645";
    errorCode["E7650"] = "E7650";
    errorCode["E7651"] = "E7651";
    errorCode["E7652"] = "E7652";
    errorCode["E7653"] = "E7653";
    errorCode["E7700"] = "E7700";
    errorCode["E7701"] = "E7701";
    errorCode["E7702"] = "E7702";
    errorCode["E7703"] = "E7703";
    errorCode["E7704"] = "E7704";
    errorCode["E7705"] = "E7705";
    errorCode["E7706"] = "E7706";
    errorCode["E7707"] = "E7707";
    errorCode["E7708"] = "E7708";
    errorCode["E7709"] = "E7709";
    errorCode["E7710"] = "E7710";
    errorCode["E7711"] = "E7711";
    errorCode["E7712"] = "E7712";
    return errorCode;
  }({});
  _ErrorReport.errorCode = errorCode;
})(ErrorReport || (ErrorReport = {}));
export let Event;
(function (_Event) {
  let status = /*#__PURE__*/function (status) {
    status["ACTIVE"] = "ACTIVE";
    status["COMPLETED"] = "COMPLETED";
    status["VISITED"] = "VISITED";
    status["SCHEDULE"] = "SCHEDULE";
    status["OVERDUE"] = "OVERDUE";
    status["SKIPPED"] = "SKIPPED";
    return status;
  }({});
  _Event.status = status;
})(Event || (Event = {}));
export let EventFilterInfo;
(function (_EventFilterInfo) {
  let assignedUserMode = /*#__PURE__*/function (assignedUserMode) {
    assignedUserMode["CURRENT"] = "CURRENT";
    assignedUserMode["PROVIDED"] = "PROVIDED";
    assignedUserMode["NONE"] = "NONE";
    assignedUserMode["ANY"] = "ANY";
    assignedUserMode["ALL"] = "ALL";
    return assignedUserMode;
  }({});
  _EventFilterInfo.assignedUserMode = assignedUserMode;
  let eventStatus = /*#__PURE__*/function (eventStatus) {
    eventStatus["ACTIVE"] = "ACTIVE";
    eventStatus["COMPLETED"] = "COMPLETED";
    eventStatus["VISITED"] = "VISITED";
    eventStatus["SCHEDULE"] = "SCHEDULE";
    eventStatus["OVERDUE"] = "OVERDUE";
    eventStatus["SKIPPED"] = "SKIPPED";
    return eventStatus;
  }({});
  _EventFilterInfo.eventStatus = eventStatus;
})(EventFilterInfo || (EventFilterInfo = {}));
export let EventInfo;
(function (_EventInfo) {
  let status = /*#__PURE__*/function (status) {
    status["ACTIVE"] = "ACTIVE";
    status["COMPLETED"] = "COMPLETED";
    status["VISITED"] = "VISITED";
    status["SCHEDULE"] = "SCHEDULE";
    status["OVERDUE"] = "OVERDUE";
    status["SKIPPED"] = "SKIPPED";
    return status;
  }({});
  _EventInfo.status = status;
})(EventInfo || (EventInfo = {}));
export let EventQueryCriteria;
(function (_EventQueryCriteria) {
  let assignedUserMode = /*#__PURE__*/function (assignedUserMode) {
    assignedUserMode["CURRENT"] = "CURRENT";
    assignedUserMode["PROVIDED"] = "PROVIDED";
    assignedUserMode["NONE"] = "NONE";
    assignedUserMode["ANY"] = "ANY";
    assignedUserMode["ALL"] = "ALL";
    return assignedUserMode;
  }({});
  _EventQueryCriteria.assignedUserMode = assignedUserMode;
  let ouMode = /*#__PURE__*/function (ouMode) {
    ouMode["SELECTED"] = "SELECTED";
    ouMode["CHILDREN"] = "CHILDREN";
    ouMode["DESCENDANTS"] = "DESCENDANTS";
    ouMode["ACCESSIBLE"] = "ACCESSIBLE";
    ouMode["CAPTURE"] = "CAPTURE";
    ouMode["ALL"] = "ALL";
    return ouMode;
  }({});
  _EventQueryCriteria.ouMode = ouMode;
  let status = /*#__PURE__*/function (status) {
    status["ACTIVE"] = "ACTIVE";
    status["COMPLETED"] = "COMPLETED";
    status["VISITED"] = "VISITED";
    status["SCHEDULE"] = "SCHEDULE";
    status["OVERDUE"] = "OVERDUE";
    status["SKIPPED"] = "SKIPPED";
    return status;
  }({});
  _EventQueryCriteria.status = status;
})(EventQueryCriteria || (EventQueryCriteria = {}));
export let EventRepetition;
(function (_EventRepetition) {
  let parent = /*#__PURE__*/function (parent) {
    parent["COLUMN"] = "COLUMN";
    parent["ROW"] = "ROW";
    parent["FILTER"] = "FILTER";
    return parent;
  }({});
  _EventRepetition.parent = parent;
})(EventRepetition || (EventRepetition = {}));
export let EventVisualization;
(function (_EventVisualization) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _EventVisualization.aggregationType = aggregationType;
  let dataType = /*#__PURE__*/function (dataType) {
    dataType["AGGREGATED_VALUES"] = "AGGREGATED_VALUES";
    dataType["EVENTS"] = "EVENTS";
    return dataType;
  }({});
  _EventVisualization.dataType = dataType;
  let digitGroupSeparator = /*#__PURE__*/function (digitGroupSeparator) {
    digitGroupSeparator["COMMA"] = "COMMA";
    digitGroupSeparator["SPACE"] = "SPACE";
    digitGroupSeparator["NONE"] = "NONE";
    return digitGroupSeparator;
  }({});
  _EventVisualization.digitGroupSeparator = digitGroupSeparator;
  let displayDensity = /*#__PURE__*/function (displayDensity) {
    displayDensity["COMFORTABLE"] = "COMFORTABLE";
    displayDensity["NORMAL"] = "NORMAL";
    displayDensity["COMPACT"] = "COMPACT";
    displayDensity["NONE"] = "NONE";
    return displayDensity;
  }({});
  _EventVisualization.displayDensity = displayDensity;
  let eventStatus = /*#__PURE__*/function (eventStatus) {
    eventStatus["ACTIVE"] = "ACTIVE";
    eventStatus["COMPLETED"] = "COMPLETED";
    eventStatus["VISITED"] = "VISITED";
    eventStatus["SCHEDULE"] = "SCHEDULE";
    eventStatus["OVERDUE"] = "OVERDUE";
    eventStatus["SKIPPED"] = "SKIPPED";
    return eventStatus;
  }({});
  _EventVisualization.eventStatus = eventStatus;
  let fontSize = /*#__PURE__*/function (fontSize) {
    fontSize["LARGE"] = "LARGE";
    fontSize["NORMAL"] = "NORMAL";
    fontSize["SMALL"] = "SMALL";
    return fontSize;
  }({});
  _EventVisualization.fontSize = fontSize;
  let hideEmptyRowItems = /*#__PURE__*/function (hideEmptyRowItems) {
    hideEmptyRowItems["NONE"] = "NONE";
    hideEmptyRowItems["BEFORE_FIRST"] = "BEFORE_FIRST";
    hideEmptyRowItems["AFTER_LAST"] = "AFTER_LAST";
    hideEmptyRowItems["BEFORE_FIRST_AFTER_LAST"] = "BEFORE_FIRST_AFTER_LAST";
    hideEmptyRowItems["ALL"] = "ALL";
    return hideEmptyRowItems;
  }({});
  _EventVisualization.hideEmptyRowItems = hideEmptyRowItems;
  let outputType = /*#__PURE__*/function (outputType) {
    outputType["EVENT"] = "EVENT";
    outputType["ENROLLMENT"] = "ENROLLMENT";
    outputType["TRACKED_ENTITY_INSTANCE"] = "TRACKED_ENTITY_INSTANCE";
    return outputType;
  }({});
  _EventVisualization.outputType = outputType;
  let programStatus = /*#__PURE__*/function (programStatus) {
    programStatus["ACTIVE"] = "ACTIVE";
    programStatus["COMPLETED"] = "COMPLETED";
    programStatus["CANCELLED"] = "CANCELLED";
    return programStatus;
  }({});
  _EventVisualization.programStatus = programStatus;
  let regressionType = /*#__PURE__*/function (regressionType) {
    regressionType["NONE"] = "NONE";
    regressionType["LINEAR"] = "LINEAR";
    regressionType["POLYNOMIAL"] = "POLYNOMIAL";
    regressionType["LOESS"] = "LOESS";
    return regressionType;
  }({});
  _EventVisualization.regressionType = regressionType;
  let type = /*#__PURE__*/function (type) {
    type["COLUMN"] = "COLUMN";
    type["STACKED_COLUMN"] = "STACKED_COLUMN";
    type["BAR"] = "BAR";
    type["STACKED_BAR"] = "STACKED_BAR";
    type["LINE"] = "LINE";
    type["LINE_LIST"] = "LINE_LIST";
    type["AREA"] = "AREA";
    type["STACKED_AREA"] = "STACKED_AREA";
    type["PIE"] = "PIE";
    type["RADAR"] = "RADAR";
    type["GAUGE"] = "GAUGE";
    type["YEAR_OVER_YEAR_LINE"] = "YEAR_OVER_YEAR_LINE";
    type["YEAR_OVER_YEAR_COLUMN"] = "YEAR_OVER_YEAR_COLUMN";
    type["SINGLE_VALUE"] = "SINGLE_VALUE";
    type["PIVOT_TABLE"] = "PIVOT_TABLE";
    type["SCATTER"] = "SCATTER";
    type["BUBBLE"] = "BUBBLE";
    return type;
  }({});
  _EventVisualization.type = type;
  let userOrgUnitType = /*#__PURE__*/function (userOrgUnitType) {
    userOrgUnitType["DATA_CAPTURE"] = "DATA_CAPTURE";
    userOrgUnitType["DATA_OUTPUT"] = "DATA_OUTPUT";
    userOrgUnitType["TEI_SEARCH"] = "TEI_SEARCH";
    return userOrgUnitType;
  }({});
  _EventVisualization.userOrgUnitType = userOrgUnitType;
})(EventVisualization || (EventVisualization = {}));
export let ExchangeTarget;
(function (_ExchangeTarget) {
  let type = /*#__PURE__*/function (type) {
    type["INTERNAL"] = "INTERNAL";
    type["EXTERNAL"] = "EXTERNAL";
    return type;
  }({});
  _ExchangeTarget.type = type;
})(ExchangeTarget || (ExchangeTarget = {}));
export let Expression;
(function (_Expression) {
  let missingValueStrategy = /*#__PURE__*/function (missingValueStrategy) {
    missingValueStrategy["SKIP_IF_ANY_VALUE_MISSING"] = "SKIP_IF_ANY_VALUE_MISSING";
    missingValueStrategy["SKIP_IF_ALL_VALUES_MISSING"] = "SKIP_IF_ALL_VALUES_MISSING";
    missingValueStrategy["NEVER_SKIP"] = "NEVER_SKIP";
    return missingValueStrategy;
  }({});
  _Expression.missingValueStrategy = missingValueStrategy;
})(Expression || (Expression = {}));
export let ExpressionDimensionItem;
(function (_ExpressionDimensionItem) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _ExpressionDimensionItem.aggregationType = aggregationType;
  let missingValueStrategy = /*#__PURE__*/function (missingValueStrategy) {
    missingValueStrategy["SKIP_IF_ANY_VALUE_MISSING"] = "SKIP_IF_ANY_VALUE_MISSING";
    missingValueStrategy["SKIP_IF_ALL_VALUES_MISSING"] = "SKIP_IF_ALL_VALUES_MISSING";
    missingValueStrategy["NEVER_SKIP"] = "NEVER_SKIP";
    return missingValueStrategy;
  }({});
  _ExpressionDimensionItem.missingValueStrategy = missingValueStrategy;
})(ExpressionDimensionItem || (ExpressionDimensionItem = {}));
export let ExternalMapLayer;
(function (_ExternalMapLayer) {
  let imageFormat = /*#__PURE__*/function (imageFormat) {
    imageFormat["PNG"] = "PNG";
    imageFormat["JPG"] = "JPG";
    return imageFormat;
  }({});
  _ExternalMapLayer.imageFormat = imageFormat;
  let mapLayerPosition = /*#__PURE__*/function (mapLayerPosition) {
    mapLayerPosition["BASEMAP"] = "BASEMAP";
    mapLayerPosition["OVERLAY"] = "OVERLAY";
    return mapLayerPosition;
  }({});
  _ExternalMapLayer.mapLayerPosition = mapLayerPosition;
  let mapService = /*#__PURE__*/function (mapService) {
    mapService["WMS"] = "WMS";
    mapService["TMS"] = "TMS";
    mapService["XYZ"] = "XYZ";
    mapService["VECTOR_STYLE"] = "VECTOR_STYLE";
    return mapService;
  }({});
  _ExternalMapLayer.mapService = mapService;
})(ExternalMapLayer || (ExternalMapLayer = {}));
export let Field;
(function (_Field) {
  let type = /*#__PURE__*/function (type) {
    type["TEXT"] = "TEXT";
    type["LONG_TEXT"] = "LONG_TEXT";
    type["MULTI_TEXT"] = "MULTI_TEXT";
    type["LETTER"] = "LETTER";
    type["PHONE_NUMBER"] = "PHONE_NUMBER";
    type["EMAIL"] = "EMAIL";
    type["BOOLEAN"] = "BOOLEAN";
    type["TRUE_ONLY"] = "TRUE_ONLY";
    type["DATE"] = "DATE";
    type["DATETIME"] = "DATETIME";
    type["TIME"] = "TIME";
    type["NUMBER"] = "NUMBER";
    type["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    type["PERCENTAGE"] = "PERCENTAGE";
    type["INTEGER"] = "INTEGER";
    type["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    type["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    type["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    type["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    type["USERNAME"] = "USERNAME";
    type["COORDINATE"] = "COORDINATE";
    type["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    type["REFERENCE"] = "REFERENCE";
    type["AGE"] = "AGE";
    type["URL"] = "URL";
    type["FILE_RESOURCE"] = "FILE_RESOURCE";
    type["IMAGE"] = "IMAGE";
    type["GEOJSON"] = "GEOJSON";
    return type;
  }({});
  _Field.type = type;
})(Field || (Field = {}));
export let FileResource;
(function (_FileResource) {
  let domain = /*#__PURE__*/function (domain) {
    domain["DATA_VALUE"] = "DATA_VALUE";
    domain["PUSH_ANALYSIS"] = "PUSH_ANALYSIS";
    domain["DOCUMENT"] = "DOCUMENT";
    domain["MESSAGE_ATTACHMENT"] = "MESSAGE_ATTACHMENT";
    domain["USER_AVATAR"] = "USER_AVATAR";
    domain["ORG_UNIT"] = "ORG_UNIT";
    domain["CUSTOM_ICON"] = "CUSTOM_ICON";
    return domain;
  }({});
  _FileResource.domain = domain;
  let storageStatus = /*#__PURE__*/function (storageStatus) {
    storageStatus["NONE"] = "NONE";
    storageStatus["PENDING"] = "PENDING";
    storageStatus["FAILED"] = "FAILED";
    storageStatus["STORED"] = "STORED";
    return storageStatus;
  }({});
  _FileResource.storageStatus = storageStatus;
})(FileResource || (FileResource = {}));
export let FileResourceOwner;
(function (_FileResourceOwner) {
  let domain = /*#__PURE__*/function (domain) {
    domain["DATA_VALUE"] = "DATA_VALUE";
    domain["PUSH_ANALYSIS"] = "PUSH_ANALYSIS";
    domain["DOCUMENT"] = "DOCUMENT";
    domain["MESSAGE_ATTACHMENT"] = "MESSAGE_ATTACHMENT";
    domain["USER_AVATAR"] = "USER_AVATAR";
    domain["ORG_UNIT"] = "ORG_UNIT";
    domain["CUSTOM_ICON"] = "CUSTOM_ICON";
    return domain;
  }({});
  _FileResourceOwner.domain = domain;
})(FileResourceOwner || (FileResourceOwner = {}));
export let FontStyle;
(function (_FontStyle) {
  let font = /*#__PURE__*/function (font) {
    font["ARIAL"] = "ARIAL";
    font["SANS_SERIF"] = "SANS_SERIF";
    font["VERDANA"] = "VERDANA";
    font["ROBOTO"] = "ROBOTO";
    return font;
  }({});
  _FontStyle.font = font;
  let textAlign = /*#__PURE__*/function (textAlign) {
    textAlign["LEFT"] = "LEFT";
    textAlign["CENTER"] = "CENTER";
    textAlign["RIGHT"] = "RIGHT";
    return textAlign;
  }({});
  _FontStyle.textAlign = textAlign;
})(FontStyle || (FontStyle = {}));
export let GenericHttpGatewayConfig;
(function (_GenericHttpGatewayConfig) {
  let contentType = /*#__PURE__*/function (contentType) {
    contentType["APPLICATION_JSON"] = "APPLICATION_JSON";
    contentType["APPLICATION_XML"] = "APPLICATION_XML";
    contentType["TEXT_PLAIN"] = "TEXT_PLAIN";
    contentType["FORM_URL_ENCODED"] = "FORM_URL_ENCODED";
    return contentType;
  }({});
  _GenericHttpGatewayConfig.contentType = contentType;
})(GenericHttpGatewayConfig || (GenericHttpGatewayConfig = {}));
export let GistPreferences;
(function (_GistPreferences) {
  let included = /*#__PURE__*/function (included) {
    included["FALSE"] = "FALSE";
    included["TRUE"] = "TRUE";
    included["AUTO"] = "AUTO";
    return included;
  }({});
  _GistPreferences.included = included;
  let transformation = /*#__PURE__*/function (transformation) {
    transformation["AUTO"] = "AUTO";
    transformation["NONE"] = "NONE";
    transformation["IS_EMPTY"] = "IS_EMPTY";
    transformation["IS_NOT_EMPTY"] = "IS_NOT_EMPTY";
    transformation["SIZE"] = "SIZE";
    transformation["MEMBER"] = "MEMBER";
    transformation["NOT_MEMBER"] = "NOT_MEMBER";
    transformation["IDS"] = "IDS";
    transformation["ID_OBJECTS"] = "ID_OBJECTS";
    transformation["PLUCK"] = "PLUCK";
    transformation["FROM"] = "FROM";
    return transformation;
  }({});
  _GistPreferences.transformation = transformation;
})(GistPreferences || (GistPreferences = {}));
export let GridHeader;
(function (_GridHeader) {
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _GridHeader.valueType = valueType;
})(GridHeader || (GridHeader = {}));
export let Icon;
(function (_Icon) {
  let type = /*#__PURE__*/function (type) {
    type["DATA_ITEM"] = "DATA_ITEM";
    return type;
  }({});
  _Icon.type = type;
})(Icon || (Icon = {}));
export let IdScheme;
(function (_IdScheme) {
  let identifiableProperty = /*#__PURE__*/function (identifiableProperty) {
    identifiableProperty["ID"] = "ID";
    identifiableProperty["UID"] = "UID";
    identifiableProperty["UUID"] = "UUID";
    identifiableProperty["NAME"] = "NAME";
    identifiableProperty["CODE"] = "CODE";
    identifiableProperty["ATTRIBUTE"] = "ATTRIBUTE";
    return identifiableProperty;
  }({});
  _IdScheme.identifiableProperty = identifiableProperty;
})(IdScheme || (IdScheme = {}));
export let ImportConflict;
(function (_ImportConflict) {
  let errorCode = /*#__PURE__*/function (errorCode) {
    errorCode["E1000"] = "E1000";
    errorCode["E1001"] = "E1001";
    errorCode["E1002"] = "E1002";
    errorCode["E1003"] = "E1003";
    errorCode["E1004"] = "E1004";
    errorCode["E1005"] = "E1005";
    errorCode["E1006"] = "E1006";
    errorCode["E1100"] = "E1100";
    errorCode["E1101"] = "E1101";
    errorCode["E1102"] = "E1102";
    errorCode["E1103"] = "E1103";
    errorCode["E1104"] = "E1104";
    errorCode["E1105"] = "E1105";
    errorCode["E1106"] = "E1106";
    errorCode["E1107"] = "E1107";
    errorCode["E1108"] = "E1108";
    errorCode["E1109"] = "E1109";
    errorCode["E1110"] = "E1110";
    errorCode["E1111"] = "E1111";
    errorCode["E1112"] = "E1112";
    errorCode["E1113"] = "E1113";
    errorCode["E1114"] = "E1114";
    errorCode["E1115"] = "E1115";
    errorCode["E1116"] = "E1116";
    errorCode["E1117"] = "E1117";
    errorCode["E1118"] = "E1118";
    errorCode["E1119"] = "E1119";
    errorCode["E1120"] = "E1120";
    errorCode["E1500"] = "E1500";
    errorCode["E1501"] = "E1501";
    errorCode["E1502"] = "E1502";
    errorCode["E1503"] = "E1503";
    errorCode["E1504"] = "E1504";
    errorCode["E1510"] = "E1510";
    errorCode["E1511"] = "E1511";
    errorCode["E1512"] = "E1512";
    errorCode["E1513"] = "E1513";
    errorCode["E1514"] = "E1514";
    errorCode["E1515"] = "E1515";
    errorCode["E1516"] = "E1516";
    errorCode["E1520"] = "E1520";
    errorCode["E1521"] = "E1521";
    errorCode["E1522"] = "E1522";
    errorCode["E1523"] = "E1523";
    errorCode["E2000"] = "E2000";
    errorCode["E2001"] = "E2001";
    errorCode["E2002"] = "E2002";
    errorCode["E2003"] = "E2003";
    errorCode["E2004"] = "E2004";
    errorCode["E2005"] = "E2005";
    errorCode["E2006"] = "E2006";
    errorCode["E2007"] = "E2007";
    errorCode["E2008"] = "E2008";
    errorCode["E2009"] = "E2009";
    errorCode["E2010"] = "E2010";
    errorCode["E2011"] = "E2011";
    errorCode["E2012"] = "E2012";
    errorCode["E2013"] = "E2013";
    errorCode["E2014"] = "E2014";
    errorCode["E2015"] = "E2015";
    errorCode["E2016"] = "E2016";
    errorCode["E2017"] = "E2017";
    errorCode["E2018"] = "E2018";
    errorCode["E2019"] = "E2019";
    errorCode["E2020"] = "E2020";
    errorCode["E2021"] = "E2021";
    errorCode["E2022"] = "E2022";
    errorCode["E2023"] = "E2023";
    errorCode["E2024"] = "E2024";
    errorCode["E2025"] = "E2025";
    errorCode["E2026"] = "E2026";
    errorCode["E2027"] = "E2027";
    errorCode["E2028"] = "E2028";
    errorCode["E2029"] = "E2029";
    errorCode["E2030"] = "E2030";
    errorCode["E2031"] = "E2031";
    errorCode["E2032"] = "E2032";
    errorCode["E2033"] = "E2033";
    errorCode["E2034"] = "E2034";
    errorCode["E2035"] = "E2035";
    errorCode["E2036"] = "E2036";
    errorCode["E2037"] = "E2037";
    errorCode["E2038"] = "E2038";
    errorCode["E2039"] = "E2039";
    errorCode["E2040"] = "E2040";
    errorCode["E2041"] = "E2041";
    errorCode["E2042"] = "E2042";
    errorCode["E2043"] = "E2043";
    errorCode["E2044"] = "E2044";
    errorCode["E2200"] = "E2200";
    errorCode["E2201"] = "E2201";
    errorCode["E2202"] = "E2202";
    errorCode["E2203"] = "E2203";
    errorCode["E2204"] = "E2204";
    errorCode["E2205"] = "E2205";
    errorCode["E2206"] = "E2206";
    errorCode["E2207"] = "E2207";
    errorCode["E2208"] = "E2208";
    errorCode["E2300"] = "E2300";
    errorCode["E2301"] = "E2301";
    errorCode["E3000"] = "E3000";
    errorCode["E3001"] = "E3001";
    errorCode["E3002"] = "E3002";
    errorCode["E3003"] = "E3003";
    errorCode["E3004"] = "E3004";
    errorCode["E3005"] = "E3005";
    errorCode["E3006"] = "E3006";
    errorCode["E3008"] = "E3008";
    errorCode["E3009"] = "E3009";
    errorCode["E3010"] = "E3010";
    errorCode["E3011"] = "E3011";
    errorCode["E3012"] = "E3012";
    errorCode["E3013"] = "E3013";
    errorCode["E3014"] = "E3014";
    errorCode["E3015"] = "E3015";
    errorCode["E3016"] = "E3016";
    errorCode["E3017"] = "E3017";
    errorCode["E3018"] = "E3018";
    errorCode["E3019"] = "E3019";
    errorCode["E3020"] = "E3020";
    errorCode["E3021"] = "E3021";
    errorCode["E3022"] = "E3022";
    errorCode["E3023"] = "E3023";
    errorCode["E3024"] = "E3024";
    errorCode["E3025"] = "E3025";
    errorCode["E3026"] = "E3026";
    errorCode["E3027"] = "E3027";
    errorCode["E3028"] = "E3028";
    errorCode["E3029"] = "E3029";
    errorCode["E3030"] = "E3030";
    errorCode["E3031"] = "E3031";
    errorCode["E3032"] = "E3032";
    errorCode["E3040"] = "E3040";
    errorCode["E4000"] = "E4000";
    errorCode["E4001"] = "E4001";
    errorCode["E4002"] = "E4002";
    errorCode["E4003"] = "E4003";
    errorCode["E4004"] = "E4004";
    errorCode["E4005"] = "E4005";
    errorCode["E4006"] = "E4006";
    errorCode["E4007"] = "E4007";
    errorCode["E4008"] = "E4008";
    errorCode["E4009"] = "E4009";
    errorCode["E4010"] = "E4010";
    errorCode["E4011"] = "E4011";
    errorCode["E4012"] = "E4012";
    errorCode["E4013"] = "E4013";
    errorCode["E4014"] = "E4014";
    errorCode["E4015"] = "E4015";
    errorCode["E4016"] = "E4016";
    errorCode["E4017"] = "E4017";
    errorCode["E4018"] = "E4018";
    errorCode["E4019"] = "E4019";
    errorCode["E4020"] = "E4020";
    errorCode["E4021"] = "E4021";
    errorCode["E4022"] = "E4022";
    errorCode["E4023"] = "E4023";
    errorCode["E4024"] = "E4024";
    errorCode["E4025"] = "E4025";
    errorCode["E4026"] = "E4026";
    errorCode["E4027"] = "E4027";
    errorCode["E4028"] = "E4028";
    errorCode["E4029"] = "E4029";
    errorCode["E4030"] = "E4030";
    errorCode["E4031"] = "E4031";
    errorCode["E4032"] = "E4032";
    errorCode["E4033"] = "E4033";
    errorCode["E4034"] = "E4034";
    errorCode["E4035"] = "E4035";
    errorCode["E4036"] = "E4036";
    errorCode["E4037"] = "E4037";
    errorCode["E4038"] = "E4038";
    errorCode["E4039"] = "E4039";
    errorCode["E4040"] = "E4040";
    errorCode["E4041"] = "E4041";
    errorCode["E4042"] = "E4042";
    errorCode["E4043"] = "E4043";
    errorCode["E4044"] = "E4044";
    errorCode["E4045"] = "E4045";
    errorCode["E4046"] = "E4046";
    errorCode["E4047"] = "E4047";
    errorCode["E4048"] = "E4048";
    errorCode["E4049"] = "E4049";
    errorCode["E4054"] = "E4054";
    errorCode["E4056"] = "E4056";
    errorCode["E4055"] = "E4055";
    errorCode["E4050"] = "E4050";
    errorCode["E4051"] = "E4051";
    errorCode["E4052"] = "E4052";
    errorCode["E4053"] = "E4053";
    errorCode["E4057"] = "E4057";
    errorCode["E4058"] = "E4058";
    errorCode["E4060"] = "E4060";
    errorCode["E4061"] = "E4061";
    errorCode["E4062"] = "E4062";
    errorCode["E4063"] = "E4063";
    errorCode["E4064"] = "E4064";
    errorCode["E4065"] = "E4065";
    errorCode["E4066"] = "E4066";
    errorCode["E4067"] = "E4067";
    errorCode["E4068"] = "E4068";
    errorCode["E4069"] = "E4069";
    errorCode["E4300"] = "E4300";
    errorCode["E4301"] = "E4301";
    errorCode["E4302"] = "E4302";
    errorCode["E4303"] = "E4303";
    errorCode["E4304"] = "E4304";
    errorCode["E4305"] = "E4305";
    errorCode["E4306"] = "E4306";
    errorCode["E4307"] = "E4307";
    errorCode["E4308"] = "E4308";
    errorCode["E4309"] = "E4309";
    errorCode["E4310"] = "E4310";
    errorCode["E4311"] = "E4311";
    errorCode["E4312"] = "E4312";
    errorCode["E4313"] = "E4313";
    errorCode["E4314"] = "E4314";
    errorCode["E4315"] = "E4315";
    errorCode["E5000"] = "E5000";
    errorCode["E5001"] = "E5001";
    errorCode["E5002"] = "E5002";
    errorCode["E5003"] = "E5003";
    errorCode["E5004"] = "E5004";
    errorCode["E5005"] = "E5005";
    errorCode["E5006"] = "E5006";
    errorCode["E5007"] = "E5007";
    errorCode["E5008"] = "E5008";
    errorCode["E6000"] = "E6000";
    errorCode["E6001"] = "E6001";
    errorCode["E6002"] = "E6002";
    errorCode["E6003"] = "E6003";
    errorCode["E6004"] = "E6004";
    errorCode["E6005"] = "E6005";
    errorCode["E6006"] = "E6006";
    errorCode["E6007"] = "E6007";
    errorCode["E6008"] = "E6008";
    errorCode["E6009"] = "E6009";
    errorCode["E6010"] = "E6010";
    errorCode["E6011"] = "E6011";
    errorCode["E6012"] = "E6012";
    errorCode["E6013"] = "E6013";
    errorCode["E6014"] = "E6014";
    errorCode["E6015"] = "E6015";
    errorCode["E6016"] = "E6016";
    errorCode["E6017"] = "E6017";
    errorCode["E6018"] = "E6018";
    errorCode["E6019"] = "E6019";
    errorCode["E6020"] = "E6020";
    errorCode["E6021"] = "E6021";
    errorCode["E6100"] = "E6100";
    errorCode["E6101"] = "E6101";
    errorCode["E6200"] = "E6200";
    errorCode["E6201"] = "E6201";
    errorCode["E6202"] = "E6202";
    errorCode["E6203"] = "E6203";
    errorCode["E6204"] = "E6204";
    errorCode["E6205"] = "E6205";
    errorCode["E6206"] = "E6206";
    errorCode["E6207"] = "E6207";
    errorCode["E6208"] = "E6208";
    errorCode["E6209"] = "E6209";
    errorCode["E6210"] = "E6210";
    errorCode["E6211"] = "E6211";
    errorCode["E6300"] = "E6300";
    errorCode["E6301"] = "E6301";
    errorCode["E6302"] = "E6302";
    errorCode["E6303"] = "E6303";
    errorCode["E6304"] = "E6304";
    errorCode["E6305"] = "E6305";
    errorCode["E7000"] = "E7000";
    errorCode["E7003"] = "E7003";
    errorCode["E7004"] = "E7004";
    errorCode["E7005"] = "E7005";
    errorCode["E7006"] = "E7006";
    errorCode["E7007"] = "E7007";
    errorCode["E7010"] = "E7010";
    errorCode["E7020"] = "E7020";
    errorCode["E7021"] = "E7021";
    errorCode["E7022"] = "E7022";
    errorCode["E7023"] = "E7023";
    errorCode["E7024"] = "E7024";
    errorCode["E7100"] = "E7100";
    errorCode["E7101"] = "E7101";
    errorCode["E7102"] = "E7102";
    errorCode["E7103"] = "E7103";
    errorCode["E7104"] = "E7104";
    errorCode["E7105"] = "E7105";
    errorCode["E7106"] = "E7106";
    errorCode["E7107"] = "E7107";
    errorCode["E7108"] = "E7108";
    errorCode["E7109"] = "E7109";
    errorCode["E7110"] = "E7110";
    errorCode["E7111"] = "E7111";
    errorCode["E7112"] = "E7112";
    errorCode["E7113"] = "E7113";
    errorCode["E7114"] = "E7114";
    errorCode["E7115"] = "E7115";
    errorCode["E7116"] = "E7116";
    errorCode["E7117"] = "E7117";
    errorCode["E7118"] = "E7118";
    errorCode["E7119"] = "E7119";
    errorCode["E7120"] = "E7120";
    errorCode["E7121"] = "E7121";
    errorCode["E7122"] = "E7122";
    errorCode["E7123"] = "E7123";
    errorCode["E7124"] = "E7124";
    errorCode["E7125"] = "E7125";
    errorCode["E7126"] = "E7126";
    errorCode["E7127"] = "E7127";
    errorCode["E7128"] = "E7128";
    errorCode["E7129"] = "E7129";
    errorCode["E7130"] = "E7130";
    errorCode["E7131"] = "E7131";
    errorCode["E7132"] = "E7132";
    errorCode["E7133"] = "E7133";
    errorCode["E7134"] = "E7134";
    errorCode["E7135"] = "E7135";
    errorCode["E7136"] = "E7136";
    errorCode["E7137"] = "E7137";
    errorCode["E7138"] = "E7138";
    errorCode["E7139"] = "E7139";
    errorCode["E7140"] = "E7140";
    errorCode["E7141"] = "E7141";
    errorCode["E7142"] = "E7142";
    errorCode["E7200"] = "E7200";
    errorCode["E7201"] = "E7201";
    errorCode["E7202"] = "E7202";
    errorCode["E7203"] = "E7203";
    errorCode["E7204"] = "E7204";
    errorCode["E7205"] = "E7205";
    errorCode["E7206"] = "E7206";
    errorCode["E7207"] = "E7207";
    errorCode["E7208"] = "E7208";
    errorCode["E7209"] = "E7209";
    errorCode["E7210"] = "E7210";
    errorCode["E7211"] = "E7211";
    errorCode["E7212"] = "E7212";
    errorCode["E7213"] = "E7213";
    errorCode["E7214"] = "E7214";
    errorCode["E7215"] = "E7215";
    errorCode["E7216"] = "E7216";
    errorCode["E7217"] = "E7217";
    errorCode["E7218"] = "E7218";
    errorCode["E7219"] = "E7219";
    errorCode["E7220"] = "E7220";
    errorCode["E7221"] = "E7221";
    errorCode["E7222"] = "E7222";
    errorCode["E7223"] = "E7223";
    errorCode["E7224"] = "E7224";
    errorCode["E7225"] = "E7225";
    errorCode["E7226"] = "E7226";
    errorCode["E7227"] = "E7227";
    errorCode["E7228"] = "E7228";
    errorCode["E7229"] = "E7229";
    errorCode["E7230"] = "E7230";
    errorCode["E7231"] = "E7231";
    errorCode["E7232"] = "E7232";
    errorCode["E7234"] = "E7234";
    errorCode["E7235"] = "E7235";
    errorCode["E7236"] = "E7236";
    errorCode["E7237"] = "E7237";
    errorCode["E7238"] = "E7238";
    errorCode["E7250"] = "E7250";
    errorCode["E7300"] = "E7300";
    errorCode["E7301"] = "E7301";
    errorCode["E7400"] = "E7400";
    errorCode["E7500"] = "E7500";
    errorCode["E7501"] = "E7501";
    errorCode["E7502"] = "E7502";
    errorCode["E7503"] = "E7503";
    errorCode["E7600"] = "E7600";
    errorCode["E7601"] = "E7601";
    errorCode["E7602"] = "E7602";
    errorCode["E7603"] = "E7603";
    errorCode["E7604"] = "E7604";
    errorCode["E7610"] = "E7610";
    errorCode["E7611"] = "E7611";
    errorCode["E7612"] = "E7612";
    errorCode["E7613"] = "E7613";
    errorCode["E7614"] = "E7614";
    errorCode["E7615"] = "E7615";
    errorCode["E7616"] = "E7616";
    errorCode["E7617"] = "E7617";
    errorCode["E7618"] = "E7618";
    errorCode["E7619"] = "E7619";
    errorCode["E7620"] = "E7620";
    errorCode["E7621"] = "E7621";
    errorCode["E7630"] = "E7630";
    errorCode["E7631"] = "E7631";
    errorCode["E7632"] = "E7632";
    errorCode["E7633"] = "E7633";
    errorCode["E7634"] = "E7634";
    errorCode["E7635"] = "E7635";
    errorCode["E7636"] = "E7636";
    errorCode["E7637"] = "E7637";
    errorCode["E7638"] = "E7638";
    errorCode["E7639"] = "E7639";
    errorCode["E7640"] = "E7640";
    errorCode["E7641"] = "E7641";
    errorCode["E7642"] = "E7642";
    errorCode["E7643"] = "E7643";
    errorCode["E7644"] = "E7644";
    errorCode["E7645"] = "E7645";
    errorCode["E7650"] = "E7650";
    errorCode["E7651"] = "E7651";
    errorCode["E7652"] = "E7652";
    errorCode["E7653"] = "E7653";
    errorCode["E7700"] = "E7700";
    errorCode["E7701"] = "E7701";
    errorCode["E7702"] = "E7702";
    errorCode["E7703"] = "E7703";
    errorCode["E7704"] = "E7704";
    errorCode["E7705"] = "E7705";
    errorCode["E7706"] = "E7706";
    errorCode["E7707"] = "E7707";
    errorCode["E7708"] = "E7708";
    errorCode["E7709"] = "E7709";
    errorCode["E7710"] = "E7710";
    errorCode["E7711"] = "E7711";
    errorCode["E7712"] = "E7712";
    return errorCode;
  }({});
  _ImportConflict.errorCode = errorCode;
})(ImportConflict || (ImportConflict = {}));
export let ImportOptions;
(function (_ImportOptions) {
  let importStrategy = /*#__PURE__*/function (importStrategy) {
    importStrategy["CREATE"] = "CREATE";
    importStrategy["UPDATE"] = "UPDATE";
    importStrategy["CREATE_AND_UPDATE"] = "CREATE_AND_UPDATE";
    importStrategy["DELETE"] = "DELETE";
    importStrategy["SYNC"] = "SYNC";
    importStrategy["NEW_AND_UPDATES"] = "NEW_AND_UPDATES";
    importStrategy["NEW"] = "NEW";
    importStrategy["UPDATES"] = "UPDATES";
    importStrategy["DELETES"] = "DELETES";
    return importStrategy;
  }({});
  _ImportOptions.importStrategy = importStrategy;
  let mergeMode = /*#__PURE__*/function (mergeMode) {
    mergeMode["MERGE_ALWAYS"] = "MERGE_ALWAYS";
    mergeMode["MERGE_IF_NOT_NULL"] = "MERGE_IF_NOT_NULL";
    mergeMode["MERGE"] = "MERGE";
    mergeMode["REPLACE"] = "REPLACE";
    mergeMode["NONE"] = "NONE";
    return mergeMode;
  }({});
  _ImportOptions.mergeMode = mergeMode;
  let notificationLevel = /*#__PURE__*/function (notificationLevel) {
    notificationLevel["OFF"] = "OFF";
    notificationLevel["DEBUG"] = "DEBUG";
    notificationLevel["LOOP"] = "LOOP";
    notificationLevel["INFO"] = "INFO";
    notificationLevel["WARN"] = "WARN";
    notificationLevel["ERROR"] = "ERROR";
    return notificationLevel;
  }({});
  _ImportOptions.notificationLevel = notificationLevel;
  let reportMode = /*#__PURE__*/function (reportMode) {
    reportMode["FULL"] = "FULL";
    reportMode["ERRORS"] = "ERRORS";
    reportMode["ERRORS_NOT_OWNER"] = "ERRORS_NOT_OWNER";
    reportMode["DEBUG"] = "DEBUG";
    return reportMode;
  }({});
  _ImportOptions.reportMode = reportMode;
})(ImportOptions || (ImportOptions = {}));
export let ImportReport;
(function (_ImportReport) {
  let status = /*#__PURE__*/function (status) {
    status["OK"] = "OK";
    status["WARNING"] = "WARNING";
    status["ERROR"] = "ERROR";
    return status;
  }({});
  _ImportReport.status = status;
})(ImportReport || (ImportReport = {}));
export let ImportSummaries;
(function (_ImportSummaries) {
  let status = /*#__PURE__*/function (status) {
    status["SUCCESS"] = "SUCCESS";
    status["WARNING"] = "WARNING";
    status["ERROR"] = "ERROR";
    return status;
  }({});
  _ImportSummaries.status = status;
})(ImportSummaries || (ImportSummaries = {}));
export let ImportSummary;
(function (_ImportSummary) {
  let status = /*#__PURE__*/function (status) {
    status["SUCCESS"] = "SUCCESS";
    status["WARNING"] = "WARNING";
    status["ERROR"] = "ERROR";
    return status;
  }({});
  _ImportSummary.status = status;
})(ImportSummary || (ImportSummary = {}));
export let IncomingSms;
(function (_IncomingSms) {
  let smsencoding = /*#__PURE__*/function (smsencoding) {
    smsencoding["ENC7BIT"] = "ENC7BIT";
    smsencoding["ENC8BIT"] = "ENC8BIT";
    smsencoding["ENCUCS2"] = "ENCUCS2";
    smsencoding["ENCCUSTOM"] = "ENCCUSTOM";
    return smsencoding;
  }({});
  _IncomingSms.smsencoding = smsencoding;
  let smsstatus = /*#__PURE__*/function (smsstatus) {
    smsstatus["INCOMING"] = "INCOMING";
    smsstatus["PROCESSING"] = "PROCESSING";
    smsstatus["UNHANDLED"] = "UNHANDLED";
    smsstatus["FAILED"] = "FAILED";
    smsstatus["PROCESSED"] = "PROCESSED";
    smsstatus["SENT"] = "SENT";
    return smsstatus;
  }({});
  _IncomingSms.smsstatus = smsstatus;
})(IncomingSms || (IncomingSms = {}));
export let Indicator;
(function (_Indicator) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _Indicator.aggregationType = aggregationType;
})(Indicator || (Indicator = {}));
export let Interpretation;
(function (_Interpretation) {
  let type = /*#__PURE__*/function (type) {
    type["VISUALIZATION"] = "VISUALIZATION";
    type["EVENT_VISUALIZATION"] = "EVENT_VISUALIZATION";
    type["MAP"] = "MAP";
    type["EVENT_REPORT"] = "EVENT_REPORT";
    type["EVENT_CHART"] = "EVENT_CHART";
    type["DATASET_REPORT"] = "DATASET_REPORT";
    return type;
  }({});
  _Interpretation.type = type;
})(Interpretation || (Interpretation = {}));
export let Item;
(function (_Item) {
  let onFailure = /*#__PURE__*/function (onFailure) {
    onFailure["PARENT"] = "PARENT";
    onFailure["FAIL"] = "FAIL";
    onFailure["SKIP_STAGE"] = "SKIP_STAGE";
    onFailure["SKIP_ITEM"] = "SKIP_ITEM";
    onFailure["SKIP_ITEM_OUTLIER"] = "SKIP_ITEM_OUTLIER";
    return onFailure;
  }({});
  _Item.onFailure = onFailure;
  let status = /*#__PURE__*/function (status) {
    status["RUNNING"] = "RUNNING";
    status["SUCCESS"] = "SUCCESS";
    status["ERROR"] = "ERROR";
    status["CANCELLED"] = "CANCELLED";
    return status;
  }({});
  _Item.status = status;
})(Item || (Item = {}));
export let ItemConfig;
(function (_ItemConfig) {
  let insertPosition = /*#__PURE__*/function (insertPosition) {
    insertPosition["START"] = "START";
    insertPosition["END"] = "END";
    return insertPosition;
  }({});
  _ItemConfig.insertPosition = insertPosition;
})(ItemConfig || (ItemConfig = {}));
export let JobConfiguration;
(function (_JobConfiguration) {
  let jobStatus = /*#__PURE__*/function (jobStatus) {
    jobStatus["RUNNING"] = "RUNNING";
    jobStatus["COMPLETED"] = "COMPLETED";
    jobStatus["STOPPED"] = "STOPPED";
    jobStatus["SCHEDULED"] = "SCHEDULED";
    jobStatus["DISABLED"] = "DISABLED";
    jobStatus["FAILED"] = "FAILED";
    jobStatus["NOT_STARTED"] = "NOT_STARTED";
    return jobStatus;
  }({});
  _JobConfiguration.jobStatus = jobStatus;
  let jobType = /*#__PURE__*/function (jobType) {
    jobType["DATA_STATISTICS"] = "DATA_STATISTICS";
    jobType["DATA_INTEGRITY"] = "DATA_INTEGRITY";
    jobType["RESOURCE_TABLE"] = "RESOURCE_TABLE";
    jobType["ANALYTICS_TABLE"] = "ANALYTICS_TABLE";
    jobType["CONTINUOUS_ANALYTICS_TABLE"] = "CONTINUOUS_ANALYTICS_TABLE";
    jobType["DATA_SYNC"] = "DATA_SYNC";
    jobType["TRACKER_PROGRAMS_DATA_SYNC"] = "TRACKER_PROGRAMS_DATA_SYNC";
    jobType["EVENT_PROGRAMS_DATA_SYNC"] = "EVENT_PROGRAMS_DATA_SYNC";
    jobType["FILE_RESOURCE_CLEANUP"] = "FILE_RESOURCE_CLEANUP";
    jobType["IMAGE_PROCESSING"] = "IMAGE_PROCESSING";
    jobType["META_DATA_SYNC"] = "META_DATA_SYNC";
    jobType["AGGREGATE_DATA_EXCHANGE"] = "AGGREGATE_DATA_EXCHANGE";
    jobType["SMS_SEND"] = "SMS_SEND";
    jobType["SEND_SCHEDULED_MESSAGE"] = "SEND_SCHEDULED_MESSAGE";
    jobType["PROGRAM_NOTIFICATIONS"] = "PROGRAM_NOTIFICATIONS";
    jobType["VALIDATION_RESULTS_NOTIFICATION"] = "VALIDATION_RESULTS_NOTIFICATION";
    jobType["CREDENTIALS_EXPIRY_ALERT"] = "CREDENTIALS_EXPIRY_ALERT";
    jobType["MONITORING"] = "MONITORING";
    jobType["PUSH_ANALYSIS"] = "PUSH_ANALYSIS";
    jobType["TRACKER_SEARCH_OPTIMIZATION"] = "TRACKER_SEARCH_OPTIMIZATION";
    jobType["PREDICTOR"] = "PREDICTOR";
    jobType["DATA_SET_NOTIFICATION"] = "DATA_SET_NOTIFICATION";
    jobType["REMOVE_USED_OR_EXPIRED_RESERVED_VALUES"] = "REMOVE_USED_OR_EXPIRED_RESERVED_VALUES";
    jobType["TRACKER_IMPORT_JOB"] = "TRACKER_IMPORT_JOB";
    jobType["TRACKER_IMPORT_NOTIFICATION_JOB"] = "TRACKER_IMPORT_NOTIFICATION_JOB";
    jobType["TRACKER_IMPORT_RULE_ENGINE_JOB"] = "TRACKER_IMPORT_RULE_ENGINE_JOB";
    jobType["MATERIALIZED_SQL_VIEW_UPDATE"] = "MATERIALIZED_SQL_VIEW_UPDATE";
    jobType["LOCK_EXCEPTION_CLEANUP"] = "LOCK_EXCEPTION_CLEANUP";
    jobType["LEADER_ELECTION"] = "LEADER_ELECTION";
    jobType["LEADER_RENEWAL"] = "LEADER_RENEWAL";
    jobType["COMPLETE_DATA_SET_REGISTRATION_IMPORT"] = "COMPLETE_DATA_SET_REGISTRATION_IMPORT";
    jobType["DATAVALUE_IMPORT_INTERNAL"] = "DATAVALUE_IMPORT_INTERNAL";
    jobType["METADATA_IMPORT"] = "METADATA_IMPORT";
    jobType["DATAVALUE_IMPORT"] = "DATAVALUE_IMPORT";
    jobType["GEOJSON_IMPORT"] = "GEOJSON_IMPORT";
    jobType["EVENT_IMPORT"] = "EVENT_IMPORT";
    jobType["ENROLLMENT_IMPORT"] = "ENROLLMENT_IMPORT";
    jobType["TEI_IMPORT"] = "TEI_IMPORT";
    jobType["DISABLE_INACTIVE_USERS"] = "DISABLE_INACTIVE_USERS";
    jobType["ACCOUNT_EXPIRY_ALERT"] = "ACCOUNT_EXPIRY_ALERT";
    jobType["SYSTEM_VERSION_UPDATE_CHECK"] = "SYSTEM_VERSION_UPDATE_CHECK";
    jobType["TEST"] = "TEST";
    jobType["MOCK"] = "MOCK";
    jobType["GML_IMPORT"] = "GML_IMPORT";
    jobType["ANALYTICSTABLE_UPDATE"] = "ANALYTICSTABLE_UPDATE";
    jobType["PROGRAM_DATA_SYNC"] = "PROGRAM_DATA_SYNC";
    return jobType;
  }({});
  _JobConfiguration.jobType = jobType;
  let lastExecutedStatus = /*#__PURE__*/function (lastExecutedStatus) {
    lastExecutedStatus["RUNNING"] = "RUNNING";
    lastExecutedStatus["COMPLETED"] = "COMPLETED";
    lastExecutedStatus["STOPPED"] = "STOPPED";
    lastExecutedStatus["SCHEDULED"] = "SCHEDULED";
    lastExecutedStatus["DISABLED"] = "DISABLED";
    lastExecutedStatus["FAILED"] = "FAILED";
    lastExecutedStatus["NOT_STARTED"] = "NOT_STARTED";
    return lastExecutedStatus;
  }({});
  _JobConfiguration.lastExecutedStatus = lastExecutedStatus;
  let schedulingType = /*#__PURE__*/function (schedulingType) {
    schedulingType["CRON"] = "CRON";
    schedulingType["FIXED_DELAY"] = "FIXED_DELAY";
    return schedulingType;
  }({});
  _JobConfiguration.schedulingType = schedulingType;
})(JobConfiguration || (JobConfiguration = {}));
export let JobTypeInfo;
(function (_JobTypeInfo) {
  let jobType = /*#__PURE__*/function (jobType) {
    jobType["DATA_STATISTICS"] = "DATA_STATISTICS";
    jobType["DATA_INTEGRITY"] = "DATA_INTEGRITY";
    jobType["RESOURCE_TABLE"] = "RESOURCE_TABLE";
    jobType["ANALYTICS_TABLE"] = "ANALYTICS_TABLE";
    jobType["CONTINUOUS_ANALYTICS_TABLE"] = "CONTINUOUS_ANALYTICS_TABLE";
    jobType["DATA_SYNC"] = "DATA_SYNC";
    jobType["TRACKER_PROGRAMS_DATA_SYNC"] = "TRACKER_PROGRAMS_DATA_SYNC";
    jobType["EVENT_PROGRAMS_DATA_SYNC"] = "EVENT_PROGRAMS_DATA_SYNC";
    jobType["FILE_RESOURCE_CLEANUP"] = "FILE_RESOURCE_CLEANUP";
    jobType["IMAGE_PROCESSING"] = "IMAGE_PROCESSING";
    jobType["META_DATA_SYNC"] = "META_DATA_SYNC";
    jobType["AGGREGATE_DATA_EXCHANGE"] = "AGGREGATE_DATA_EXCHANGE";
    jobType["SMS_SEND"] = "SMS_SEND";
    jobType["SEND_SCHEDULED_MESSAGE"] = "SEND_SCHEDULED_MESSAGE";
    jobType["PROGRAM_NOTIFICATIONS"] = "PROGRAM_NOTIFICATIONS";
    jobType["VALIDATION_RESULTS_NOTIFICATION"] = "VALIDATION_RESULTS_NOTIFICATION";
    jobType["CREDENTIALS_EXPIRY_ALERT"] = "CREDENTIALS_EXPIRY_ALERT";
    jobType["MONITORING"] = "MONITORING";
    jobType["PUSH_ANALYSIS"] = "PUSH_ANALYSIS";
    jobType["TRACKER_SEARCH_OPTIMIZATION"] = "TRACKER_SEARCH_OPTIMIZATION";
    jobType["PREDICTOR"] = "PREDICTOR";
    jobType["DATA_SET_NOTIFICATION"] = "DATA_SET_NOTIFICATION";
    jobType["REMOVE_USED_OR_EXPIRED_RESERVED_VALUES"] = "REMOVE_USED_OR_EXPIRED_RESERVED_VALUES";
    jobType["TRACKER_IMPORT_JOB"] = "TRACKER_IMPORT_JOB";
    jobType["TRACKER_IMPORT_NOTIFICATION_JOB"] = "TRACKER_IMPORT_NOTIFICATION_JOB";
    jobType["TRACKER_IMPORT_RULE_ENGINE_JOB"] = "TRACKER_IMPORT_RULE_ENGINE_JOB";
    jobType["MATERIALIZED_SQL_VIEW_UPDATE"] = "MATERIALIZED_SQL_VIEW_UPDATE";
    jobType["LOCK_EXCEPTION_CLEANUP"] = "LOCK_EXCEPTION_CLEANUP";
    jobType["LEADER_ELECTION"] = "LEADER_ELECTION";
    jobType["LEADER_RENEWAL"] = "LEADER_RENEWAL";
    jobType["COMPLETE_DATA_SET_REGISTRATION_IMPORT"] = "COMPLETE_DATA_SET_REGISTRATION_IMPORT";
    jobType["DATAVALUE_IMPORT_INTERNAL"] = "DATAVALUE_IMPORT_INTERNAL";
    jobType["METADATA_IMPORT"] = "METADATA_IMPORT";
    jobType["DATAVALUE_IMPORT"] = "DATAVALUE_IMPORT";
    jobType["GEOJSON_IMPORT"] = "GEOJSON_IMPORT";
    jobType["EVENT_IMPORT"] = "EVENT_IMPORT";
    jobType["ENROLLMENT_IMPORT"] = "ENROLLMENT_IMPORT";
    jobType["TEI_IMPORT"] = "TEI_IMPORT";
    jobType["DISABLE_INACTIVE_USERS"] = "DISABLE_INACTIVE_USERS";
    jobType["ACCOUNT_EXPIRY_ALERT"] = "ACCOUNT_EXPIRY_ALERT";
    jobType["SYSTEM_VERSION_UPDATE_CHECK"] = "SYSTEM_VERSION_UPDATE_CHECK";
    jobType["TEST"] = "TEST";
    jobType["MOCK"] = "MOCK";
    jobType["GML_IMPORT"] = "GML_IMPORT";
    jobType["ANALYTICSTABLE_UPDATE"] = "ANALYTICSTABLE_UPDATE";
    jobType["PROGRAM_DATA_SYNC"] = "PROGRAM_DATA_SYNC";
    return jobType;
  }({});
  _JobTypeInfo.jobType = jobType;
  let schedulingType = /*#__PURE__*/function (schedulingType) {
    schedulingType["CRON"] = "CRON";
    schedulingType["FIXED_DELAY"] = "FIXED_DELAY";
    return schedulingType;
  }({});
  _JobTypeInfo.schedulingType = schedulingType;
})(JobTypeInfo || (JobTypeInfo = {}));
export let LegendDefinitions;
(function (_LegendDefinitions) {
  let strategy = /*#__PURE__*/function (strategy) {
    strategy["FIXED"] = "FIXED";
    strategy["BY_DATA_ITEM"] = "BY_DATA_ITEM";
    return strategy;
  }({});
  _LegendDefinitions.strategy = strategy;
  let style = /*#__PURE__*/function (style) {
    style["FILL"] = "FILL";
    style["TEXT"] = "TEXT";
    return style;
  }({});
  _LegendDefinitions.style = style;
})(LegendDefinitions || (LegendDefinitions = {}));
export let MapView;
(function (_MapView) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _MapView.aggregationType = aggregationType;
  let digitGroupSeparator = /*#__PURE__*/function (digitGroupSeparator) {
    digitGroupSeparator["COMMA"] = "COMMA";
    digitGroupSeparator["SPACE"] = "SPACE";
    digitGroupSeparator["NONE"] = "NONE";
    return digitGroupSeparator;
  }({});
  _MapView.digitGroupSeparator = digitGroupSeparator;
  let eventStatus = /*#__PURE__*/function (eventStatus) {
    eventStatus["ACTIVE"] = "ACTIVE";
    eventStatus["COMPLETED"] = "COMPLETED";
    eventStatus["SCHEDULE"] = "SCHEDULE";
    eventStatus["OVERDUE"] = "OVERDUE";
    eventStatus["SKIPPED"] = "SKIPPED";
    return eventStatus;
  }({});
  _MapView.eventStatus = eventStatus;
  let organisationUnitSelectionMode = /*#__PURE__*/function (organisationUnitSelectionMode) {
    organisationUnitSelectionMode["SELECTED"] = "SELECTED";
    organisationUnitSelectionMode["CHILDREN"] = "CHILDREN";
    organisationUnitSelectionMode["DESCENDANTS"] = "DESCENDANTS";
    organisationUnitSelectionMode["ACCESSIBLE"] = "ACCESSIBLE";
    organisationUnitSelectionMode["CAPTURE"] = "CAPTURE";
    organisationUnitSelectionMode["ALL"] = "ALL";
    return organisationUnitSelectionMode;
  }({});
  _MapView.organisationUnitSelectionMode = organisationUnitSelectionMode;
  let programStatus = /*#__PURE__*/function (programStatus) {
    programStatus["ACTIVE"] = "ACTIVE";
    programStatus["COMPLETED"] = "COMPLETED";
    programStatus["CANCELLED"] = "CANCELLED";
    return programStatus;
  }({});
  _MapView.programStatus = programStatus;
  let renderingStrategy = /*#__PURE__*/function (renderingStrategy) {
    renderingStrategy["SINGLE"] = "SINGLE";
    renderingStrategy["SPLIT_BY_PERIOD"] = "SPLIT_BY_PERIOD";
    renderingStrategy["TIMELINE"] = "TIMELINE";
    return renderingStrategy;
  }({});
  _MapView.renderingStrategy = renderingStrategy;
  let thematicMapType = /*#__PURE__*/function (thematicMapType) {
    thematicMapType["CHOROPLETH"] = "CHOROPLETH";
    thematicMapType["BUBBLE"] = "BUBBLE";
    return thematicMapType;
  }({});
  _MapView.thematicMapType = thematicMapType;
  let userOrgUnitType = /*#__PURE__*/function (userOrgUnitType) {
    userOrgUnitType["DATA_CAPTURE"] = "DATA_CAPTURE";
    userOrgUnitType["DATA_OUTPUT"] = "DATA_OUTPUT";
    userOrgUnitType["TEI_SEARCH"] = "TEI_SEARCH";
    return userOrgUnitType;
  }({});
  _MapView.userOrgUnitType = userOrgUnitType;
})(MapView || (MapView = {}));
export let MessageConversation;
(function (_MessageConversation) {
  let messageType = /*#__PURE__*/function (messageType) {
    messageType["PRIVATE"] = "PRIVATE";
    messageType["SYSTEM"] = "SYSTEM";
    messageType["VALIDATION_RESULT"] = "VALIDATION_RESULT";
    messageType["TICKET"] = "TICKET";
    messageType["SYSTEM_VERSION_UPDATE"] = "SYSTEM_VERSION_UPDATE";
    return messageType;
  }({});
  _MessageConversation.messageType = messageType;
  let priority = /*#__PURE__*/function (priority) {
    priority["NONE"] = "NONE";
    priority["LOW"] = "LOW";
    priority["MEDIUM"] = "MEDIUM";
    priority["HIGH"] = "HIGH";
    return priority;
  }({});
  _MessageConversation.priority = priority;
  let status = /*#__PURE__*/function (status) {
    status["NONE"] = "NONE";
    status["OPEN"] = "OPEN";
    status["PENDING"] = "PENDING";
    status["INVALID"] = "INVALID";
    status["SOLVED"] = "SOLVED";
    return status;
  }({});
  _MessageConversation.status = status;
})(MessageConversation || (MessageConversation = {}));
export let MetadataExportParams;
(function (_MetadataExportParams) {
  let defaults = /*#__PURE__*/function (defaults) {
    defaults["INCLUDE"] = "INCLUDE";
    defaults["EXCLUDE"] = "EXCLUDE";
    return defaults;
  }({});
  _MetadataExportParams.defaults = defaults;
  let inclusionStrategy = /*#__PURE__*/function (inclusionStrategy) {
    inclusionStrategy["ALWAYS"] = "ALWAYS";
    inclusionStrategy["NON_NULL"] = "NON_NULL";
    inclusionStrategy["NON_EMPTY"] = "NON_EMPTY";
    return inclusionStrategy;
  }({});
  _MetadataExportParams.inclusionStrategy = inclusionStrategy;
})(MetadataExportParams || (MetadataExportParams = {}));
export let MetadataImportParams;
(function (_MetadataImportParams) {
  let atomicMode = /*#__PURE__*/function (atomicMode) {
    atomicMode["ALL"] = "ALL";
    atomicMode["NONE"] = "NONE";
    return atomicMode;
  }({});
  _MetadataImportParams.atomicMode = atomicMode;
  let flushMode = /*#__PURE__*/function (flushMode) {
    flushMode["OBJECT"] = "OBJECT";
    flushMode["AUTO"] = "AUTO";
    return flushMode;
  }({});
  _MetadataImportParams.flushMode = flushMode;
  let identifier = /*#__PURE__*/function (identifier) {
    identifier["UID"] = "UID";
    identifier["CODE"] = "CODE";
    return identifier;
  }({});
  _MetadataImportParams.identifier = identifier;
  let importMode = /*#__PURE__*/function (importMode) {
    importMode["COMMIT"] = "COMMIT";
    importMode["VALIDATE"] = "VALIDATE";
    return importMode;
  }({});
  _MetadataImportParams.importMode = importMode;
  let importReportMode = /*#__PURE__*/function (importReportMode) {
    importReportMode["FULL"] = "FULL";
    importReportMode["ERRORS"] = "ERRORS";
    importReportMode["ERRORS_NOT_OWNER"] = "ERRORS_NOT_OWNER";
    importReportMode["DEBUG"] = "DEBUG";
    return importReportMode;
  }({});
  _MetadataImportParams.importReportMode = importReportMode;
  let importStrategy = /*#__PURE__*/function (importStrategy) {
    importStrategy["CREATE"] = "CREATE";
    importStrategy["UPDATE"] = "UPDATE";
    importStrategy["CREATE_AND_UPDATE"] = "CREATE_AND_UPDATE";
    importStrategy["DELETE"] = "DELETE";
    importStrategy["SYNC"] = "SYNC";
    importStrategy["NEW_AND_UPDATES"] = "NEW_AND_UPDATES";
    importStrategy["NEW"] = "NEW";
    importStrategy["UPDATES"] = "UPDATES";
    importStrategy["DELETES"] = "DELETES";
    return importStrategy;
  }({});
  _MetadataImportParams.importStrategy = importStrategy;
  let mergeMode = /*#__PURE__*/function (mergeMode) {
    mergeMode["MERGE_ALWAYS"] = "MERGE_ALWAYS";
    mergeMode["MERGE_IF_NOT_NULL"] = "MERGE_IF_NOT_NULL";
    mergeMode["MERGE"] = "MERGE";
    mergeMode["REPLACE"] = "REPLACE";
    mergeMode["NONE"] = "NONE";
    return mergeMode;
  }({});
  _MetadataImportParams.mergeMode = mergeMode;
  let preheatMode = /*#__PURE__*/function (preheatMode) {
    preheatMode["REFERENCE"] = "REFERENCE";
    preheatMode["ALL"] = "ALL";
    preheatMode["NONE"] = "NONE";
    return preheatMode;
  }({});
  _MetadataImportParams.preheatMode = preheatMode;
  let userOverrideMode = /*#__PURE__*/function (userOverrideMode) {
    userOverrideMode["NONE"] = "NONE";
    userOverrideMode["CURRENT"] = "CURRENT";
    userOverrideMode["SELECTED"] = "SELECTED";
    return userOverrideMode;
  }({});
  _MetadataImportParams.userOverrideMode = userOverrideMode;
})(MetadataImportParams || (MetadataImportParams = {}));
export let MetadataItem;
(function (_MetadataItem) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _MetadataItem.aggregationType = aggregationType;
  let dimensionItemType = /*#__PURE__*/function (dimensionItemType) {
    dimensionItemType["DATA_ELEMENT"] = "DATA_ELEMENT";
    dimensionItemType["DATA_ELEMENT_OPERAND"] = "DATA_ELEMENT_OPERAND";
    dimensionItemType["INDICATOR"] = "INDICATOR";
    dimensionItemType["REPORTING_RATE"] = "REPORTING_RATE";
    dimensionItemType["PROGRAM_DATA_ELEMENT"] = "PROGRAM_DATA_ELEMENT";
    dimensionItemType["PROGRAM_ATTRIBUTE"] = "PROGRAM_ATTRIBUTE";
    dimensionItemType["PROGRAM_INDICATOR"] = "PROGRAM_INDICATOR";
    dimensionItemType["PERIOD"] = "PERIOD";
    dimensionItemType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    dimensionItemType["CATEGORY_OPTION"] = "CATEGORY_OPTION";
    dimensionItemType["OPTION_GROUP"] = "OPTION_GROUP";
    dimensionItemType["DATA_ELEMENT_GROUP"] = "DATA_ELEMENT_GROUP";
    dimensionItemType["ORGANISATION_UNIT_GROUP"] = "ORGANISATION_UNIT_GROUP";
    dimensionItemType["CATEGORY_OPTION_GROUP"] = "CATEGORY_OPTION_GROUP";
    dimensionItemType["EXPRESSION_DIMENSION_ITEM"] = "EXPRESSION_DIMENSION_ITEM";
    dimensionItemType["SUBEXPRESSION_DIMENSION_ITEM"] = "SUBEXPRESSION_DIMENSION_ITEM";
    return dimensionItemType;
  }({});
  _MetadataItem.dimensionItemType = dimensionItemType;
  let dimensionType = /*#__PURE__*/function (dimensionType) {
    dimensionType["DATA_X"] = "DATA_X";
    dimensionType["PROGRAM_DATA_ELEMENT"] = "PROGRAM_DATA_ELEMENT";
    dimensionType["PROGRAM_ATTRIBUTE"] = "PROGRAM_ATTRIBUTE";
    dimensionType["PROGRAM_INDICATOR"] = "PROGRAM_INDICATOR";
    dimensionType["DATA_COLLAPSED"] = "DATA_COLLAPSED";
    dimensionType["CATEGORY_OPTION_COMBO"] = "CATEGORY_OPTION_COMBO";
    dimensionType["ATTRIBUTE_OPTION_COMBO"] = "ATTRIBUTE_OPTION_COMBO";
    dimensionType["PERIOD"] = "PERIOD";
    dimensionType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    dimensionType["CATEGORY_OPTION_GROUP_SET"] = "CATEGORY_OPTION_GROUP_SET";
    dimensionType["DATA_ELEMENT_GROUP_SET"] = "DATA_ELEMENT_GROUP_SET";
    dimensionType["ORGANISATION_UNIT_GROUP_SET"] = "ORGANISATION_UNIT_GROUP_SET";
    dimensionType["ORGANISATION_UNIT_GROUP"] = "ORGANISATION_UNIT_GROUP";
    dimensionType["CATEGORY"] = "CATEGORY";
    dimensionType["OPTION_GROUP_SET"] = "OPTION_GROUP_SET";
    dimensionType["VALIDATION_RULE"] = "VALIDATION_RULE";
    dimensionType["STATIC"] = "STATIC";
    dimensionType["ORGANISATION_UNIT_LEVEL"] = "ORGANISATION_UNIT_LEVEL";
    return dimensionType;
  }({});
  _MetadataItem.dimensionType = dimensionType;
  let totalAggregationType = /*#__PURE__*/function (totalAggregationType) {
    totalAggregationType["SUM"] = "SUM";
    totalAggregationType["AVERAGE"] = "AVERAGE";
    return totalAggregationType;
  }({});
  _MetadataItem.totalAggregationType = totalAggregationType;
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _MetadataItem.valueType = valueType;
})(MetadataItem || (MetadataItem = {}));
export let MetadataVersion;
(function (_MetadataVersion) {
  let type = /*#__PURE__*/function (type) {
    type["BEST_EFFORT"] = "BEST_EFFORT";
    type["ATOMIC"] = "ATOMIC";
    return type;
  }({});
  _MetadataVersion.type = type;
})(MetadataVersion || (MetadataVersion = {}));
export let Node;
(function (_Node) {
  let type = /*#__PURE__*/function (type) {
    type["SIMPLE"] = "SIMPLE";
    type["COMPLEX"] = "COMPLEX";
    type["COLLECTION"] = "COLLECTION";
    return type;
  }({});
  _Node.type = type;
})(Node || (Node = {}));
export let Notification;
(function (_Notification) {
  let category = /*#__PURE__*/function (category) {
    category["DATA_STATISTICS"] = "DATA_STATISTICS";
    category["DATA_INTEGRITY"] = "DATA_INTEGRITY";
    category["RESOURCE_TABLE"] = "RESOURCE_TABLE";
    category["ANALYTICS_TABLE"] = "ANALYTICS_TABLE";
    category["CONTINUOUS_ANALYTICS_TABLE"] = "CONTINUOUS_ANALYTICS_TABLE";
    category["DATA_SYNC"] = "DATA_SYNC";
    category["TRACKER_PROGRAMS_DATA_SYNC"] = "TRACKER_PROGRAMS_DATA_SYNC";
    category["EVENT_PROGRAMS_DATA_SYNC"] = "EVENT_PROGRAMS_DATA_SYNC";
    category["FILE_RESOURCE_CLEANUP"] = "FILE_RESOURCE_CLEANUP";
    category["IMAGE_PROCESSING"] = "IMAGE_PROCESSING";
    category["META_DATA_SYNC"] = "META_DATA_SYNC";
    category["AGGREGATE_DATA_EXCHANGE"] = "AGGREGATE_DATA_EXCHANGE";
    category["SMS_SEND"] = "SMS_SEND";
    category["SEND_SCHEDULED_MESSAGE"] = "SEND_SCHEDULED_MESSAGE";
    category["PROGRAM_NOTIFICATIONS"] = "PROGRAM_NOTIFICATIONS";
    category["VALIDATION_RESULTS_NOTIFICATION"] = "VALIDATION_RESULTS_NOTIFICATION";
    category["CREDENTIALS_EXPIRY_ALERT"] = "CREDENTIALS_EXPIRY_ALERT";
    category["MONITORING"] = "MONITORING";
    category["PUSH_ANALYSIS"] = "PUSH_ANALYSIS";
    category["TRACKER_SEARCH_OPTIMIZATION"] = "TRACKER_SEARCH_OPTIMIZATION";
    category["PREDICTOR"] = "PREDICTOR";
    category["DATA_SET_NOTIFICATION"] = "DATA_SET_NOTIFICATION";
    category["REMOVE_USED_OR_EXPIRED_RESERVED_VALUES"] = "REMOVE_USED_OR_EXPIRED_RESERVED_VALUES";
    category["TRACKER_IMPORT_JOB"] = "TRACKER_IMPORT_JOB";
    category["TRACKER_IMPORT_NOTIFICATION_JOB"] = "TRACKER_IMPORT_NOTIFICATION_JOB";
    category["TRACKER_IMPORT_RULE_ENGINE_JOB"] = "TRACKER_IMPORT_RULE_ENGINE_JOB";
    category["MATERIALIZED_SQL_VIEW_UPDATE"] = "MATERIALIZED_SQL_VIEW_UPDATE";
    category["LOCK_EXCEPTION_CLEANUP"] = "LOCK_EXCEPTION_CLEANUP";
    category["LEADER_ELECTION"] = "LEADER_ELECTION";
    category["LEADER_RENEWAL"] = "LEADER_RENEWAL";
    category["COMPLETE_DATA_SET_REGISTRATION_IMPORT"] = "COMPLETE_DATA_SET_REGISTRATION_IMPORT";
    category["DATAVALUE_IMPORT_INTERNAL"] = "DATAVALUE_IMPORT_INTERNAL";
    category["METADATA_IMPORT"] = "METADATA_IMPORT";
    category["DATAVALUE_IMPORT"] = "DATAVALUE_IMPORT";
    category["GEOJSON_IMPORT"] = "GEOJSON_IMPORT";
    category["EVENT_IMPORT"] = "EVENT_IMPORT";
    category["ENROLLMENT_IMPORT"] = "ENROLLMENT_IMPORT";
    category["TEI_IMPORT"] = "TEI_IMPORT";
    category["DISABLE_INACTIVE_USERS"] = "DISABLE_INACTIVE_USERS";
    category["ACCOUNT_EXPIRY_ALERT"] = "ACCOUNT_EXPIRY_ALERT";
    category["SYSTEM_VERSION_UPDATE_CHECK"] = "SYSTEM_VERSION_UPDATE_CHECK";
    category["TEST"] = "TEST";
    category["MOCK"] = "MOCK";
    category["GML_IMPORT"] = "GML_IMPORT";
    category["ANALYTICSTABLE_UPDATE"] = "ANALYTICSTABLE_UPDATE";
    category["PROGRAM_DATA_SYNC"] = "PROGRAM_DATA_SYNC";
    return category;
  }({});
  _Notification.category = category;
  let dataType = /*#__PURE__*/function (dataType) {
    dataType["PARAMETERS"] = "PARAMETERS";
    return dataType;
  }({});
  _Notification.dataType = dataType;
  let level = /*#__PURE__*/function (level) {
    level["OFF"] = "OFF";
    level["DEBUG"] = "DEBUG";
    level["LOOP"] = "LOOP";
    level["INFO"] = "INFO";
    level["WARN"] = "WARN";
    level["ERROR"] = "ERROR";
    return level;
  }({});
  _Notification.level = level;
})(Notification || (Notification = {}));
export let ObjectValueTypeRenderingOption;
(function (_ObjectValueTypeRenderingOption) {
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _ObjectValueTypeRenderingOption.valueType = valueType;
})(ObjectValueTypeRenderingOption || (ObjectValueTypeRenderingOption = {}));
export let OptionGroup;
(function (_OptionGroup) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _OptionGroup.aggregationType = aggregationType;
})(OptionGroup || (OptionGroup = {}));
export let OptionGroupSet;
(function (_OptionGroupSet) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _OptionGroupSet.aggregationType = aggregationType;
  let dataDimensionType = /*#__PURE__*/function (dataDimensionType) {
    dataDimensionType["DISAGGREGATION"] = "DISAGGREGATION";
    dataDimensionType["ATTRIBUTE"] = "ATTRIBUTE";
    return dataDimensionType;
  }({});
  _OptionGroupSet.dataDimensionType = dataDimensionType;
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _OptionGroupSet.valueType = valueType;
})(OptionGroupSet || (OptionGroupSet = {}));
export let OptionSet;
(function (_OptionSet) {
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _OptionSet.valueType = valueType;
})(OptionSet || (OptionSet = {}));
export let OrderCriteria;
(function (_OrderCriteria) {
  let direction = /*#__PURE__*/function (direction) {
    direction["ASC"] = "ASC";
    direction["DESC"] = "DESC";
    direction["IASC"] = "IASC";
    direction["IDESC"] = "IDESC";
    return direction;
  }({});
  _OrderCriteria.direction = direction;
})(OrderCriteria || (OrderCriteria = {}));
export let OrganisationUnit;
(function (_OrganisationUnit) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _OrganisationUnit.aggregationType = aggregationType;
})(OrganisationUnit || (OrganisationUnit = {}));
export let OrganisationUnitGroup;
(function (_OrganisationUnitGroup) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _OrganisationUnitGroup.aggregationType = aggregationType;
  let featureType = /*#__PURE__*/function (featureType) {
    featureType["NONE"] = "NONE";
    featureType["MULTI_POLYGON"] = "MULTI_POLYGON";
    featureType["POLYGON"] = "POLYGON";
    featureType["POINT"] = "POINT";
    featureType["SYMBOL"] = "SYMBOL";
    return featureType;
  }({});
  _OrganisationUnitGroup.featureType = featureType;
})(OrganisationUnitGroup || (OrganisationUnitGroup = {}));
export let OrganisationUnitGroupSet;
(function (_OrganisationUnitGroupSet) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _OrganisationUnitGroupSet.aggregationType = aggregationType;
  let dataDimensionType = /*#__PURE__*/function (dataDimensionType) {
    dataDimensionType["DISAGGREGATION"] = "DISAGGREGATION";
    dataDimensionType["ATTRIBUTE"] = "ATTRIBUTE";
    return dataDimensionType;
  }({});
  _OrganisationUnitGroupSet.dataDimensionType = dataDimensionType;
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _OrganisationUnitGroupSet.valueType = valueType;
})(OrganisationUnitGroupSet || (OrganisationUnitGroupSet = {}));
export let OrgUnitInfo;
(function (_OrgUnitInfo) {
  let featureType = /*#__PURE__*/function (featureType) {
    featureType["NONE"] = "NONE";
    featureType["MULTI_POLYGON"] = "MULTI_POLYGON";
    featureType["POLYGON"] = "POLYGON";
    featureType["POINT"] = "POINT";
    featureType["SYMBOL"] = "SYMBOL";
    return featureType;
  }({});
  _OrgUnitInfo.featureType = featureType;
})(OrgUnitInfo || (OrgUnitInfo = {}));
export let OrgUnitMergeQuery;
(function (_OrgUnitMergeQuery) {
  let dataApprovalMergeStrategy = /*#__PURE__*/function (dataApprovalMergeStrategy) {
    dataApprovalMergeStrategy["LAST_UPDATED"] = "LAST_UPDATED";
    dataApprovalMergeStrategy["DISCARD"] = "DISCARD";
    return dataApprovalMergeStrategy;
  }({});
  _OrgUnitMergeQuery.dataApprovalMergeStrategy = dataApprovalMergeStrategy;
  let dataValueMergeStrategy = /*#__PURE__*/function (dataValueMergeStrategy) {
    dataValueMergeStrategy["LAST_UPDATED"] = "LAST_UPDATED";
    dataValueMergeStrategy["DISCARD"] = "DISCARD";
    return dataValueMergeStrategy;
  }({});
  _OrgUnitMergeQuery.dataValueMergeStrategy = dataValueMergeStrategy;
})(OrgUnitMergeQuery || (OrgUnitMergeQuery = {}));
export let OutboundMessageResponseSummary;
(function (_OutboundMessageResponseSummary) {
  let batchType = /*#__PURE__*/function (batchType) {
    batchType["SMS"] = "SMS";
    batchType["EMAIL"] = "EMAIL";
    batchType["HTTP"] = "HTTP";
    return batchType;
  }({});
  _OutboundMessageResponseSummary.batchType = batchType;
  let status = /*#__PURE__*/function (status) {
    status["COMPLETED"] = "COMPLETED";
    status["FAILED"] = "FAILED";
    status["PENDING"] = "PENDING";
    status["ABORTED"] = "ABORTED";
    return status;
  }({});
  _OutboundMessageResponseSummary.status = status;
})(OutboundMessageResponseSummary || (OutboundMessageResponseSummary = {}));
export let OutboundSms;
(function (_OutboundSms) {
  let status = /*#__PURE__*/function (status) {
    status["OUTBOUND"] = "OUTBOUND";
    status["SENT"] = "SENT";
    status["ERROR"] = "ERROR";
    status["PENDING"] = "PENDING";
    status["SCHEDULED"] = "SCHEDULED";
    status["DELIVERED"] = "DELIVERED";
    status["FAILED"] = "FAILED";
    return status;
  }({});
  _OutboundSms.status = status;
})(OutboundSms || (OutboundSms = {}));
export let OutlierAnalysis;
(function (_OutlierAnalysis) {
  let normalizationMethod = /*#__PURE__*/function (normalizationMethod) {
    normalizationMethod["Y_RESIDUALS_LINEAR"] = "Y_RESIDUALS_LINEAR";
    return normalizationMethod;
  }({});
  _OutlierAnalysis.normalizationMethod = normalizationMethod;
  let outlierMethod = /*#__PURE__*/function (outlierMethod) {
    outlierMethod["IQR"] = "IQR";
    outlierMethod["STANDARD_Z_SCORE"] = "STANDARD_Z_SCORE";
    outlierMethod["MODIFIED_Z_SCORE"] = "MODIFIED_Z_SCORE";
    return outlierMethod;
  }({});
  _OutlierAnalysis.outlierMethod = outlierMethod;
})(OutlierAnalysis || (OutlierAnalysis = {}));
export let OutlierDetectionMetadata;
(function (_OutlierDetectionMetadata) {
  let algorithm = /*#__PURE__*/function (algorithm) {
    algorithm["Z_SCORE"] = "Z_SCORE";
    algorithm["MIN_MAX"] = "MIN_MAX";
    algorithm["MOD_Z_SCORE"] = "MOD_Z_SCORE";
    return algorithm;
  }({});
  _OutlierDetectionMetadata.algorithm = algorithm;
  let orderBy = /*#__PURE__*/function (orderBy) {
    orderBy["MEAN_ABS_DEV"] = "MEAN_ABS_DEV";
    orderBy["Z_SCORE"] = "Z_SCORE";
    return orderBy;
  }({});
  _OutlierDetectionMetadata.orderBy = orderBy;
})(OutlierDetectionMetadata || (OutlierDetectionMetadata = {}));
export let PotentialDuplicate;
(function (_PotentialDuplicate) {
  let status = /*#__PURE__*/function (status) {
    status["ALL"] = "ALL";
    status["OPEN"] = "OPEN";
    status["INVALID"] = "INVALID";
    status["MERGED"] = "MERGED";
    return status;
  }({});
  _PotentialDuplicate.status = status;
})(PotentialDuplicate || (PotentialDuplicate = {}));
export let Predictor;
(function (_Predictor) {
  let organisationUnitDescendants = /*#__PURE__*/function (organisationUnitDescendants) {
    organisationUnitDescendants["SELECTED"] = "SELECTED";
    organisationUnitDescendants["DESCENDANTS"] = "DESCENDANTS";
    return organisationUnitDescendants;
  }({});
  _Predictor.organisationUnitDescendants = organisationUnitDescendants;
  let periodType = /*#__PURE__*/function (periodType) {
    periodType["BI_MONTHLY"] = "BiMonthly";
    periodType["BI_WEEKLY"] = "BiWeekly";
    periodType["DAILY"] = "Daily";
    periodType["FINANCIAL_APRIL"] = "FinancialApril";
    periodType["FINANCIAL_JULY"] = "FinancialJuly";
    periodType["FINANCIAL_NOV"] = "FinancialNov";
    periodType["FINANCIAL_OCT"] = "FinancialOct";
    periodType["MONTHLY"] = "Monthly";
    periodType["QUARTERLY"] = "Quarterly";
    periodType["QUARTERLY_NOV"] = "QuarterlyNov";
    periodType["SIX_MONTHLY_APRIL"] = "SixMonthlyApril";
    periodType["SIX_MONTHLY_NOV"] = "SixMonthlyNov";
    periodType["SIX_MONTHLY"] = "SixMonthly";
    periodType["TWO_YEARLY"] = "TwoYearly";
    periodType["WEEKLY"] = "Weekly";
    periodType["WEEKLY_SATURDAY"] = "WeeklySaturday";
    periodType["WEEKLY_SUNDAY"] = "WeeklySunday";
    periodType["WEEKLY_THURSDAY"] = "WeeklyThursday";
    periodType["WEEKLY_WEDNESDAY"] = "WeeklyWednesday";
    periodType["YEARLY"] = "Yearly";
    return periodType;
  }({});
  _Predictor.periodType = periodType;
})(Predictor || (Predictor = {}));
export let Process;
(function (_Process) {
  let status = /*#__PURE__*/function (status) {
    status["RUNNING"] = "RUNNING";
    status["SUCCESS"] = "SUCCESS";
    status["ERROR"] = "ERROR";
    status["CANCELLED"] = "CANCELLED";
    return status;
  }({});
  _Process.status = status;
})(Process || (Process = {}));
export let ProcessInfo;
(function (_ProcessInfo) {
  let status = /*#__PURE__*/function (status) {
    status["RUNNING"] = "RUNNING";
    status["SUCCESS"] = "SUCCESS";
    status["ERROR"] = "ERROR";
    status["CANCELLED"] = "CANCELLED";
    return status;
  }({});
  _ProcessInfo.status = status;
})(ProcessInfo || (ProcessInfo = {}));
export let Program;
(function (_Program) {
  let accessLevel = /*#__PURE__*/function (accessLevel) {
    accessLevel["OPEN"] = "OPEN";
    accessLevel["AUDITED"] = "AUDITED";
    accessLevel["PROTECTED"] = "PROTECTED";
    accessLevel["CLOSED"] = "CLOSED";
    return accessLevel;
  }({});
  _Program.accessLevel = accessLevel;
  let expiryPeriodType = /*#__PURE__*/function (expiryPeriodType) {
    expiryPeriodType["BI_MONTHLY"] = "BiMonthly";
    expiryPeriodType["BI_WEEKLY"] = "BiWeekly";
    expiryPeriodType["DAILY"] = "Daily";
    expiryPeriodType["FINANCIAL_APRIL"] = "FinancialApril";
    expiryPeriodType["FINANCIAL_JULY"] = "FinancialJuly";
    expiryPeriodType["FINANCIAL_NOV"] = "FinancialNov";
    expiryPeriodType["FINANCIAL_OCT"] = "FinancialOct";
    expiryPeriodType["MONTHLY"] = "Monthly";
    expiryPeriodType["QUARTERLY"] = "Quarterly";
    expiryPeriodType["QUARTERLY_NOV"] = "QuarterlyNov";
    expiryPeriodType["SIX_MONTHLY_APRIL"] = "SixMonthlyApril";
    expiryPeriodType["SIX_MONTHLY_NOV"] = "SixMonthlyNov";
    expiryPeriodType["SIX_MONTHLY"] = "SixMonthly";
    expiryPeriodType["TWO_YEARLY"] = "TwoYearly";
    expiryPeriodType["WEEKLY"] = "Weekly";
    expiryPeriodType["WEEKLY_SATURDAY"] = "WeeklySaturday";
    expiryPeriodType["WEEKLY_SUNDAY"] = "WeeklySunday";
    expiryPeriodType["WEEKLY_THURSDAY"] = "WeeklyThursday";
    expiryPeriodType["WEEKLY_WEDNESDAY"] = "WeeklyWednesday";
    expiryPeriodType["YEARLY"] = "Yearly";
    return expiryPeriodType;
  }({});
  _Program.expiryPeriodType = expiryPeriodType;
  let featureType = /*#__PURE__*/function (featureType) {
    featureType["NONE"] = "NONE";
    featureType["MULTI_POLYGON"] = "MULTI_POLYGON";
    featureType["POLYGON"] = "POLYGON";
    featureType["POINT"] = "POINT";
    featureType["SYMBOL"] = "SYMBOL";
    return featureType;
  }({});
  _Program.featureType = featureType;
  let programType = /*#__PURE__*/function (programType) {
    programType["WITH_REGISTRATION"] = "WITH_REGISTRATION";
    programType["WITHOUT_REGISTRATION"] = "WITHOUT_REGISTRATION";
    return programType;
  }({});
  _Program.programType = programType;
})(Program || (Program = {}));
export let ProgramDataElementDimensionItem;
(function (_ProgramDataElementDimensionItem) {
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _ProgramDataElementDimensionItem.valueType = valueType;
})(ProgramDataElementDimensionItem || (ProgramDataElementDimensionItem = {}));
export let ProgramIndicator;
(function (_ProgramIndicator) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _ProgramIndicator.aggregationType = aggregationType;
  let analyticsType = /*#__PURE__*/function (analyticsType) {
    analyticsType["EVENT"] = "EVENT";
    analyticsType["ENROLLMENT"] = "ENROLLMENT";
    return analyticsType;
  }({});
  _ProgramIndicator.analyticsType = analyticsType;
})(ProgramIndicator || (ProgramIndicator = {}));
export let ProgramMessage;
(function (_ProgramMessage) {
  let messageStatus = /*#__PURE__*/function (messageStatus) {
    messageStatus["SENT"] = "SENT";
    messageStatus["FAILED"] = "FAILED";
    messageStatus["SCHEDULED"] = "SCHEDULED";
    messageStatus["OUTBOUND"] = "OUTBOUND";
    return messageStatus;
  }({});
  _ProgramMessage.messageStatus = messageStatus;
})(ProgramMessage || (ProgramMessage = {}));
export let ProgramNotificationTemplate;
(function (_ProgramNotificationTemplate) {
  let notificationRecipient = /*#__PURE__*/function (notificationRecipient) {
    notificationRecipient["TRACKED_ENTITY_INSTANCE"] = "TRACKED_ENTITY_INSTANCE";
    notificationRecipient["ORGANISATION_UNIT_CONTACT"] = "ORGANISATION_UNIT_CONTACT";
    notificationRecipient["USERS_AT_ORGANISATION_UNIT"] = "USERS_AT_ORGANISATION_UNIT";
    notificationRecipient["USER_GROUP"] = "USER_GROUP";
    notificationRecipient["PROGRAM_ATTRIBUTE"] = "PROGRAM_ATTRIBUTE";
    notificationRecipient["DATA_ELEMENT"] = "DATA_ELEMENT";
    notificationRecipient["WEB_HOOK"] = "WEB_HOOK";
    return notificationRecipient;
  }({});
  _ProgramNotificationTemplate.notificationRecipient = notificationRecipient;
  let notificationTrigger = /*#__PURE__*/function (notificationTrigger) {
    notificationTrigger["ENROLLMENT"] = "ENROLLMENT";
    notificationTrigger["COMPLETION"] = "COMPLETION";
    notificationTrigger["PROGRAM_RULE"] = "PROGRAM_RULE";
    notificationTrigger["SCHEDULED_DAYS_DUE_DATE"] = "SCHEDULED_DAYS_DUE_DATE";
    notificationTrigger["SCHEDULED_DAYS_INCIDENT_DATE"] = "SCHEDULED_DAYS_INCIDENT_DATE";
    notificationTrigger["SCHEDULED_DAYS_ENROLLMENT_DATE"] = "SCHEDULED_DAYS_ENROLLMENT_DATE";
    return notificationTrigger;
  }({});
  _ProgramNotificationTemplate.notificationTrigger = notificationTrigger;
})(ProgramNotificationTemplate || (ProgramNotificationTemplate = {}));
export let ProgramRuleAction;
(function (_ProgramRuleAction) {
  let programRuleActionEvaluationTime = /*#__PURE__*/function (programRuleActionEvaluationTime) {
    programRuleActionEvaluationTime["ON_DATA_ENTRY"] = "ON_DATA_ENTRY";
    programRuleActionEvaluationTime["ON_COMPLETE"] = "ON_COMPLETE";
    programRuleActionEvaluationTime["ALWAYS"] = "ALWAYS";
    return programRuleActionEvaluationTime;
  }({});
  _ProgramRuleAction.programRuleActionEvaluationTime = programRuleActionEvaluationTime;
  let programRuleActionType = /*#__PURE__*/function (programRuleActionType) {
    programRuleActionType["DISPLAYTEXT"] = "DISPLAYTEXT";
    programRuleActionType["DISPLAYKEYVALUEPAIR"] = "DISPLAYKEYVALUEPAIR";
    programRuleActionType["HIDEFIELD"] = "HIDEFIELD";
    programRuleActionType["HIDESECTION"] = "HIDESECTION";
    programRuleActionType["HIDEPROGRAMSTAGE"] = "HIDEPROGRAMSTAGE";
    programRuleActionType["ASSIGN"] = "ASSIGN";
    programRuleActionType["SHOWWARNING"] = "SHOWWARNING";
    programRuleActionType["WARNINGONCOMPLETE"] = "WARNINGONCOMPLETE";
    programRuleActionType["SHOWERROR"] = "SHOWERROR";
    programRuleActionType["ERRORONCOMPLETE"] = "ERRORONCOMPLETE";
    programRuleActionType["CREATEEVENT"] = "CREATEEVENT";
    programRuleActionType["SETMANDATORYFIELD"] = "SETMANDATORYFIELD";
    programRuleActionType["SENDMESSAGE"] = "SENDMESSAGE";
    programRuleActionType["SCHEDULEMESSAGE"] = "SCHEDULEMESSAGE";
    programRuleActionType["HIDEOPTION"] = "HIDEOPTION";
    programRuleActionType["SHOWOPTIONGROUP"] = "SHOWOPTIONGROUP";
    programRuleActionType["HIDEOPTIONGROUP"] = "HIDEOPTIONGROUP";
    return programRuleActionType;
  }({});
  _ProgramRuleAction.programRuleActionType = programRuleActionType;
})(ProgramRuleAction || (ProgramRuleAction = {}));
export let ProgramRuleVariable;
(function (_ProgramRuleVariable) {
  let programRuleVariableSourceType = /*#__PURE__*/function (programRuleVariableSourceType) {
    programRuleVariableSourceType["DATAELEMENT_NEWEST_EVENT_PROGRAM_STAGE"] = "DATAELEMENT_NEWEST_EVENT_PROGRAM_STAGE";
    programRuleVariableSourceType["DATAELEMENT_NEWEST_EVENT_PROGRAM"] = "DATAELEMENT_NEWEST_EVENT_PROGRAM";
    programRuleVariableSourceType["DATAELEMENT_CURRENT_EVENT"] = "DATAELEMENT_CURRENT_EVENT";
    programRuleVariableSourceType["DATAELEMENT_PREVIOUS_EVENT"] = "DATAELEMENT_PREVIOUS_EVENT";
    programRuleVariableSourceType["CALCULATED_VALUE"] = "CALCULATED_VALUE";
    programRuleVariableSourceType["TEI_ATTRIBUTE"] = "TEI_ATTRIBUTE";
    return programRuleVariableSourceType;
  }({});
  _ProgramRuleVariable.programRuleVariableSourceType = programRuleVariableSourceType;
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _ProgramRuleVariable.valueType = valueType;
})(ProgramRuleVariable || (ProgramRuleVariable = {}));
export let ProgramStage;
(function (_ProgramStage) {
  let featureType = /*#__PURE__*/function (featureType) {
    featureType["NONE"] = "NONE";
    featureType["MULTI_POLYGON"] = "MULTI_POLYGON";
    featureType["POLYGON"] = "POLYGON";
    featureType["POINT"] = "POINT";
    featureType["SYMBOL"] = "SYMBOL";
    return featureType;
  }({});
  _ProgramStage.featureType = featureType;
  let formType = /*#__PURE__*/function (formType) {
    formType["DEFAULT"] = "DEFAULT";
    formType["CUSTOM"] = "CUSTOM";
    formType["SECTION"] = "SECTION";
    formType["SECTION_MULTIORG"] = "SECTION_MULTIORG";
    return formType;
  }({});
  _ProgramStage.formType = formType;
  let periodType = /*#__PURE__*/function (periodType) {
    periodType["BI_MONTHLY"] = "BiMonthly";
    periodType["BI_WEEKLY"] = "BiWeekly";
    periodType["DAILY"] = "Daily";
    periodType["FINANCIAL_APRIL"] = "FinancialApril";
    periodType["FINANCIAL_JULY"] = "FinancialJuly";
    periodType["FINANCIAL_NOV"] = "FinancialNov";
    periodType["FINANCIAL_OCT"] = "FinancialOct";
    periodType["MONTHLY"] = "Monthly";
    periodType["QUARTERLY"] = "Quarterly";
    periodType["QUARTERLY_NOV"] = "QuarterlyNov";
    periodType["SIX_MONTHLY_APRIL"] = "SixMonthlyApril";
    periodType["SIX_MONTHLY_NOV"] = "SixMonthlyNov";
    periodType["SIX_MONTHLY"] = "SixMonthly";
    periodType["TWO_YEARLY"] = "TwoYearly";
    periodType["WEEKLY"] = "Weekly";
    periodType["WEEKLY_SATURDAY"] = "WeeklySaturday";
    periodType["WEEKLY_SUNDAY"] = "WeeklySunday";
    periodType["WEEKLY_THURSDAY"] = "WeeklyThursday";
    periodType["WEEKLY_WEDNESDAY"] = "WeeklyWednesday";
    periodType["YEARLY"] = "Yearly";
    return periodType;
  }({});
  _ProgramStage.periodType = periodType;
  let validationStrategy = /*#__PURE__*/function (validationStrategy) {
    validationStrategy["ON_COMPLETE"] = "ON_COMPLETE";
    validationStrategy["ON_UPDATE_AND_INSERT"] = "ON_UPDATE_AND_INSERT";
    return validationStrategy;
  }({});
  _ProgramStage.validationStrategy = validationStrategy;
})(ProgramStage || (ProgramStage = {}));
export let ProgramStageQueryCriteria;
(function (_ProgramStageQueryCriteria) {
  let assignedUserMode = /*#__PURE__*/function (assignedUserMode) {
    assignedUserMode["CURRENT"] = "CURRENT";
    assignedUserMode["PROVIDED"] = "PROVIDED";
    assignedUserMode["NONE"] = "NONE";
    assignedUserMode["ANY"] = "ANY";
    assignedUserMode["ALL"] = "ALL";
    return assignedUserMode;
  }({});
  _ProgramStageQueryCriteria.assignedUserMode = assignedUserMode;
  let enrollmentStatus = /*#__PURE__*/function (enrollmentStatus) {
    enrollmentStatus["ACTIVE"] = "ACTIVE";
    enrollmentStatus["COMPLETED"] = "COMPLETED";
    enrollmentStatus["CANCELLED"] = "CANCELLED";
    return enrollmentStatus;
  }({});
  _ProgramStageQueryCriteria.enrollmentStatus = enrollmentStatus;
  let eventStatus = /*#__PURE__*/function (eventStatus) {
    eventStatus["ACTIVE"] = "ACTIVE";
    eventStatus["COMPLETED"] = "COMPLETED";
    eventStatus["VISITED"] = "VISITED";
    eventStatus["SCHEDULE"] = "SCHEDULE";
    eventStatus["OVERDUE"] = "OVERDUE";
    eventStatus["SKIPPED"] = "SKIPPED";
    return eventStatus;
  }({});
  _ProgramStageQueryCriteria.eventStatus = eventStatus;
  let ouMode = /*#__PURE__*/function (ouMode) {
    ouMode["SELECTED"] = "SELECTED";
    ouMode["CHILDREN"] = "CHILDREN";
    ouMode["DESCENDANTS"] = "DESCENDANTS";
    ouMode["ACCESSIBLE"] = "ACCESSIBLE";
    ouMode["CAPTURE"] = "CAPTURE";
    ouMode["ALL"] = "ALL";
    return ouMode;
  }({});
  _ProgramStageQueryCriteria.ouMode = ouMode;
})(ProgramStageQueryCriteria || (ProgramStageQueryCriteria = {}));
export let ProgramTrackedEntityAttribute;
(function (_ProgramTrackedEntityAttribute) {
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _ProgramTrackedEntityAttribute.valueType = valueType;
})(ProgramTrackedEntityAttribute || (ProgramTrackedEntityAttribute = {}));
export let Property;
(function (_Property) {
  let itemPropertyType = /*#__PURE__*/function (itemPropertyType) {
    itemPropertyType["IDENTIFIER"] = "IDENTIFIER";
    itemPropertyType["TEXT"] = "TEXT";
    itemPropertyType["NUMBER"] = "NUMBER";
    itemPropertyType["INTEGER"] = "INTEGER";
    itemPropertyType["BOOLEAN"] = "BOOLEAN";
    itemPropertyType["USERNAME"] = "USERNAME";
    itemPropertyType["EMAIL"] = "EMAIL";
    itemPropertyType["PASSWORD"] = "PASSWORD";
    itemPropertyType["URL"] = "URL";
    itemPropertyType["DATE"] = "DATE";
    itemPropertyType["PHONENUMBER"] = "PHONENUMBER";
    itemPropertyType["GEOLOCATION"] = "GEOLOCATION";
    itemPropertyType["COLOR"] = "COLOR";
    itemPropertyType["CONSTANT"] = "CONSTANT";
    itemPropertyType["COMPLEX"] = "COMPLEX";
    itemPropertyType["COLLECTION"] = "COLLECTION";
    itemPropertyType["REFERENCE"] = "REFERENCE";
    itemPropertyType["DEFAULT"] = "DEFAULT";
    return itemPropertyType;
  }({});
  _Property.itemPropertyType = itemPropertyType;
  let propertyType = /*#__PURE__*/function (propertyType) {
    propertyType["IDENTIFIER"] = "IDENTIFIER";
    propertyType["TEXT"] = "TEXT";
    propertyType["NUMBER"] = "NUMBER";
    propertyType["INTEGER"] = "INTEGER";
    propertyType["BOOLEAN"] = "BOOLEAN";
    propertyType["USERNAME"] = "USERNAME";
    propertyType["EMAIL"] = "EMAIL";
    propertyType["PASSWORD"] = "PASSWORD";
    propertyType["URL"] = "URL";
    propertyType["DATE"] = "DATE";
    propertyType["PHONENUMBER"] = "PHONENUMBER";
    propertyType["GEOLOCATION"] = "GEOLOCATION";
    propertyType["COLOR"] = "COLOR";
    propertyType["CONSTANT"] = "CONSTANT";
    propertyType["COMPLEX"] = "COMPLEX";
    propertyType["COLLECTION"] = "COLLECTION";
    propertyType["REFERENCE"] = "REFERENCE";
    propertyType["DEFAULT"] = "DEFAULT";
    return propertyType;
  }({});
  _Property.propertyType = propertyType;
})(Property || (Property = {}));
export let QueryModifiers;
(function (_QueryModifiers) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _QueryModifiers.aggregationType = aggregationType;
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _QueryModifiers.valueType = valueType;
})(QueryModifiers || (QueryModifiers = {}));
export let RelationshipConstraint;
(function (_RelationshipConstraint) {
  let relationshipEntity = /*#__PURE__*/function (relationshipEntity) {
    relationshipEntity["TRACKED_ENTITY_INSTANCE"] = "TRACKED_ENTITY_INSTANCE";
    relationshipEntity["PROGRAM_INSTANCE"] = "PROGRAM_INSTANCE";
    relationshipEntity["PROGRAM_STAGE_INSTANCE"] = "PROGRAM_STAGE_INSTANCE";
    return relationshipEntity;
  }({});
  _RelationshipConstraint.relationshipEntity = relationshipEntity;
})(RelationshipConstraint || (RelationshipConstraint = {}));
export let RelationshipItemInfo;
(function (_RelationshipItemInfo) {
  let status = /*#__PURE__*/function (status) {
    status["ACTIVE"] = "ACTIVE";
    status["COMPLETED"] = "COMPLETED";
    status["CANCELLED"] = "CANCELLED";
    return status;
  }({});
  _RelationshipItemInfo.status = status;
})(RelationshipItemInfo || (RelationshipItemInfo = {}));
export let Report;
(function (_Report) {
  let cacheStrategy = /*#__PURE__*/function (cacheStrategy) {
    cacheStrategy["NO_CACHE"] = "NO_CACHE";
    cacheStrategy["CACHE_1_MINUTE"] = "CACHE_1_MINUTE";
    cacheStrategy["CACHE_5_MINUTES"] = "CACHE_5_MINUTES";
    cacheStrategy["CACHE_10_MINUTES"] = "CACHE_10_MINUTES";
    cacheStrategy["CACHE_15_MINUTES"] = "CACHE_15_MINUTES";
    cacheStrategy["CACHE_30_MINUTES"] = "CACHE_30_MINUTES";
    cacheStrategy["CACHE_1_HOUR"] = "CACHE_1_HOUR";
    cacheStrategy["CACHE_6AM_TOMORROW"] = "CACHE_6AM_TOMORROW";
    cacheStrategy["CACHE_TWO_WEEKS"] = "CACHE_TWO_WEEKS";
    cacheStrategy["RESPECT_SYSTEM_SETTING"] = "RESPECT_SYSTEM_SETTING";
    return cacheStrategy;
  }({});
  _Report.cacheStrategy = cacheStrategy;
  let type = /*#__PURE__*/function (type) {
    type["JASPER_REPORT_TABLE"] = "JASPER_REPORT_TABLE";
    type["JASPER_JDBC"] = "JASPER_JDBC";
    type["HTML"] = "HTML";
    return type;
  }({});
  _Report.type = type;
})(Report || (Report = {}));
export let ReportingRate;
(function (_ReportingRate) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _ReportingRate.aggregationType = aggregationType;
  let metric = /*#__PURE__*/function (metric) {
    metric["REPORTING_RATE"] = "REPORTING_RATE";
    metric["REPORTING_RATE_ON_TIME"] = "REPORTING_RATE_ON_TIME";
    metric["ACTUAL_REPORTS"] = "ACTUAL_REPORTS";
    metric["ACTUAL_REPORTS_ON_TIME"] = "ACTUAL_REPORTS_ON_TIME";
    metric["EXPECTED_REPORTS"] = "EXPECTED_REPORTS";
    return metric;
  }({});
  _ReportingRate.metric = metric;
})(ReportingRate || (ReportingRate = {}));
export let SchedulerEntry;
(function (_SchedulerEntry) {
  let status = /*#__PURE__*/function (status) {
    status["RUNNING"] = "RUNNING";
    status["COMPLETED"] = "COMPLETED";
    status["STOPPED"] = "STOPPED";
    status["SCHEDULED"] = "SCHEDULED";
    status["DISABLED"] = "DISABLED";
    status["FAILED"] = "FAILED";
    status["NOT_STARTED"] = "NOT_STARTED";
    return status;
  }({});
  _SchedulerEntry.status = status;
})(SchedulerEntry || (SchedulerEntry = {}));
export let SchedulerEntryJob;
(function (_SchedulerEntryJob) {
  let status = /*#__PURE__*/function (status) {
    status["RUNNING"] = "RUNNING";
    status["COMPLETED"] = "COMPLETED";
    status["STOPPED"] = "STOPPED";
    status["SCHEDULED"] = "SCHEDULED";
    status["DISABLED"] = "DISABLED";
    status["FAILED"] = "FAILED";
    status["NOT_STARTED"] = "NOT_STARTED";
    return status;
  }({});
  _SchedulerEntryJob.status = status;
  let type = /*#__PURE__*/function (type) {
    type["DATA_STATISTICS"] = "DATA_STATISTICS";
    type["DATA_INTEGRITY"] = "DATA_INTEGRITY";
    type["RESOURCE_TABLE"] = "RESOURCE_TABLE";
    type["ANALYTICS_TABLE"] = "ANALYTICS_TABLE";
    type["CONTINUOUS_ANALYTICS_TABLE"] = "CONTINUOUS_ANALYTICS_TABLE";
    type["DATA_SYNC"] = "DATA_SYNC";
    type["TRACKER_PROGRAMS_DATA_SYNC"] = "TRACKER_PROGRAMS_DATA_SYNC";
    type["EVENT_PROGRAMS_DATA_SYNC"] = "EVENT_PROGRAMS_DATA_SYNC";
    type["FILE_RESOURCE_CLEANUP"] = "FILE_RESOURCE_CLEANUP";
    type["IMAGE_PROCESSING"] = "IMAGE_PROCESSING";
    type["META_DATA_SYNC"] = "META_DATA_SYNC";
    type["AGGREGATE_DATA_EXCHANGE"] = "AGGREGATE_DATA_EXCHANGE";
    type["SMS_SEND"] = "SMS_SEND";
    type["SEND_SCHEDULED_MESSAGE"] = "SEND_SCHEDULED_MESSAGE";
    type["PROGRAM_NOTIFICATIONS"] = "PROGRAM_NOTIFICATIONS";
    type["VALIDATION_RESULTS_NOTIFICATION"] = "VALIDATION_RESULTS_NOTIFICATION";
    type["CREDENTIALS_EXPIRY_ALERT"] = "CREDENTIALS_EXPIRY_ALERT";
    type["MONITORING"] = "MONITORING";
    type["PUSH_ANALYSIS"] = "PUSH_ANALYSIS";
    type["TRACKER_SEARCH_OPTIMIZATION"] = "TRACKER_SEARCH_OPTIMIZATION";
    type["PREDICTOR"] = "PREDICTOR";
    type["DATA_SET_NOTIFICATION"] = "DATA_SET_NOTIFICATION";
    type["REMOVE_USED_OR_EXPIRED_RESERVED_VALUES"] = "REMOVE_USED_OR_EXPIRED_RESERVED_VALUES";
    type["TRACKER_IMPORT_JOB"] = "TRACKER_IMPORT_JOB";
    type["TRACKER_IMPORT_NOTIFICATION_JOB"] = "TRACKER_IMPORT_NOTIFICATION_JOB";
    type["TRACKER_IMPORT_RULE_ENGINE_JOB"] = "TRACKER_IMPORT_RULE_ENGINE_JOB";
    type["MATERIALIZED_SQL_VIEW_UPDATE"] = "MATERIALIZED_SQL_VIEW_UPDATE";
    type["LOCK_EXCEPTION_CLEANUP"] = "LOCK_EXCEPTION_CLEANUP";
    type["LEADER_ELECTION"] = "LEADER_ELECTION";
    type["LEADER_RENEWAL"] = "LEADER_RENEWAL";
    type["COMPLETE_DATA_SET_REGISTRATION_IMPORT"] = "COMPLETE_DATA_SET_REGISTRATION_IMPORT";
    type["DATAVALUE_IMPORT_INTERNAL"] = "DATAVALUE_IMPORT_INTERNAL";
    type["METADATA_IMPORT"] = "METADATA_IMPORT";
    type["DATAVALUE_IMPORT"] = "DATAVALUE_IMPORT";
    type["GEOJSON_IMPORT"] = "GEOJSON_IMPORT";
    type["EVENT_IMPORT"] = "EVENT_IMPORT";
    type["ENROLLMENT_IMPORT"] = "ENROLLMENT_IMPORT";
    type["TEI_IMPORT"] = "TEI_IMPORT";
    type["DISABLE_INACTIVE_USERS"] = "DISABLE_INACTIVE_USERS";
    type["ACCOUNT_EXPIRY_ALERT"] = "ACCOUNT_EXPIRY_ALERT";
    type["SYSTEM_VERSION_UPDATE_CHECK"] = "SYSTEM_VERSION_UPDATE_CHECK";
    type["TEST"] = "TEST";
    type["MOCK"] = "MOCK";
    type["GML_IMPORT"] = "GML_IMPORT";
    type["ANALYTICSTABLE_UPDATE"] = "ANALYTICSTABLE_UPDATE";
    type["PROGRAM_DATA_SYNC"] = "PROGRAM_DATA_SYNC";
    return type;
  }({});
  _SchedulerEntryJob.type = type;
})(SchedulerEntryJob || (SchedulerEntryJob = {}));
export let Series;
(function (_Series) {
  let type = /*#__PURE__*/function (type) {
    type["COLUMN"] = "COLUMN";
    type["STACKED_COLUMN"] = "STACKED_COLUMN";
    type["BAR"] = "BAR";
    type["STACKED_BAR"] = "STACKED_BAR";
    type["LINE"] = "LINE";
    type["AREA"] = "AREA";
    type["STACKED_AREA"] = "STACKED_AREA";
    type["PIE"] = "PIE";
    type["RADAR"] = "RADAR";
    type["GAUGE"] = "GAUGE";
    type["YEAR_OVER_YEAR_LINE"] = "YEAR_OVER_YEAR_LINE";
    type["YEAR_OVER_YEAR_COLUMN"] = "YEAR_OVER_YEAR_COLUMN";
    type["SCATTER"] = "SCATTER";
    type["BUBBLE"] = "BUBBLE";
    type["SINGLE_VALUE"] = "SINGLE_VALUE";
    type["PIVOT_TABLE"] = "PIVOT_TABLE";
    return type;
  }({});
  _Series.type = type;
})(Series || (Series = {}));
export let SimpleDimension;
(function (_SimpleDimension) {
  let parent = /*#__PURE__*/function (parent) {
    parent["COLUMN"] = "COLUMN";
    parent["ROW"] = "ROW";
    parent["FILTER"] = "FILTER";
    return parent;
  }({});
  _SimpleDimension.parent = parent;
})(SimpleDimension || (SimpleDimension = {}));
export let SMPPGatewayConfig;
(function (_SMPPGatewayConfig) {
  let bindType = /*#__PURE__*/function (bindType) {
    bindType["BIND_TX"] = "BIND_TX";
    bindType["BIND_RX"] = "BIND_RX";
    bindType["BIND_TRX"] = "BIND_TRX";
    return bindType;
  }({});
  _SMPPGatewayConfig.bindType = bindType;
  let numberPlanIndicator = /*#__PURE__*/function (numberPlanIndicator) {
    numberPlanIndicator["UNKNOWN"] = "UNKNOWN";
    numberPlanIndicator["ISDN"] = "ISDN";
    numberPlanIndicator["DATA"] = "DATA";
    numberPlanIndicator["TELEX"] = "TELEX";
    numberPlanIndicator["LAND_MOBILE"] = "LAND_MOBILE";
    numberPlanIndicator["NATIONAL"] = "NATIONAL";
    numberPlanIndicator["PRIVATE"] = "PRIVATE";
    numberPlanIndicator["ERMES"] = "ERMES";
    numberPlanIndicator["INTERNET"] = "INTERNET";
    numberPlanIndicator["WAP"] = "WAP";
    return numberPlanIndicator;
  }({});
  _SMPPGatewayConfig.numberPlanIndicator = numberPlanIndicator;
  let typeOfNumber = /*#__PURE__*/function (typeOfNumber) {
    typeOfNumber["UNKNOWN"] = "UNKNOWN";
    typeOfNumber["INTERNATIONAL"] = "INTERNATIONAL";
    typeOfNumber["NATIONAL"] = "NATIONAL";
    typeOfNumber["NETWORK_SPECIFIC"] = "NETWORK_SPECIFIC";
    typeOfNumber["SUBSCRIBER_NUMBER"] = "SUBSCRIBER_NUMBER";
    typeOfNumber["ALPHANUMERIC"] = "ALPHANUMERIC";
    typeOfNumber["ABBREVIATED"] = "ABBREVIATED";
    return typeOfNumber;
  }({});
  _SMPPGatewayConfig.typeOfNumber = typeOfNumber;
})(SMPPGatewayConfig || (SMPPGatewayConfig = {}));
export let SMSCommand;
(function (_SMSCommand) {
  let completenessMethod = /*#__PURE__*/function (completenessMethod) {
    completenessMethod["ALL_DATAVALUE"] = "ALL_DATAVALUE";
    completenessMethod["AT_LEAST_ONE_DATAVALUE"] = "AT_LEAST_ONE_DATAVALUE";
    completenessMethod["DO_NOT_MARK_COMPLETE"] = "DO_NOT_MARK_COMPLETE";
    return completenessMethod;
  }({});
  _SMSCommand.completenessMethod = completenessMethod;
  let parserType = /*#__PURE__*/function (parserType) {
    parserType["KEY_VALUE_PARSER"] = "KEY_VALUE_PARSER";
    parserType["J2ME_PARSER"] = "J2ME_PARSER";
    parserType["ALERT_PARSER"] = "ALERT_PARSER";
    parserType["UNREGISTERED_PARSER"] = "UNREGISTERED_PARSER";
    parserType["TRACKED_ENTITY_REGISTRATION_PARSER"] = "TRACKED_ENTITY_REGISTRATION_PARSER";
    parserType["PROGRAM_STAGE_DATAENTRY_PARSER"] = "PROGRAM_STAGE_DATAENTRY_PARSER";
    parserType["EVENT_REGISTRATION_PARSER"] = "EVENT_REGISTRATION_PARSER";
    return parserType;
  }({});
  _SMSCommand.parserType = parserType;
})(SMSCommand || (SMSCommand = {}));
export let Sorting;
(function (_Sorting) {
  let direction = /*#__PURE__*/function (direction) {
    direction["ASC"] = "ASC";
    direction["DESC"] = "DESC";
    return direction;
  }({});
  _Sorting.direction = direction;
})(Sorting || (Sorting = {}));
export let SqlView;
(function (_SqlView) {
  let cacheStrategy = /*#__PURE__*/function (cacheStrategy) {
    cacheStrategy["NO_CACHE"] = "NO_CACHE";
    cacheStrategy["CACHE_1_MINUTE"] = "CACHE_1_MINUTE";
    cacheStrategy["CACHE_5_MINUTES"] = "CACHE_5_MINUTES";
    cacheStrategy["CACHE_10_MINUTES"] = "CACHE_10_MINUTES";
    cacheStrategy["CACHE_15_MINUTES"] = "CACHE_15_MINUTES";
    cacheStrategy["CACHE_30_MINUTES"] = "CACHE_30_MINUTES";
    cacheStrategy["CACHE_1_HOUR"] = "CACHE_1_HOUR";
    cacheStrategy["CACHE_6AM_TOMORROW"] = "CACHE_6AM_TOMORROW";
    cacheStrategy["CACHE_TWO_WEEKS"] = "CACHE_TWO_WEEKS";
    cacheStrategy["RESPECT_SYSTEM_SETTING"] = "RESPECT_SYSTEM_SETTING";
    return cacheStrategy;
  }({});
  _SqlView.cacheStrategy = cacheStrategy;
  let type = /*#__PURE__*/function (type) {
    type["VIEW"] = "VIEW";
    type["MATERIALIZED_VIEW"] = "MATERIALIZED_VIEW";
    type["QUERY"] = "QUERY";
    return type;
  }({});
  _SqlView.type = type;
})(SqlView || (SqlView = {}));
export let Stage;
(function (_Stage) {
  let onFailure = /*#__PURE__*/function (onFailure) {
    onFailure["PARENT"] = "PARENT";
    onFailure["FAIL"] = "FAIL";
    onFailure["SKIP_STAGE"] = "SKIP_STAGE";
    onFailure["SKIP_ITEM"] = "SKIP_ITEM";
    onFailure["SKIP_ITEM_OUTLIER"] = "SKIP_ITEM_OUTLIER";
    return onFailure;
  }({});
  _Stage.onFailure = onFailure;
  let status = /*#__PURE__*/function (status) {
    status["RUNNING"] = "RUNNING";
    status["SUCCESS"] = "SUCCESS";
    status["ERROR"] = "ERROR";
    status["CANCELLED"] = "CANCELLED";
    return status;
  }({});
  _Stage.status = status;
})(Stage || (Stage = {}));
export let StyledObject;
(function (_StyledObject) {
  let textMode = /*#__PURE__*/function (textMode) {
    textMode["AUTO"] = "AUTO";
    textMode["CUSTOM"] = "CUSTOM";
    return textMode;
  }({});
  _StyledObject.textMode = textMode;
})(StyledObject || (StyledObject = {}));
export let TestJobParameters;
(function (_TestJobParameters) {
  let failWithPolicy = /*#__PURE__*/function (failWithPolicy) {
    failWithPolicy["PARENT"] = "PARENT";
    failWithPolicy["FAIL"] = "FAIL";
    failWithPolicy["SKIP_STAGE"] = "SKIP_STAGE";
    failWithPolicy["SKIP_ITEM"] = "SKIP_ITEM";
    failWithPolicy["SKIP_ITEM_OUTLIER"] = "SKIP_ITEM_OUTLIER";
    return failWithPolicy;
  }({});
  _TestJobParameters.failWithPolicy = failWithPolicy;
})(TestJobParameters || (TestJobParameters = {}));
export let TrackedEntityAttribute;
(function (_TrackedEntityAttribute) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _TrackedEntityAttribute.aggregationType = aggregationType;
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _TrackedEntityAttribute.valueType = valueType;
})(TrackedEntityAttribute || (TrackedEntityAttribute = {}));
export let TrackedEntityFilter;
(function (_TrackedEntityFilter) {
  let enrollmentStatus = /*#__PURE__*/function (enrollmentStatus) {
    enrollmentStatus["ACTIVE"] = "ACTIVE";
    enrollmentStatus["COMPLETED"] = "COMPLETED";
    enrollmentStatus["CANCELLED"] = "CANCELLED";
    return enrollmentStatus;
  }({});
  _TrackedEntityFilter.enrollmentStatus = enrollmentStatus;
})(TrackedEntityFilter || (TrackedEntityFilter = {}));
export let TrackedEntityInstance;
(function (_TrackedEntityInstance) {
  let featureType = /*#__PURE__*/function (featureType) {
    featureType["NONE"] = "NONE";
    featureType["MULTI_POLYGON"] = "MULTI_POLYGON";
    featureType["POLYGON"] = "POLYGON";
    featureType["POINT"] = "POINT";
    featureType["SYMBOL"] = "SYMBOL";
    return featureType;
  }({});
  _TrackedEntityInstance.featureType = featureType;
})(TrackedEntityInstance || (TrackedEntityInstance = {}));
export let TrackedEntityType;
(function (_TrackedEntityType) {
  let featureType = /*#__PURE__*/function (featureType) {
    featureType["NONE"] = "NONE";
    featureType["MULTI_POLYGON"] = "MULTI_POLYGON";
    featureType["POLYGON"] = "POLYGON";
    featureType["POINT"] = "POINT";
    featureType["SYMBOL"] = "SYMBOL";
    return featureType;
  }({});
  _TrackedEntityType.featureType = featureType;
})(TrackedEntityType || (TrackedEntityType = {}));
export let TrackedEntityTypeAttribute;
(function (_TrackedEntityTypeAttribute) {
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _TrackedEntityTypeAttribute.valueType = valueType;
})(TrackedEntityTypeAttribute || (TrackedEntityTypeAttribute = {}));
export let TrackerAttribute;
(function (_TrackerAttribute) {
  let valueType = /*#__PURE__*/function (valueType) {
    valueType["TEXT"] = "TEXT";
    valueType["LONG_TEXT"] = "LONG_TEXT";
    valueType["MULTI_TEXT"] = "MULTI_TEXT";
    valueType["LETTER"] = "LETTER";
    valueType["PHONE_NUMBER"] = "PHONE_NUMBER";
    valueType["EMAIL"] = "EMAIL";
    valueType["BOOLEAN"] = "BOOLEAN";
    valueType["TRUE_ONLY"] = "TRUE_ONLY";
    valueType["DATE"] = "DATE";
    valueType["DATETIME"] = "DATETIME";
    valueType["TIME"] = "TIME";
    valueType["NUMBER"] = "NUMBER";
    valueType["UNIT_INTERVAL"] = "UNIT_INTERVAL";
    valueType["PERCENTAGE"] = "PERCENTAGE";
    valueType["INTEGER"] = "INTEGER";
    valueType["INTEGER_POSITIVE"] = "INTEGER_POSITIVE";
    valueType["INTEGER_NEGATIVE"] = "INTEGER_NEGATIVE";
    valueType["INTEGER_ZERO_OR_POSITIVE"] = "INTEGER_ZERO_OR_POSITIVE";
    valueType["TRACKER_ASSOCIATE"] = "TRACKER_ASSOCIATE";
    valueType["USERNAME"] = "USERNAME";
    valueType["COORDINATE"] = "COORDINATE";
    valueType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    valueType["REFERENCE"] = "REFERENCE";
    valueType["AGE"] = "AGE";
    valueType["URL"] = "URL";
    valueType["FILE_RESOURCE"] = "FILE_RESOURCE";
    valueType["IMAGE"] = "IMAGE";
    valueType["GEOJSON"] = "GEOJSON";
    return valueType;
  }({});
  _TrackerAttribute.valueType = valueType;
})(TrackerAttribute || (TrackerAttribute = {}));
export let TrackerEvent;
(function (_TrackerEvent) {
  let enrollmentStatus = /*#__PURE__*/function (enrollmentStatus) {
    enrollmentStatus["ACTIVE"] = "ACTIVE";
    enrollmentStatus["COMPLETED"] = "COMPLETED";
    enrollmentStatus["CANCELLED"] = "CANCELLED";
    return enrollmentStatus;
  }({});
  _TrackerEvent.enrollmentStatus = enrollmentStatus;
  let programType = /*#__PURE__*/function (programType) {
    programType["WITH_REGISTRATION"] = "WITH_REGISTRATION";
    programType["WITHOUT_REGISTRATION"] = "WITHOUT_REGISTRATION";
    return programType;
  }({});
  _TrackerEvent.programType = programType;
  let status = /*#__PURE__*/function (status) {
    status["ACTIVE"] = "ACTIVE";
    status["COMPLETED"] = "COMPLETED";
    status["VISITED"] = "VISITED";
    status["SCHEDULE"] = "SCHEDULE";
    status["OVERDUE"] = "OVERDUE";
    status["SKIPPED"] = "SKIPPED";
    return status;
  }({});
  _TrackerEvent.status = status;
})(TrackerEvent || (TrackerEvent = {}));
export let TrackerIdSchemeParam;
(function (_TrackerIdSchemeParam) {
  let idScheme = /*#__PURE__*/function (idScheme) {
    idScheme["UID"] = "UID";
    idScheme["CODE"] = "CODE";
    idScheme["NAME"] = "NAME";
    idScheme["ATTRIBUTE"] = "ATTRIBUTE";
    return idScheme;
  }({});
  _TrackerIdSchemeParam.idScheme = idScheme;
})(TrackerIdSchemeParam || (TrackerIdSchemeParam = {}));
export let TrackerImportReport;
(function (_TrackerImportReport) {
  let status = /*#__PURE__*/function (status) {
    status["OK"] = "OK";
    status["WARNING"] = "WARNING";
    status["ERROR"] = "ERROR";
    return status;
  }({});
  _TrackerImportReport.status = status;
})(TrackerImportReport || (TrackerImportReport = {}));
export let TrackerTypeReport;
(function (_TrackerTypeReport) {
  let trackerType = /*#__PURE__*/function (trackerType) {
    trackerType["TRACKED_ENTITY"] = "TRACKED_ENTITY";
    trackerType["ENROLLMENT"] = "ENROLLMENT";
    trackerType["EVENT"] = "EVENT";
    trackerType["RELATIONSHIP"] = "RELATIONSHIP";
    return trackerType;
  }({});
  _TrackerTypeReport.trackerType = trackerType;
})(TrackerTypeReport || (TrackerTypeReport = {}));
export let UserSettings;
(function (_UserSettings) {
  let analysisDisplayProperty = /*#__PURE__*/function (analysisDisplayProperty) {
    analysisDisplayProperty["NAME"] = "NAME";
    analysisDisplayProperty["SHORTNAME"] = "SHORTNAME";
    return analysisDisplayProperty;
  }({});
  _UserSettings.analysisDisplayProperty = analysisDisplayProperty;
})(UserSettings || (UserSettings = {}));
export let ValidationNotificationTemplate;
(function (_ValidationNotificationTemplate) {
  let sendStrategy = /*#__PURE__*/function (sendStrategy) {
    sendStrategy["COLLECTIVE_SUMMARY"] = "COLLECTIVE_SUMMARY";
    sendStrategy["SINGLE_NOTIFICATION"] = "SINGLE_NOTIFICATION";
    return sendStrategy;
  }({});
  _ValidationNotificationTemplate.sendStrategy = sendStrategy;
})(ValidationNotificationTemplate || (ValidationNotificationTemplate = {}));
export let ValidationRule;
(function (_ValidationRule) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _ValidationRule.aggregationType = aggregationType;
  let dimensionItemType = /*#__PURE__*/function (dimensionItemType) {
    dimensionItemType["DATA_ELEMENT"] = "DATA_ELEMENT";
    dimensionItemType["DATA_ELEMENT_OPERAND"] = "DATA_ELEMENT_OPERAND";
    dimensionItemType["INDICATOR"] = "INDICATOR";
    dimensionItemType["REPORTING_RATE"] = "REPORTING_RATE";
    dimensionItemType["PROGRAM_DATA_ELEMENT"] = "PROGRAM_DATA_ELEMENT";
    dimensionItemType["PROGRAM_ATTRIBUTE"] = "PROGRAM_ATTRIBUTE";
    dimensionItemType["PROGRAM_INDICATOR"] = "PROGRAM_INDICATOR";
    dimensionItemType["PERIOD"] = "PERIOD";
    dimensionItemType["ORGANISATION_UNIT"] = "ORGANISATION_UNIT";
    dimensionItemType["CATEGORY_OPTION"] = "CATEGORY_OPTION";
    dimensionItemType["OPTION_GROUP"] = "OPTION_GROUP";
    dimensionItemType["DATA_ELEMENT_GROUP"] = "DATA_ELEMENT_GROUP";
    dimensionItemType["ORGANISATION_UNIT_GROUP"] = "ORGANISATION_UNIT_GROUP";
    dimensionItemType["CATEGORY_OPTION_GROUP"] = "CATEGORY_OPTION_GROUP";
    dimensionItemType["EXPRESSION_DIMENSION_ITEM"] = "EXPRESSION_DIMENSION_ITEM";
    dimensionItemType["SUBEXPRESSION_DIMENSION_ITEM"] = "SUBEXPRESSION_DIMENSION_ITEM";
    return dimensionItemType;
  }({});
  _ValidationRule.dimensionItemType = dimensionItemType;
  let importance = /*#__PURE__*/function (importance) {
    importance["HIGH"] = "HIGH";
    importance["MEDIUM"] = "MEDIUM";
    importance["LOW"] = "LOW";
    return importance;
  }({});
  _ValidationRule.importance = importance;
  let operator = /*#__PURE__*/function (operator) {
    operator["EQUAL_TO"] = "equal_to";
    operator["NOT_EQUAL_TO"] = "not_equal_to";
    operator["GREATER_THAN"] = "greater_than";
    operator["GREATER_THAN_OR_EQUAL_TO"] = "greater_than_or_equal_to";
    operator["LESS_THAN"] = "less_than";
    operator["LESS_THAN_OR_EQUAL_TO"] = "less_than_or_equal_to";
    operator["COMPULSORY_PAIR"] = "compulsory_pair";
    operator["EXCLUSIVE_PAIR"] = "exclusive_pair";
    return operator;
  }({});
  _ValidationRule.operator = operator;
  let periodType = /*#__PURE__*/function (periodType) {
    periodType["BI_MONTHLY"] = "BiMonthly";
    periodType["BI_WEEKLY"] = "BiWeekly";
    periodType["DAILY"] = "Daily";
    periodType["FINANCIAL_APRIL"] = "FinancialApril";
    periodType["FINANCIAL_JULY"] = "FinancialJuly";
    periodType["FINANCIAL_NOV"] = "FinancialNov";
    periodType["FINANCIAL_OCT"] = "FinancialOct";
    periodType["MONTHLY"] = "Monthly";
    periodType["QUARTERLY"] = "Quarterly";
    periodType["QUARTERLY_NOV"] = "QuarterlyNov";
    periodType["SIX_MONTHLY_APRIL"] = "SixMonthlyApril";
    periodType["SIX_MONTHLY_NOV"] = "SixMonthlyNov";
    periodType["SIX_MONTHLY"] = "SixMonthly";
    periodType["TWO_YEARLY"] = "TwoYearly";
    periodType["WEEKLY"] = "Weekly";
    periodType["WEEKLY_SATURDAY"] = "WeeklySaturday";
    periodType["WEEKLY_SUNDAY"] = "WeeklySunday";
    periodType["WEEKLY_THURSDAY"] = "WeeklyThursday";
    periodType["WEEKLY_WEDNESDAY"] = "WeeklyWednesday";
    periodType["YEARLY"] = "Yearly";
    return periodType;
  }({});
  _ValidationRule.periodType = periodType;
})(ValidationRule || (ValidationRule = {}));
export let Visualization;
(function (_Visualization) {
  let aggregationType = /*#__PURE__*/function (aggregationType) {
    aggregationType["SUM"] = "SUM";
    aggregationType["AVERAGE"] = "AVERAGE";
    aggregationType["AVERAGE_SUM_ORG_UNIT"] = "AVERAGE_SUM_ORG_UNIT";
    aggregationType["LAST"] = "LAST";
    aggregationType["LAST_AVERAGE_ORG_UNIT"] = "LAST_AVERAGE_ORG_UNIT";
    aggregationType["LAST_LAST_ORG_UNIT"] = "LAST_LAST_ORG_UNIT";
    aggregationType["LAST_IN_PERIOD"] = "LAST_IN_PERIOD";
    aggregationType["LAST_IN_PERIOD_AVERAGE_ORG_UNIT"] = "LAST_IN_PERIOD_AVERAGE_ORG_UNIT";
    aggregationType["FIRST"] = "FIRST";
    aggregationType["FIRST_AVERAGE_ORG_UNIT"] = "FIRST_AVERAGE_ORG_UNIT";
    aggregationType["FIRST_FIRST_ORG_UNIT"] = "FIRST_FIRST_ORG_UNIT";
    aggregationType["COUNT"] = "COUNT";
    aggregationType["STDDEV"] = "STDDEV";
    aggregationType["VARIANCE"] = "VARIANCE";
    aggregationType["MIN"] = "MIN";
    aggregationType["MAX"] = "MAX";
    aggregationType["MIN_SUM_ORG_UNIT"] = "MIN_SUM_ORG_UNIT";
    aggregationType["MAX_SUM_ORG_UNIT"] = "MAX_SUM_ORG_UNIT";
    aggregationType["NONE"] = "NONE";
    aggregationType["CUSTOM"] = "CUSTOM";
    aggregationType["DEFAULT"] = "DEFAULT";
    return aggregationType;
  }({});
  _Visualization.aggregationType = aggregationType;
  let digitGroupSeparator = /*#__PURE__*/function (digitGroupSeparator) {
    digitGroupSeparator["COMMA"] = "COMMA";
    digitGroupSeparator["SPACE"] = "SPACE";
    digitGroupSeparator["NONE"] = "NONE";
    return digitGroupSeparator;
  }({});
  _Visualization.digitGroupSeparator = digitGroupSeparator;
  let displayDensity = /*#__PURE__*/function (displayDensity) {
    displayDensity["COMFORTABLE"] = "COMFORTABLE";
    displayDensity["NORMAL"] = "NORMAL";
    displayDensity["COMPACT"] = "COMPACT";
    displayDensity["NONE"] = "NONE";
    return displayDensity;
  }({});
  _Visualization.displayDensity = displayDensity;
  let fontSize = /*#__PURE__*/function (fontSize) {
    fontSize["LARGE"] = "LARGE";
    fontSize["NORMAL"] = "NORMAL";
    fontSize["SMALL"] = "SMALL";
    return fontSize;
  }({});
  _Visualization.fontSize = fontSize;
  let hideEmptyRowItems = /*#__PURE__*/function (hideEmptyRowItems) {
    hideEmptyRowItems["NONE"] = "NONE";
    hideEmptyRowItems["BEFORE_FIRST"] = "BEFORE_FIRST";
    hideEmptyRowItems["AFTER_LAST"] = "AFTER_LAST";
    hideEmptyRowItems["BEFORE_FIRST_AFTER_LAST"] = "BEFORE_FIRST_AFTER_LAST";
    hideEmptyRowItems["ALL"] = "ALL";
    return hideEmptyRowItems;
  }({});
  _Visualization.hideEmptyRowItems = hideEmptyRowItems;
  let numberType = /*#__PURE__*/function (numberType) {
    numberType["VALUE"] = "VALUE";
    numberType["ROW_PERCENTAGE"] = "ROW_PERCENTAGE";
    numberType["COLUMN_PERCENTAGE"] = "COLUMN_PERCENTAGE";
    return numberType;
  }({});
  _Visualization.numberType = numberType;
  let regressionType = /*#__PURE__*/function (regressionType) {
    regressionType["NONE"] = "NONE";
    regressionType["LINEAR"] = "LINEAR";
    regressionType["POLYNOMIAL"] = "POLYNOMIAL";
    regressionType["LOESS"] = "LOESS";
    return regressionType;
  }({});
  _Visualization.regressionType = regressionType;
  let type = /*#__PURE__*/function (type) {
    type["COLUMN"] = "COLUMN";
    type["STACKED_COLUMN"] = "STACKED_COLUMN";
    type["BAR"] = "BAR";
    type["STACKED_BAR"] = "STACKED_BAR";
    type["LINE"] = "LINE";
    type["AREA"] = "AREA";
    type["STACKED_AREA"] = "STACKED_AREA";
    type["PIE"] = "PIE";
    type["RADAR"] = "RADAR";
    type["GAUGE"] = "GAUGE";
    type["YEAR_OVER_YEAR_LINE"] = "YEAR_OVER_YEAR_LINE";
    type["YEAR_OVER_YEAR_COLUMN"] = "YEAR_OVER_YEAR_COLUMN";
    type["SCATTER"] = "SCATTER";
    type["BUBBLE"] = "BUBBLE";
    type["SINGLE_VALUE"] = "SINGLE_VALUE";
    type["PIVOT_TABLE"] = "PIVOT_TABLE";
    return type;
  }({});
  _Visualization.type = type;
  let userOrgUnitType = /*#__PURE__*/function (userOrgUnitType) {
    userOrgUnitType["DATA_CAPTURE"] = "DATA_CAPTURE";
    userOrgUnitType["DATA_OUTPUT"] = "DATA_OUTPUT";
    userOrgUnitType["TEI_SEARCH"] = "TEI_SEARCH";
    return userOrgUnitType;
  }({});
  _Visualization.userOrgUnitType = userOrgUnitType;
})(Visualization || (Visualization = {}));
export let WebApp;
(function (_WebApp) {
  let appType = /*#__PURE__*/function (appType) {
    appType["APP"] = "APP";
    appType["RESOURCE"] = "RESOURCE";
    appType["DASHBOARD_WIDGET"] = "DASHBOARD_WIDGET";
    appType["TRACKER_DASHBOARD_WIDGET"] = "TRACKER_DASHBOARD_WIDGET";
    return appType;
  }({});
  _WebApp.appType = appType;
  let status = /*#__PURE__*/function (status) {
    status["OK"] = "OK";
    status["INVALID_BUNDLED_APP_OVERRIDE"] = "INVALID_BUNDLED_APP_OVERRIDE";
    status["INVALID_CORE_APP"] = "INVALID_CORE_APP";
    status["NAMESPACE_TAKEN"] = "NAMESPACE_TAKEN";
    status["INVALID_ZIP_FORMAT"] = "INVALID_ZIP_FORMAT";
    status["MISSING_MANIFEST"] = "MISSING_MANIFEST";
    status["INVALID_MANIFEST_JSON"] = "INVALID_MANIFEST_JSON";
    status["INSTALLATION_FAILED"] = "INSTALLATION_FAILED";
    status["NOT_FOUND"] = "NOT_FOUND";
    status["MISSING_SYSTEM_BASE_URL"] = "MISSING_SYSTEM_BASE_URL";
    status["APPROVED"] = "APPROVED";
    status["PENDING"] = "PENDING";
    status["NOT_APPROVED"] = "NOT_APPROVED";
    status["DELETION_IN_PROGRESS"] = "DELETION_IN_PROGRESS";
    return status;
  }({});
  _WebApp.status = status;
})(WebApp || (WebApp = {}));
export let WebMessage;
(function (_WebMessage) {
  let errorCode = /*#__PURE__*/function (errorCode) {
    errorCode["E1000"] = "E1000";
    errorCode["E1001"] = "E1001";
    errorCode["E1002"] = "E1002";
    errorCode["E1003"] = "E1003";
    errorCode["E1004"] = "E1004";
    errorCode["E1005"] = "E1005";
    errorCode["E1006"] = "E1006";
    errorCode["E1100"] = "E1100";
    errorCode["E1101"] = "E1101";
    errorCode["E1102"] = "E1102";
    errorCode["E1103"] = "E1103";
    errorCode["E1104"] = "E1104";
    errorCode["E1105"] = "E1105";
    errorCode["E1106"] = "E1106";
    errorCode["E1107"] = "E1107";
    errorCode["E1108"] = "E1108";
    errorCode["E1109"] = "E1109";
    errorCode["E1110"] = "E1110";
    errorCode["E1111"] = "E1111";
    errorCode["E1112"] = "E1112";
    errorCode["E1113"] = "E1113";
    errorCode["E1114"] = "E1114";
    errorCode["E1115"] = "E1115";
    errorCode["E1116"] = "E1116";
    errorCode["E1117"] = "E1117";
    errorCode["E1118"] = "E1118";
    errorCode["E1119"] = "E1119";
    errorCode["E1120"] = "E1120";
    errorCode["E1500"] = "E1500";
    errorCode["E1501"] = "E1501";
    errorCode["E1502"] = "E1502";
    errorCode["E1503"] = "E1503";
    errorCode["E1504"] = "E1504";
    errorCode["E1510"] = "E1510";
    errorCode["E1511"] = "E1511";
    errorCode["E1512"] = "E1512";
    errorCode["E1513"] = "E1513";
    errorCode["E1514"] = "E1514";
    errorCode["E1515"] = "E1515";
    errorCode["E1516"] = "E1516";
    errorCode["E1520"] = "E1520";
    errorCode["E1521"] = "E1521";
    errorCode["E1522"] = "E1522";
    errorCode["E1523"] = "E1523";
    errorCode["E2000"] = "E2000";
    errorCode["E2001"] = "E2001";
    errorCode["E2002"] = "E2002";
    errorCode["E2003"] = "E2003";
    errorCode["E2004"] = "E2004";
    errorCode["E2005"] = "E2005";
    errorCode["E2006"] = "E2006";
    errorCode["E2007"] = "E2007";
    errorCode["E2008"] = "E2008";
    errorCode["E2009"] = "E2009";
    errorCode["E2010"] = "E2010";
    errorCode["E2011"] = "E2011";
    errorCode["E2012"] = "E2012";
    errorCode["E2013"] = "E2013";
    errorCode["E2014"] = "E2014";
    errorCode["E2015"] = "E2015";
    errorCode["E2016"] = "E2016";
    errorCode["E2017"] = "E2017";
    errorCode["E2018"] = "E2018";
    errorCode["E2019"] = "E2019";
    errorCode["E2020"] = "E2020";
    errorCode["E2021"] = "E2021";
    errorCode["E2022"] = "E2022";
    errorCode["E2023"] = "E2023";
    errorCode["E2024"] = "E2024";
    errorCode["E2025"] = "E2025";
    errorCode["E2026"] = "E2026";
    errorCode["E2027"] = "E2027";
    errorCode["E2028"] = "E2028";
    errorCode["E2029"] = "E2029";
    errorCode["E2030"] = "E2030";
    errorCode["E2031"] = "E2031";
    errorCode["E2032"] = "E2032";
    errorCode["E2033"] = "E2033";
    errorCode["E2034"] = "E2034";
    errorCode["E2035"] = "E2035";
    errorCode["E2036"] = "E2036";
    errorCode["E2037"] = "E2037";
    errorCode["E2038"] = "E2038";
    errorCode["E2039"] = "E2039";
    errorCode["E2040"] = "E2040";
    errorCode["E2041"] = "E2041";
    errorCode["E2042"] = "E2042";
    errorCode["E2043"] = "E2043";
    errorCode["E2044"] = "E2044";
    errorCode["E2200"] = "E2200";
    errorCode["E2201"] = "E2201";
    errorCode["E2202"] = "E2202";
    errorCode["E2203"] = "E2203";
    errorCode["E2204"] = "E2204";
    errorCode["E2205"] = "E2205";
    errorCode["E2206"] = "E2206";
    errorCode["E2207"] = "E2207";
    errorCode["E2208"] = "E2208";
    errorCode["E2300"] = "E2300";
    errorCode["E2301"] = "E2301";
    errorCode["E3000"] = "E3000";
    errorCode["E3001"] = "E3001";
    errorCode["E3002"] = "E3002";
    errorCode["E3003"] = "E3003";
    errorCode["E3004"] = "E3004";
    errorCode["E3005"] = "E3005";
    errorCode["E3006"] = "E3006";
    errorCode["E3008"] = "E3008";
    errorCode["E3009"] = "E3009";
    errorCode["E3010"] = "E3010";
    errorCode["E3011"] = "E3011";
    errorCode["E3012"] = "E3012";
    errorCode["E3013"] = "E3013";
    errorCode["E3014"] = "E3014";
    errorCode["E3015"] = "E3015";
    errorCode["E3016"] = "E3016";
    errorCode["E3017"] = "E3017";
    errorCode["E3018"] = "E3018";
    errorCode["E3019"] = "E3019";
    errorCode["E3020"] = "E3020";
    errorCode["E3021"] = "E3021";
    errorCode["E3022"] = "E3022";
    errorCode["E3023"] = "E3023";
    errorCode["E3024"] = "E3024";
    errorCode["E3025"] = "E3025";
    errorCode["E3026"] = "E3026";
    errorCode["E3027"] = "E3027";
    errorCode["E3028"] = "E3028";
    errorCode["E3029"] = "E3029";
    errorCode["E3030"] = "E3030";
    errorCode["E3031"] = "E3031";
    errorCode["E3032"] = "E3032";
    errorCode["E3040"] = "E3040";
    errorCode["E4000"] = "E4000";
    errorCode["E4001"] = "E4001";
    errorCode["E4002"] = "E4002";
    errorCode["E4003"] = "E4003";
    errorCode["E4004"] = "E4004";
    errorCode["E4005"] = "E4005";
    errorCode["E4006"] = "E4006";
    errorCode["E4007"] = "E4007";
    errorCode["E4008"] = "E4008";
    errorCode["E4009"] = "E4009";
    errorCode["E4010"] = "E4010";
    errorCode["E4011"] = "E4011";
    errorCode["E4012"] = "E4012";
    errorCode["E4013"] = "E4013";
    errorCode["E4014"] = "E4014";
    errorCode["E4015"] = "E4015";
    errorCode["E4016"] = "E4016";
    errorCode["E4017"] = "E4017";
    errorCode["E4018"] = "E4018";
    errorCode["E4019"] = "E4019";
    errorCode["E4020"] = "E4020";
    errorCode["E4021"] = "E4021";
    errorCode["E4022"] = "E4022";
    errorCode["E4023"] = "E4023";
    errorCode["E4024"] = "E4024";
    errorCode["E4025"] = "E4025";
    errorCode["E4026"] = "E4026";
    errorCode["E4027"] = "E4027";
    errorCode["E4028"] = "E4028";
    errorCode["E4029"] = "E4029";
    errorCode["E4030"] = "E4030";
    errorCode["E4031"] = "E4031";
    errorCode["E4032"] = "E4032";
    errorCode["E4033"] = "E4033";
    errorCode["E4034"] = "E4034";
    errorCode["E4035"] = "E4035";
    errorCode["E4036"] = "E4036";
    errorCode["E4037"] = "E4037";
    errorCode["E4038"] = "E4038";
    errorCode["E4039"] = "E4039";
    errorCode["E4040"] = "E4040";
    errorCode["E4041"] = "E4041";
    errorCode["E4042"] = "E4042";
    errorCode["E4043"] = "E4043";
    errorCode["E4044"] = "E4044";
    errorCode["E4045"] = "E4045";
    errorCode["E4046"] = "E4046";
    errorCode["E4047"] = "E4047";
    errorCode["E4048"] = "E4048";
    errorCode["E4049"] = "E4049";
    errorCode["E4054"] = "E4054";
    errorCode["E4056"] = "E4056";
    errorCode["E4055"] = "E4055";
    errorCode["E4050"] = "E4050";
    errorCode["E4051"] = "E4051";
    errorCode["E4052"] = "E4052";
    errorCode["E4053"] = "E4053";
    errorCode["E4057"] = "E4057";
    errorCode["E4058"] = "E4058";
    errorCode["E4060"] = "E4060";
    errorCode["E4061"] = "E4061";
    errorCode["E4062"] = "E4062";
    errorCode["E4063"] = "E4063";
    errorCode["E4064"] = "E4064";
    errorCode["E4065"] = "E4065";
    errorCode["E4066"] = "E4066";
    errorCode["E4067"] = "E4067";
    errorCode["E4068"] = "E4068";
    errorCode["E4069"] = "E4069";
    errorCode["E4300"] = "E4300";
    errorCode["E4301"] = "E4301";
    errorCode["E4302"] = "E4302";
    errorCode["E4303"] = "E4303";
    errorCode["E4304"] = "E4304";
    errorCode["E4305"] = "E4305";
    errorCode["E4306"] = "E4306";
    errorCode["E4307"] = "E4307";
    errorCode["E4308"] = "E4308";
    errorCode["E4309"] = "E4309";
    errorCode["E4310"] = "E4310";
    errorCode["E4311"] = "E4311";
    errorCode["E4312"] = "E4312";
    errorCode["E4313"] = "E4313";
    errorCode["E4314"] = "E4314";
    errorCode["E4315"] = "E4315";
    errorCode["E5000"] = "E5000";
    errorCode["E5001"] = "E5001";
    errorCode["E5002"] = "E5002";
    errorCode["E5003"] = "E5003";
    errorCode["E5004"] = "E5004";
    errorCode["E5005"] = "E5005";
    errorCode["E5006"] = "E5006";
    errorCode["E5007"] = "E5007";
    errorCode["E5008"] = "E5008";
    errorCode["E6000"] = "E6000";
    errorCode["E6001"] = "E6001";
    errorCode["E6002"] = "E6002";
    errorCode["E6003"] = "E6003";
    errorCode["E6004"] = "E6004";
    errorCode["E6005"] = "E6005";
    errorCode["E6006"] = "E6006";
    errorCode["E6007"] = "E6007";
    errorCode["E6008"] = "E6008";
    errorCode["E6009"] = "E6009";
    errorCode["E6010"] = "E6010";
    errorCode["E6011"] = "E6011";
    errorCode["E6012"] = "E6012";
    errorCode["E6013"] = "E6013";
    errorCode["E6014"] = "E6014";
    errorCode["E6015"] = "E6015";
    errorCode["E6016"] = "E6016";
    errorCode["E6017"] = "E6017";
    errorCode["E6018"] = "E6018";
    errorCode["E6019"] = "E6019";
    errorCode["E6020"] = "E6020";
    errorCode["E6021"] = "E6021";
    errorCode["E6100"] = "E6100";
    errorCode["E6101"] = "E6101";
    errorCode["E6200"] = "E6200";
    errorCode["E6201"] = "E6201";
    errorCode["E6202"] = "E6202";
    errorCode["E6203"] = "E6203";
    errorCode["E6204"] = "E6204";
    errorCode["E6205"] = "E6205";
    errorCode["E6206"] = "E6206";
    errorCode["E6207"] = "E6207";
    errorCode["E6208"] = "E6208";
    errorCode["E6209"] = "E6209";
    errorCode["E6210"] = "E6210";
    errorCode["E6211"] = "E6211";
    errorCode["E6300"] = "E6300";
    errorCode["E6301"] = "E6301";
    errorCode["E6302"] = "E6302";
    errorCode["E6303"] = "E6303";
    errorCode["E6304"] = "E6304";
    errorCode["E6305"] = "E6305";
    errorCode["E7000"] = "E7000";
    errorCode["E7003"] = "E7003";
    errorCode["E7004"] = "E7004";
    errorCode["E7005"] = "E7005";
    errorCode["E7006"] = "E7006";
    errorCode["E7007"] = "E7007";
    errorCode["E7010"] = "E7010";
    errorCode["E7020"] = "E7020";
    errorCode["E7021"] = "E7021";
    errorCode["E7022"] = "E7022";
    errorCode["E7023"] = "E7023";
    errorCode["E7024"] = "E7024";
    errorCode["E7100"] = "E7100";
    errorCode["E7101"] = "E7101";
    errorCode["E7102"] = "E7102";
    errorCode["E7103"] = "E7103";
    errorCode["E7104"] = "E7104";
    errorCode["E7105"] = "E7105";
    errorCode["E7106"] = "E7106";
    errorCode["E7107"] = "E7107";
    errorCode["E7108"] = "E7108";
    errorCode["E7109"] = "E7109";
    errorCode["E7110"] = "E7110";
    errorCode["E7111"] = "E7111";
    errorCode["E7112"] = "E7112";
    errorCode["E7113"] = "E7113";
    errorCode["E7114"] = "E7114";
    errorCode["E7115"] = "E7115";
    errorCode["E7116"] = "E7116";
    errorCode["E7117"] = "E7117";
    errorCode["E7118"] = "E7118";
    errorCode["E7119"] = "E7119";
    errorCode["E7120"] = "E7120";
    errorCode["E7121"] = "E7121";
    errorCode["E7122"] = "E7122";
    errorCode["E7123"] = "E7123";
    errorCode["E7124"] = "E7124";
    errorCode["E7125"] = "E7125";
    errorCode["E7126"] = "E7126";
    errorCode["E7127"] = "E7127";
    errorCode["E7128"] = "E7128";
    errorCode["E7129"] = "E7129";
    errorCode["E7130"] = "E7130";
    errorCode["E7131"] = "E7131";
    errorCode["E7132"] = "E7132";
    errorCode["E7133"] = "E7133";
    errorCode["E7134"] = "E7134";
    errorCode["E7135"] = "E7135";
    errorCode["E7136"] = "E7136";
    errorCode["E7137"] = "E7137";
    errorCode["E7138"] = "E7138";
    errorCode["E7139"] = "E7139";
    errorCode["E7140"] = "E7140";
    errorCode["E7141"] = "E7141";
    errorCode["E7142"] = "E7142";
    errorCode["E7200"] = "E7200";
    errorCode["E7201"] = "E7201";
    errorCode["E7202"] = "E7202";
    errorCode["E7203"] = "E7203";
    errorCode["E7204"] = "E7204";
    errorCode["E7205"] = "E7205";
    errorCode["E7206"] = "E7206";
    errorCode["E7207"] = "E7207";
    errorCode["E7208"] = "E7208";
    errorCode["E7209"] = "E7209";
    errorCode["E7210"] = "E7210";
    errorCode["E7211"] = "E7211";
    errorCode["E7212"] = "E7212";
    errorCode["E7213"] = "E7213";
    errorCode["E7214"] = "E7214";
    errorCode["E7215"] = "E7215";
    errorCode["E7216"] = "E7216";
    errorCode["E7217"] = "E7217";
    errorCode["E7218"] = "E7218";
    errorCode["E7219"] = "E7219";
    errorCode["E7220"] = "E7220";
    errorCode["E7221"] = "E7221";
    errorCode["E7222"] = "E7222";
    errorCode["E7223"] = "E7223";
    errorCode["E7224"] = "E7224";
    errorCode["E7225"] = "E7225";
    errorCode["E7226"] = "E7226";
    errorCode["E7227"] = "E7227";
    errorCode["E7228"] = "E7228";
    errorCode["E7229"] = "E7229";
    errorCode["E7230"] = "E7230";
    errorCode["E7231"] = "E7231";
    errorCode["E7232"] = "E7232";
    errorCode["E7234"] = "E7234";
    errorCode["E7235"] = "E7235";
    errorCode["E7236"] = "E7236";
    errorCode["E7237"] = "E7237";
    errorCode["E7238"] = "E7238";
    errorCode["E7250"] = "E7250";
    errorCode["E7300"] = "E7300";
    errorCode["E7301"] = "E7301";
    errorCode["E7400"] = "E7400";
    errorCode["E7500"] = "E7500";
    errorCode["E7501"] = "E7501";
    errorCode["E7502"] = "E7502";
    errorCode["E7503"] = "E7503";
    errorCode["E7600"] = "E7600";
    errorCode["E7601"] = "E7601";
    errorCode["E7602"] = "E7602";
    errorCode["E7603"] = "E7603";
    errorCode["E7604"] = "E7604";
    errorCode["E7610"] = "E7610";
    errorCode["E7611"] = "E7611";
    errorCode["E7612"] = "E7612";
    errorCode["E7613"] = "E7613";
    errorCode["E7614"] = "E7614";
    errorCode["E7615"] = "E7615";
    errorCode["E7616"] = "E7616";
    errorCode["E7617"] = "E7617";
    errorCode["E7618"] = "E7618";
    errorCode["E7619"] = "E7619";
    errorCode["E7620"] = "E7620";
    errorCode["E7621"] = "E7621";
    errorCode["E7630"] = "E7630";
    errorCode["E7631"] = "E7631";
    errorCode["E7632"] = "E7632";
    errorCode["E7633"] = "E7633";
    errorCode["E7634"] = "E7634";
    errorCode["E7635"] = "E7635";
    errorCode["E7636"] = "E7636";
    errorCode["E7637"] = "E7637";
    errorCode["E7638"] = "E7638";
    errorCode["E7639"] = "E7639";
    errorCode["E7640"] = "E7640";
    errorCode["E7641"] = "E7641";
    errorCode["E7642"] = "E7642";
    errorCode["E7643"] = "E7643";
    errorCode["E7644"] = "E7644";
    errorCode["E7645"] = "E7645";
    errorCode["E7650"] = "E7650";
    errorCode["E7651"] = "E7651";
    errorCode["E7652"] = "E7652";
    errorCode["E7653"] = "E7653";
    errorCode["E7700"] = "E7700";
    errorCode["E7701"] = "E7701";
    errorCode["E7702"] = "E7702";
    errorCode["E7703"] = "E7703";
    errorCode["E7704"] = "E7704";
    errorCode["E7705"] = "E7705";
    errorCode["E7706"] = "E7706";
    errorCode["E7707"] = "E7707";
    errorCode["E7708"] = "E7708";
    errorCode["E7709"] = "E7709";
    errorCode["E7710"] = "E7710";
    errorCode["E7711"] = "E7711";
    errorCode["E7712"] = "E7712";
    return errorCode;
  }({});
  _WebMessage.errorCode = errorCode;
  let status = /*#__PURE__*/function (status) {
    status["OK"] = "OK";
    status["WARNING"] = "WARNING";
    status["ERROR"] = "ERROR";
    return status;
  }({});
  _WebMessage.status = status;
})(WebMessage || (WebMessage = {}));